<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Shell | Winse Blog]]></title>
  <link href="http://winse.github.io/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://winse.github.io/"/>
  <updated>2014-07-21T12:19:09+08:00</updated>
  <id>http://winse.github.io/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[让敲Shell命令高效起来]]></title>
    <link href="http://winse.github.io/blog/2013/09/19/let-shell-command-efficient/"/>
    <updated>2013-09-19T08:44:57+08:00</updated>
    <id>http://winse.github.io/blog/2013/09/19/let-shell-command-efficient</id>
    <content type="html"><![CDATA[<p>在刚上班的时刻，做过程序的部署工作，后面尽管工作中直接接触的机会很少。
但是一直对shell很敬（很牛）畏（太强太多），第一使用起来确实不是看几本书就能用好的，需要经常持久的使用，第二嘛命令太多个不用一段时间基本就忘记了。</p>

<p>来到新公司后，主要是后台代码的开发。尽管和部署挂不上什么关系，但再次遇到总有个想头-原来使用过去查查，算是自己使用linux过程中的一点总结。</p>

<h2>记住历史，温故而知新</h2>

<p>如果说是新人，可以通过历史学习前辈使用的命令。
作为维护人员，可以记录操作的命令，修改原有命令的部分再执行。</p>

<table>
<thead>
<tr>
<th style="text-align:left;"> 命令              </th>
<th style="text-align:left;"> 解释                   </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> <code>history</code>         </td>
<td style="text-align:left;">  </td>
</tr>
<tr>
<td style="text-align:left;"> <code>!!</code>              </td>
<td style="text-align:left;"> 执行上一条命令 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>!blah</code>           </td>
<td style="text-align:left;"> 执行最近的以 blah 开头的命令，如 !ls </td>
</tr>
<tr>
<td style="text-align:left;"> <code>!blah:p</code>         </td>
<td style="text-align:left;"> 仅打印输出，而不执行 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>!$</code>              </td>
<td style="text-align:left;"> 上一条命令的最后一个参数，与 Alt + . 相同 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>!$:p</code>            </td>
<td style="text-align:left;"> 打印输出 !$ 的内容 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>!*</code>              </td>
<td style="text-align:left;"> 上一条命令的所有参数 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>!*:p</code>            </td>
<td style="text-align:left;"> 打印输出 !* 的内容 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>^blah</code>           </td>
<td style="text-align:left;"> 删除上一条命令中的 blah </td>
</tr>
<tr>
<td style="text-align:left;"> <code>^blah^foo</code>       </td>
<td style="text-align:left;"> 将上一条命令中的 blah 替换为 foo </td>
</tr>
<tr>
<td style="text-align:left;"> <code>^blah^foo^</code>      </td>
<td style="text-align:left;"> 将上一条命令中所有的 blah 都替换为 foo </td>
</tr>
<tr>
<td style="text-align:left;">                   </td>
<td style="text-align:left;"> </td>
</tr>
<tr>
<td style="text-align:left;"> <code>fc</code>              </td>
<td style="text-align:left;"> 打开编辑器(vim)编辑上一条命令 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>fc 123</code>          </td>
<td style="text-align:left;"> 编辑命令历史中编号为123的命令 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>fc 123 130</code>      </td>
<td style="text-align:left;"> 编辑命令历史中123-130的八条命令，退出后依次执行 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>fc ls</code>           </td>
<td style="text-align:left;"> 编辑最后一条以ls开头的命令 </td>
</tr>
<tr>
<td style="text-align:left;"> <code>fc -s ls=cat ls</code> </td>
<td style="text-align:left;"> 将最后一条以ls开头的命令中的ls替换成cat，然后执行 </td>
</tr>
</tbody>
</table>


<p>参考 <a href="http://tech.idv2.com/2007/03/27/bash-history-summary/">bash命令行历史的用法</a></p>

<h2>快捷键</h2>

<h3>快捷方式</h3>

<p>当遇到一串很长的路径时，如果每次都输入，尽管有Tab的辅助，但也不是一件烦心的事情。
这时，我们可以根据增加快捷方式/重定位为我们的工作提高效率，减少重复无谓的工作。</p>

<pre><code>alias datanodelog="less ~/hadoop/logs/hadoop-Winseliu-datanode-WINSE.log"
alias jobtrackerlog="less ~/hadoop/logs/hadoop-Winseliu-jobtracker-WINSE.log"
alias tasktrackerlog="less ~/hadoop/logs/hadoop-Winseliu-tasktracker-WINSE.log"

ln -s /cygdrive/d/groovy-1.8.4/ groovylink
</code></pre>

<p>当你去看linux的bash脚本时，你会发现发现ll的命令其实是ls -l的alias的别名而已。
在工作中如果发现很多类似重复的操作，赶紧的把alias用起来的吧！</p>

<h3>快速定位</h3>

<table>
<thead>
<tr>
<th style="text-align:left;"> 快捷              </th>
<th style="text-align:left;"> 解释                   </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> <strong>编辑命令</strong>          </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + a          </td>
<td style="text-align:left;"> 移到命令行首 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + e          </td>
<td style="text-align:left;"> 移到命令行尾 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + f          </td>
<td style="text-align:left;"> 按字符前移（右向） </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + b          </td>
<td style="text-align:left;"> 按字符后移（左向） </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + f           </td>
<td style="text-align:left;"> 按单词前移（右向） </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + b           </td>
<td style="text-align:left;"> 按单词后移（左向） </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + xx         </td>
<td style="text-align:left;"> 在命令行首和光标之间移动 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + u          </td>
<td style="text-align:left;"> 从光标处删除至命令行首 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + k          </td>
<td style="text-align:left;"> 从光标处删除至命令行尾 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + w          </td>
<td style="text-align:left;"> 从光标处删除至字首 </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + d           </td>
<td style="text-align:left;"> 从光标处删除至字尾 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + d          </td>
<td style="text-align:left;"> 删除光标处的字符 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + h          </td>
<td style="text-align:left;"> 删除光标前的字符 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + y          </td>
<td style="text-align:left;"> 粘贴至光标后 </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + c           </td>
<td style="text-align:left;"> 从光标处更改为首字母大写的单词 </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + u           </td>
<td style="text-align:left;"> 从光标处更改为全部大写的单词 </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + l           </td>
<td style="text-align:left;"> 从光标处更改为全部小写的单词 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + t          </td>
<td style="text-align:left;"> 交换光标处和之前的字符 </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + t           </td>
<td style="text-align:left;"> 交换光标处和之前的单词 </td>
</tr>
<tr>
<td style="text-align:left;"> Alt + Backspace   </td>
<td style="text-align:left;"> 与 Ctrl + w 相同类似，分隔符有些差别 </td>
</tr>
<tr>
<td style="text-align:left;"> <strong>重新执行命令</strong>      </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + r          </td>
<td style="text-align:left;"> 逆向搜索命令历史 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + g          </td>
<td style="text-align:left;"> 从历史搜索模式退出 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + p          </td>
<td style="text-align:left;"> 历史中的上一条命令，感觉不用那么麻烦吧，直接方向键就行了啊！ </td>
</tr>
<tr>
<td style="text-align:left;"> <strong>控制命令</strong>          </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + l          </td>
<td style="text-align:left;"> 清屏  </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + o          </td>
<td style="text-align:left;"> 执行当前命令，并选择上一条命令 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + s          </td>
<td style="text-align:left;"> 阻止屏幕输出 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + q          </td>
<td style="text-align:left;"> 允许屏幕输出 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + c          </td>
<td style="text-align:left;"> 终止命令 </td>
</tr>
<tr>
<td style="text-align:left;"> Ctrl + z          </td>
<td style="text-align:left;"> 挂起命令 </td>
</tr>
</tbody>
</table>


<p>参考 <a href="http://www.linuxde.net/2011/11/1877.html">Bash快捷键，让命令更有效率</a></p>

<h2>使用趁手的工具</h2>

<p>看到同事使用WinScp定位到目录上传文件，然后使用Putty进行命令操作，那个辛苦啊，甚是麻烦！
SSH Secure Shell则集成了Putty和WinScp的功能。
更甚者还是用Xmanger的图形化界面: <a href="http://books.blog.51cto.com/2600359/1261976">Windows连接Linux的常用工具</a> ， <a href="http://www.zhihu.com/question/20376041">Windows下如何远程连接 Linux</a></p>

<p>推荐我最爱的SSH工具: <code>SecureCRT</code></p>

<p>SecureCRT不但能满足shell命令，能保存基本上全部的操作过程（Putty操作则和Linux上的终端效果一样）。</p>

<blockquote><ul>
<li><strong>选择复制，右键粘贴</strong>的功能也相当高效。</li>
<li>基于zmoden的lrzsz命令能实现<strong>文件的上传和下载</strong>功能。</li>
<li><strong>记住密码</strong>这功能不在话下。</li>
<li>克隆到新窗口中，实现多视图同时编辑。</li>
</ul>
</blockquote>

<p>看到网上说的<strong>Xshell</strong>功能和SecureCRT类似，还支持颜色，并且是开源的没有版权问题！。<a href="http://www.zhihu.com/question/20308776">Xshell讨论</a></p>

<h2>收藏</h2>

<ul>
<li><a href="http://www.linuxde.net/2011/12/3252.html">Linux常用命令大全速查备忘</a></li>
<li><a href="http://space.itpub.net/?uid-8107207-action-viewspace-itemid-474791">dos2unix</a></li>
<li><a href="http://wenku.baidu.com/view/5f41312758fb770bf78a5516.html">11页的命令啊，包括了常用的命令</a></li>
<li><a href="http://tech.idv2.com/2008/01/11/linux-sysinfo-cmds">Linux系统信息查看命令大全</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
