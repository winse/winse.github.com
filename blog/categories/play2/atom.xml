<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: #play2 | Winse Blog]]></title>
  <link href="http://winse.github.io/blog/categories/play2/atom.xml" rel="self"/>
  <link href="http://winse.github.io/"/>
  <updated>2024-01-13T10:40:37+08:00</updated>
  <id>http://winse.github.io/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Play2开发环境搭建]]></title>
    <link href="http://winse.github.io/blog/2016/11/10/play2-development-environment-with-eclipse/"/>
    <updated>2016-11-10T11:56:07+08:00</updated>
    <id>http://winse.github.io/blog/2016/11/10/play2-development-environment-with-eclipse</id>
    <content type="html"><![CDATA[<p>用惯了MAVEN后，在用SBT真有种生不如死的感觉。Maven更沉稳成熟些，SBT感觉首先不熟（入门也没maven简单）并且随性。</p>

<p>好了抱怨了这么多。入题，主要碰到的就是两个问题：</p>

<ol>
<li>Play2的HelloWorld主要卡在网络（也就是sbt的配置）；</li>
<li>导入Eclipse。由于有Maven缺各种插件的体验，这里直接用官网的生成好.class/.project再导入已经存在的项目。</li>
</ol>


<p>接下来一步步的介绍环境的搭建。</p>

<h4>下载Play2和SBT</h4>

<p>下载官网的<a href="https://playframework.com/download">Offline Distribution</a> ,解压后把 <code>activator-dist-1.3.12/repository</code> 的所有文件拷贝到 <code>~/.ivy2/cache</code> 。反正都会下载到这个目录，拷贝更快。</p>

<p>下载<a href="http://www.scala-sbt.org/download.html">SBT</a> ,下载zip就好。</p>

<h4>配置</h4>

<ol>
<li>在 activator-dist-1.3.12 创建 conf/sbtconfig.txt 。同时在 sbt/conf/sbtconfig.txt 加上同样的语句：</li>
</ol>


<pre><code>-Dsbt.override.build.repos=true
</code></pre>

<ol>
<li>添加获取jar的repo地址，新建 ~/.sbt/repositories 文件</li>
</ol>


<pre><code>[repositories]
  local
  local-maven: file:///D:/maven/.m2/repository/
  cu: http://cu1:8081/nexus/content/groups/public/
  #oschina: http://maven.oschina.net/content/groups/public/
  jcenter: https://jcenter.bintray.com/
  typesafe-ivy-releases: https://repo.typesafe.com/typesafe/ivy-releases/, [organization]/[module]/[revision]/[type]s/[artifact](-[classifier]).[ext], bootOnly
  maven-central
  ivy-typesafe: http://dl.bintray.com/typesafe/ivy-releases, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]
  ivy-sbt-plugin: http://dl.bintray.com/sbt/sbt-plugin-releases/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]
</code></pre>

<p>配置相关参考：</p>

<ul>
<li><a href="http://9leg.com/scala/2015/10/17/scala-play-setting.html">http://9leg.com/scala/2015/10/17/scala-play-setting.html</a></li>
<li><a href="https://afoo.me/posts/2014-11-05-how-make-sbt-jump-over-GFW.html">https://afoo.me/posts/2014-11-05-how-make-sbt-jump-over-GFW.html</a></li>
<li><a href="https://www.jfrog.com/confluence/display/RTF/SBT+Repositories">https://www.jfrog.com/confluence/display/RTF/SBT+Repositories</a> +</li>
<li><a href="http://www.scala-sbt.org/0.13/docs/zh-cn/Library-Dependencies.html">http://www.scala-sbt.org/0.13/docs/zh-cn/Library-Dependencies.html</a></li>
<li><a href="http://www.scala-sbt.org/0.13/docs/Proxy-Repositories.html">http://www.scala-sbt.org/0.13/docs/Proxy-Repositories.html</a></li>
</ul>


<h4>创建新项目</h4>

<ul>
<li><a href="https://playframework.com/documentation/2.5.x/Tutorials">https://playframework.com/documentation/2.5.x/Tutorials</a></li>
</ul>


<p>添加环境变量自己主动点，activator和sbt都加一下。然后运行 activator new 根据模板创建项目。也可以参考官网的直接写build.sbt。</p>

<pre><code>R:\&gt;activator new helloworld play-java
ACTIVATOR_HOME=E:\local\usr\share\activator-dist-1.3.12

Fetching the latest list of templates...

OK, application "helloworld" is being created using the "play-java" template.

To run "helloworld" from the command line, "cd helloworld" then:
R:\\helloworld/activator run

To run the test for "helloworld" from the command line, "cd helloworld" then:
R:\\helloworld/activator test

To run the Activator UI for "helloworld" from the command line, "cd helloworld" then:
R:\\helloworld/activator ui
</code></pre>

<p>创建好项目后，运行 activator run 看看效果：</p>

<pre><code>R:\helloworld&gt;activator run
ACTIVATOR_HOME=E:\local\usr\share\activator-dist-1.3.12
[info] Loading project definition from R:\helloworld\project
[info] Updating {file:/R:/helloworld/project/}helloworld-build...
[info] Resolving org.fusesource.jansi#jansi;1.4 ...
[info] Done updating.
[info] Set current project to helloworld (in build file:/R:/helloworld/)
[info] Updating {file:/R:/helloworld/}root...
[info] Resolving jline#jline;2.12.1 ...
[info] Done updating.

--- (Running the application, auto-reloading is enabled) ---

[info] p.c.s.NettyServer - Listening for HTTP on /0:0:0:0:0:0:0:0:9000

(Server started, use Ctrl+D to stop and go back to the console...)
</code></pre>

<p>打开浏览器访问 <a href="http://localhost:9000">http://localhost:9000</a> ,访问的时刻可能会实时的编译会等一段时间。</p>

<h4>导入eclipse</h4>

<p>前面已经把helloworld跑起来了，接下来是把功能导入eclipse。直接导入或者手动加classpath挺麻烦的，play的一些配置会最终会编译class的。</p>

<p>这里使用 sbteclipse 来生成 eclipse 项目需要的文件。</p>

<ul>
<li><a href="https://www.playframework.com/documentation/2.5.x/IDE">https://www.playframework.com/documentation/2.5.x/IDE</a></li>
<li><a href="https://github.com/typesafehub/sbteclipse">https://github.com/typesafehub/sbteclipse</a></li>
<li><a href="https://github.com/typesafehub/sbteclipse/wiki/Using-sbteclipse">https://github.com/typesafehub/sbteclipse/wiki/Using-sbteclipse</a></li>
</ul>


<p>需要配置二个文件，先添加插件、然后修改配置。</p>

<p>在 helloworld/project/plugins.sbt 最后添加 sbteclipse 插件：</p>

<pre><code>addSbtPlugin("com.typesafe.sbteclipse" % "sbteclipse-plugin" % "5.0.1")
</code></pre>

<p>在 helloworld/build.sbt 最后添加配置：</p>

<pre><code>import com.typesafe.sbteclipse.plugin.EclipsePlugin.EclipseKeys
// Compile the project before generating Eclipse files, so that generated .scala or .class files for views and routes are present
EclipseKeys.preTasks := Seq(compile in Compile)
EclipseKeys.projectFlavor := EclipseProjectFlavor.Java           // Java project. Don't expect Scala IDE
EclipseKeys.createSrc := EclipseCreateSrc.Default + EclipseCreateSrc.ManagedClasses // Use .class files instead of generated .scala files for views and routes
EclipseKeys.withSource := false
EclipseKeys.withJavadoc := false
</code></pre>

<p>然后用 sbt eclipse 生成IDE项目所需文件：</p>

<pre><code>R:\helloworld&gt;sbt
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8
[info] Loading project definition from R:\helloworld\project
[info] Updating {file:/R:/helloworld/project/}helloworld-build...
[info] Resolving org.fusesource.jansi#jansi;1.4 ...
[info] Done updating.
[info] Set current project to helloworld (in build file:/R:/helloworld/)

[helloworld] $ eclipse
[info] About to create Eclipse project files for your project(s).
[info] Updating {file:/R:/helloworld/}root...
[info] Resolving jline#jline;2.12.1 ...
[info] Done updating.
[info] Compiling 6 Scala sources and 10 Java sources to R:\helloworld\target\scala-2.11\classes...
[info] Successfully created Eclipse project files for project(s):
[info] helloworld

[helloworld] $ compile
[success] Total time: 3 s, completed 2016-11-10 13:11:49

[helloworld] $ eclipse
[info] About to create Eclipse project files for your project(s).
[info] Successfully created Eclipse project files for project(s):
[info] helloworld
[helloworld] $
</code></pre>

<p>我这是专门重新弄的一个工程，依赖是原来已经下载好了的（下载需要等一段时间）。</p>

<p>然后导入已经存在的项目即可。看最终效果图：</p>

<p><img src="/images/blogs/play2-dev.jpg" alt="" /></p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
