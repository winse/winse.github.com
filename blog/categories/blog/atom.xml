<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: #blog | Winse Blog]]></title>
  <link href="http://winse.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://winse.github.io/"/>
  <updated>2024-01-13T08:46:58+08:00</updated>
  <id>http://winse.github.io/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress生成TOC]]></title>
    <link href="http://winse.github.io/blog/2021/12/08/octopress-generate-toc/"/>
    <updated>2021-12-08T18:23:23+08:00</updated>
    <id>http://winse.github.io/blog/2021/12/08/octopress-generate-toc</id>
    <content type="html"><![CDATA[<p>尝试了jekyll直接生成toc的方式都失败了，最终通过jquery运行时生成的方式实现目录导航。</p>

<h2>参考</h2>

<ul>
<li><a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">Generating a Table of Contents in Octopress</a></li>
</ul>


<h2>步骤实现</h2>

<h3>添加jquery.toc.min.js</h3>

<p>1、下载 <a href="https://ndabas.github.io/toc/">https://ndabas.github.io/toc/</a> 当前是 0.4.0 版本。解压把 jquery.toc.min.js 放到 source/javascripts/libs/ 目录下。</p>

<p>2、在 source/_includes/head.html 文件的 jquery.min.js 下一行引入 jquery.toc.min.js ：</p>

<pre><code>
  &lt;script&gt;!window.jQuery &amp;&amp; document.write(unescape('%3Cscript src="{{ root_url }}/javascripts/libs/jquery.min.js"%3E%3C/script%3E'))&lt;/script&gt;
  &lt;script src="{{ root_url }}/javascripts/libs/jquery.toc.min.js" type="text/javascript"&gt;&lt;/script&gt;

</code></pre>

<h3>使用toc创建目录导航</h3>

<p>3、在 source/javascripts 目录下创建 generate-toc.js ，内容如下：</p>

<pre><code>function generateTOC(insertBefore, heading) {
  var container = jQuery("&lt;div id='tocBlock'&gt;&lt;/div&gt;");
  var div = jQuery("&lt;ul id='toc'&gt;&lt;/ul&gt;");

  var content = $(insertBefore).first();

  if (heading != undefined &amp;&amp; heading != null) {
    container.append('&lt;span class="tocHeading"&gt;' + heading + '&lt;/span&gt;');
  }

// div.tableOfContents(content);
  div.toc({content: content, headings: "h2,h3,h4"});
  container.append(div);
  container.insertBefore(insertBefore);
}
</code></pre>

<p>并在 source/_includes/custom/head.html 引入该文件：</p>

<p>```
</p>

<script src="{{ root_url }}/javascripts/generate-toc.js" type="text/javascript"></script>


<p>
```</p>

<p>4、运行时调用toc创建目录，在 source/_includes/custom/after_footer.html 添加如下内容：</p>

<pre><code>
{% if index %}
  {% comment %}
  No table of contents on the index page.
  {% endcomment %}

{% elsif page.toc == true %}
  &lt;script type="text/javascript"&gt;
  jQuery(document).ready(function() {
    // Put a TOC right before the entry content.
    generateTOC('.entry-content', '目录');
  });
  &lt;/script&gt;
{% endif %}

</code></pre>

<h3>CSS样式</h3>

<p>5、添加样式，在 sass/custom 目录下添加 _screen.scss 文件，内容如下：</p>

<pre><code>$toc-bg: #dfdfdf;

$toc-incr: 5px;

div#tocBlock {
border-radius: 10px;
padding: 10px;
box-shadow: 5px 5px 5px #999;

    float: right;
    font-size: 10pt;
    width: 300px;
    padding-left: 20px;
    padding-right: 10px;
    padding-top: 10px;
    padding-bottom: 0px;

    background: $toc-bg;
    border: solid 1px #999999;
    margin: 0 0 10px 15px;

    .tocHeading {
        font-weight: bold;
        font-size: 125%;
    }

    #toc {
        background: $toc-bg;
        ul {
            list-style: disc;
            li {
                margin-left: $toc-incr !important;
                padding: 0 !important;
            }
        }
    }
}
</code></pre>

<p>并把该文件添加到 sass/screen.scss ：</p>

<pre><code>@import "custom/screen";
</code></pre>

<h3>运行调试</h3>

<p>6、删除 source/stylesheets/screen.css</p>

<p>7、预览看效果 <code>rake preview</code></p>

<h2>jekyll生成 查看</h2>

<blockquote><p>{:toc} ，jekyll-toc ，jekyll html 都没试成功，难道是jekyll-2太老了？</p></blockquote>

<ul>
<li><a href="https://plutotree.me/jekyll/2019/01/30/jekyll-toc-solution.html">https://plutotree.me/jekyll/2019/01/30/jekyll-toc-solution.html</a></li>
<li><a href="http://www.zhengjiachao.com/topics/github.io/add-outline-on-jekyll-post.html">http://www.zhengjiachao.com/topics/github.io/add-outline-on-jekyll-post.html</a></li>
<li><a href="https://github.com/allejo/jekyll-toc#usage">https://github.com/allejo/jekyll-toc#usage</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logstash采集网站的访问日志]]></title>
    <link href="http://winse.github.io/blog/2018/01/20/logstash-monitor-myself-blog-accesslog/"/>
    <updated>2018-01-20T18:14:03+08:00</updated>
    <id>http://winse.github.io/blog/2018/01/20/logstash-monitor-myself-blog-accesslog</id>
    <content type="html"><![CDATA[<p>最近又重新接触了一下elasticsearch、logstash、kibana，蛮好用的一个日志框架。</p>

<p>同时好久没有更新网站内容、也没怎么关注，虽然有cnzz（umeng）的日志统计功能，但是毕竟是很小一段时间的。要是能够把日志都导出来，就可以用ELK来分析一下自己网站一年来文章的访问情况。</p>

<p>嗯，前阵子买了阿里云的一个VPN服务器，正好可以利用利用。把访问的日志情况通过http发送给logstash，然后存储下来，等过一段时间我们再回来分析分析这些日志。^^</p>

<h2>启动Logstash收集服务</h2>

<ul>
<li><a href="https://www.elastic.co/blog/introducing-logstash-input-http-plugin">https://www.elastic.co/blog/introducing-logstash-input-http-plugin</a></li>
<li><a href="https://discuss.elastic.co/t/post-data-to-logstash-using-http-input/69166/8">https://discuss.elastic.co/t/post-data-to-logstash-using-http-input/69166/8</a></li>
<li><a href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-json.html">https://www.elastic.co/guide/en/logstash/current/plugins-filters-json.html</a></li>
</ul>


<pre><code>~/logstash-6.1.2/bin/logstash -e '
input { 
  http { 
    port =&gt; 20000 
    response_headers =&gt; {
      "Access-Control-Allow-Origin" =&gt; "*"
      "Content-Type" =&gt; "application/json"
      "Access-Control-Allow-Headers" =&gt; "Origin, X-Requested-With, Content-Type, Accept"
    }
  } 
} 
filter {
  if [message] =~ /^\s*$/ {
    drop { }
  }

  json {
    source =&gt; "message"
  }
  json {
    source =&gt; "location"
    target =&gt; "location"
  }
  mutate {
    remove_field =&gt; [ "headers" ]
  }
}
output { 
  file { 
    path =&gt; "winse-accesslog-%{+YYYY-MM-dd}.log"
    codec =&gt; json_lines 
  } 
} 
'
</code></pre>

<h2>页面发送访问日志记录</h2>

<pre><code>$.ajax({
  type: "POST",
  url: "http://SERVER:PORT",
  data: JSON.stringify({
    title: document.title,
    location: JSON.stringify(location),
    referrer: document.referrer,
    userAgent: navigator.userAgent
  }),
  contentType: "application/json; charset=utf-8",
  dataType: "json"
});
</code></pre>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitalk on Octopress]]></title>
    <link href="http://winse.github.io/blog/2018/01/20/gitalk-on-octopress/"/>
    <updated>2018-01-20T15:41:00+08:00</updated>
    <id>http://winse.github.io/blog/2018/01/20/gitalk-on-octopress</id>
    <content type="html"><![CDATA[<p>以前有添加过 多说 ，步骤都类似的。其实就是调用一个第三方的服务，把评论的数据存储在第三方。</p>

<p>可以先看看 <a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">gitalk 的文档</a> ，分四步：</p>

<ul>
<li>注册一个github 的 <a href="https://github.com/settings/developers">OAuth Apps</a></li>
<li>添加div容器</li>
<li>加入css，js依赖</li>
<li>调用javascript显示</li>
</ul>


<h2>配置</h2>

<h4>注册一个github应用</h4>

<ul>
<li><a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md#%E4%BD%BF%E7%94%A8">使用</a></li>
<li><a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a></li>
</ul>


<h4>在 <code>_layouts/post.html</code> 的 Comments 下添加一个 gitalk-container 的节点：</h4>

<p>（粘贴后把大括号和百分号之间的空格去掉）</p>

<p>```
{ % if site.disqus_short_name and page.comments == true % }
  <section>
    <h1>Comments</h1></p>

<!-- gitalk评论 start -->


<pre><code>&lt;div id="gitalk-container"&gt;&lt;/div&gt; 
</code></pre>

<!-- gitalk评论 end -->


<p>  </section>
{ % endif % }
```</p>

<h4>在 <code>_includes</code> 目录下增加一个 gitalk.html 的页面，添加依赖并添加初始化代码：</h4>

<p>这里clientID，clientSecret对应第一步注册应用的id和secret。</p>

<p>在官网文档给的例子上调整了一下: id， body, createIssueManually。代码里面是通过 <code>labels + id</code> 来查询对应的issue：<a href="https://github.com/gitalk/gitalk/blob/9a2c6e94281a628a8e0f1ccbdceebd5d17bc1756/src/gitalk.jsx#L174">查询Issue源码</a></p>

<p>（粘贴后把大括号和百分号之间的空格去掉）</p>

<p>```
{ % if site.disqus_short_name and page.comments != false % }</p>

<p><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css"></p>

<script src="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"></script>




<script>

var gitalk = new Gitalk({
  clientID: 'c14f68eac6330d15d984',
  clientSecret: '73b7c1fffa98e299ff0cdd332821201933858e6e',
  repo: 'winse.github.com',
  owner: 'winse',
  admin: ['winse'],
  id: location.pathname,
  labels: ['Gitalk'],
  body: "http://winse.github.io" + location.pathname,
  createIssueManually: true,
  
  // facebook-like distraction free mode
  distractionFreeMode: false
})

gitalk.render('gitalk-container')

</script>


<p>{ % endif % }
```</p>

<p>然后在同一级目录的 after_footer.html 新增一条 这个新页面一个引用（粘贴后把大括号和百分号之间的空格去掉）:</p>

<pre><code>{ % include gitalk.html % }
</code></pre>

<h2>初始化</h2>

<ul>
<li><a href="https://github.com/gitalk/gitalk/wiki/%E8%AF%84%E8%AE%BA%E5%88%9D%E5%A7%8B%E5%8C%96">https://github.com/gitalk/gitalk/wiki/%E8%AF%84%E8%AE%BA%E5%88%9D%E5%A7%8B%E5%8C%96</a></li>
<li><a href="https://draveness.me/git-comments-initialize">https://draveness.me/git-comments-initialize</a></li>
<li><a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></li>
</ul>


<p>其实就是在对应的repo下面建一个repo，注意下 <strong>labels</strong> 规则就行了：</p>

<pre><code>username = "winse" # GitHub 用户名

# https://github.com/settings/tokens
new_token = ""  # GitHub Token
repo_name = "winse.github.com" # 存放 issues

sitemap_url = "sitemap.xml" # sitemap
kind = "Gitalk"

# 可以结合git的状态，added的调用命令创建一个issue

# 除了使用Token，也可以手动输入密码
curl -H "Accept: application/json" -X POST -d '{"body": "http://winseliu.com/blog/2017/11/20/sed-debug-sedsed/", "labels": ["Gitalk", "/blog/2017/11/20/sed-debug-sedsed/"], "title": "gitalk 测试" }' -u $username https://api.github.com/repos/$username/$repo_name/issues
Enter host password for user 'winse':

OR

# https://developer.github.com/v3/auth/#basic-authentication
curl -u username:token https://api.github.com/user
</code></pre>

<h2>参考</h2>

<ul>
<li><a href="http://qiubaiying.top/2017/12/19/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0-Gitalk-%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/">为博客添加 Gitalk 评论插件</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Run Ubuntu]]></title>
    <link href="http://winse.github.io/blog/2017/10/30/windows-run-ubuntu/"/>
    <updated>2017-10-30T07:17:53+08:00</updated>
    <id>http://winse.github.io/blog/2017/10/30/windows-run-ubuntu</id>
    <content type="html"><![CDATA[<p>@@更新 2021-05-25 [wsl-Ubuntu 20.04.2 LTS] 配置octopress
@@更新 2023-11-28 [wsl-Ubuntu 22.04.2 LTS (Jammy Jellyfish)] 配置octopress</p>

<p>最新版的Windows已经可以安装ubuntu了，算是微软开源后的一个阶段性的成果了。</p>

<p>功能和windows兼容性很强（不像cygwin），软链接、文件权限都是和系统一致的。并且基本所有ubuntu的功能都可以使用，安装jekyll、docker都很顺利。同时打开系统的程序也很方便。非常赞和值得程序员去尝试！！</p>

<p>本文后面会逐渐增加使用过程中的一些操作，今天先更新系统安装、octopress安装、docker安装。</p>

<h2>系统安装</h2>

<p>直接去微软的官网下载最新版系统ISO，然后安装系统 <strong> 专业版 </strong>（教育版比较干净一些，但是网上没有破解方式啊）。</p>

<p></p>

<h2>Ubuntu</h2>

<ul>
<li><a href="https://docs.microsoft.com/en-us/windows/wsl/about">Windows Subsystem for Linux Documentation</a></li>
</ul>


<blockquote><p>The Windows Subsystem for Linux lets developers run Linux environments &ndash; including most command-line tools, utilities, and applications &ndash; directly on Windows, unmodified, without the overhead of a virtual machine.</p></blockquote>

<h4>安装Ubuntu</h4>

<p>最新版的Ubuntu已经进入到稳定版。直接打开商店，搜索Ubuntu，然后安装即可。大概200M的样子，很快就安装了。然后Launch会初始化创建用户。</p>

<p>相关的一些有用的文档：</p>

<ul>
<li><a href="https://msdn.microsoft.com/zh-cn/commandline/wsl/user-support">https://msdn.microsoft.com/zh-cn/commandline/wsl/user-support</a></li>
<li>权限相关 <a href="https://github.com/Microsoft/WSL/issues/81">https://github.com/Microsoft/WSL/issues/81</a></li>
</ul>


<h4>安装mintty</h4>

<ul>
<li><a href="https://superuser.com/questions/1110045/windows-10-bash-and-mintty">https://superuser.com/questions/1110045/windows-10-bash-and-mintty</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22033219">https://zhuanlan.zhihu.com/p/22033219</a></li>
</ul>


<p>CMD方式操作Ubuntu太难受了，mintty操作就像SecurtCRT一样，简单方便。安装 <a href="https://github.com/mintty/wsltty">wsltty-1.8.0-install</a> ，使用mintty来运行ubuntu。</p>

<p>默认mintty的配置放在 <code>%APPDATA%\wsltty</code>。在子目录theme下可以 <a href="http://ciembor.github.io/4bit/">http://ciembor.github.io/4bit/</a> 下载一个主题放到该目录下，然后在mintty配置页面选择该主题。</p>

<h4>系统文件</h4>

<ul>
<li><a href="https://github.com/Microsoft/WSL/issues/402">https://github.com/Microsoft/WSL/issues/402</a></li>
</ul>


<p>root挂载点：<code>C:\Users\&lt;user&gt;\AppData\Local\lxss</code> or <code>C:\Users\&lt;username&gt;\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState</code></p>

<h2>安装Jekyll</h2>

<pre><code># https://superuser.com/questions/116625/recursively-change-owner-windows-7
#takeown /f "C:\path\to\folder" /r
#icacls "C:\path\to\folder" /reset /T
用powershell管理员权限 "提"权
PS E:\winsegit\octopress&gt; takeown /F . /R
修改就旧系统的文件属性：
PS E:\winsegit\octopress&gt; cacls *.* /T /G Everyone:F

sudo apt-get update
sudo apt-get install ruby-bundler
sudo apt-get install ruby-dev
sudo apt-get install make
sudo apt-get install gcc
bundle install

sudo gem update
sudo gem uninstall rake
sudo gem install rake -v 10.5.0
# sudo apt-get install nodejs

rake preview

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ rake preview
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
Starting to watch source with Jekyll and Compass. Starting Rack on port 4000
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
/var/lib/gems/2.3.0/gems/liquid-2.6.1/lib/liquid/htmltags.rb:43: warning: key "index0" is duplicated and overwritten on line 46
[2017-10-29 22:48:09] INFO  WEBrick 1.3.1
[2017-10-29 22:48:09] INFO  ruby 2.3.1 (2016-04-26) [x86_64-linux-gnu]
[2017-10-29 22:48:09] INFO  WEBrick::HTTPServer#start: pid=39 port=4000
Configuration file: /mnt/e/winsegit/octopress/_config.yml
            Source: source
       Destination: public
      Generating...
                    done.
</code></pre>

<p>上面warning提示也有对应的Issue，但也没所谓暂时不理： <a href="https://github.com/Microsoft/WSL/issues/1426">https://github.com/Microsoft/WSL/issues/1426</a></p>

<p>UPDATE 2023年11月18日09:22:51 (WSL1 + rvm)</p>

<pre><code>winse@DESKTOP-BR4MG38:octopress$ sudo apt install make gcc -y
[sudo] password for winse:
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
gcc is already the newest version (4:11.2.0-1ubuntu1).
gcc set to manually installed.
make is already the newest version (4.3-4.1build1).
make set to manually installed.
0 upgraded, 0 newly installed, 0 to remove and 101 not upgraded.

winse@DESKTOP-BR4MG38:octopress$ gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
gpg: key 105BD0E739499BDB: 2 duplicate signatures removed
gpg: /home/winse/.gnupg/trustdb.gpg: trustdb created
gpg: key 105BD0E739499BDB: public key "Piotr Kuczynski &lt;piotr.kuczynski@gmail.com&gt;" imported
gpg: key 3804BB82D39DC0E3: public key "Michal Papis (RVM signing) &lt;mpapis@gmail.com&gt;" imported
gpg: Total number processed: 2
gpg:               imported: 2
winse@DESKTOP-BR4MG38:octopress$ curl -sSL https://get.rvm.io | bash -s stable
Downloading https://github.com/rvm/rvm/archive/1.29.12.tar.gz
Downloading https://github.com/rvm/rvm/releases/download/1.29.12/1.29.12.tar.gz.asc
gpg: Signature made Sat 16 Jan 2021 02:46:22 AM CST
gpg:                using RSA key 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
gpg: Good signature from "Piotr Kuczynski &lt;piotr.kuczynski@gmail.com&gt;" [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 7D2B AF1C F37B 13E2 069D  6956 105B D0E7 3949 9BDB
GPG verified '/home/winse/.rvm/archives/rvm-1.29.12.tgz'
Installing RVM to /home/winse/.rvm/
    RVM PATH line found in /home/winse/.bashrc.
    RVM PATH line not found for Zsh, rerun this command with '--auto-dotfiles' flag to fix it.
    RVM sourcing line found in /home/winse/.bash_profile.
    RVM sourcing line not found for Zsh, rerun this command with '--auto-dotfiles' flag to fix it.
Installation of RVM in /home/winse/.rvm/ is almost complete:

  * To start using RVM you need to run `source /home/winse/.rvm/scripts/rvm`
    in all your open shell windows, in rare cases you need to reopen all shell windows.
Thanks for installing RVM 🙏
Please consider donating to our open collective to help us maintain RVM.

👉  Donate: https://opencollective.com/rvm/donate


winse@DESKTOP-BR4MG38:octopress$

##-&gt; @see https://github.com/rvm/rvm/issues/4764#issuecomment-624796884
    Open your terminal
    run /etc/apt/sources.list using vi /etc/apt/sources.list (It is possible that you can't save this file, and might get "permission denied" error. SO, in that case, open this file with sudo vi /etc/apt/sources.list)
    after opening it, go to the end of file and paste this line:
    deb http://security.ubuntu.com/ubuntu bionic-security main
    save this file by typing :wq
    now, paste this command in terminal:
    sudo apt update &amp;&amp; apt-cache policy libssl1.0-dev
    You will see an update like libssl1.0-dev: Installed: (none) Candidate: 1.0.2n-1ubuntu5.3 Version table: 1.0.2n-1ubuntu5.3 500 500 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages
    then, run this command:
    sudo apt-get install libssl1.0-dev

winse@DESKTOP-BR4MG38:~$ sudo apt update &amp;&amp; apt-cache policy libssl1.0-dev
Hit:1 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:2 http://archive.ubuntu.com/ubuntu jammy InRelease
Get:3 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [119 kB]
Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]
Hit:5 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Err:4 http://security.ubuntu.com/ubuntu bionic-security InRelease
  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 3B4FE6ACC0B21F32
Get:6 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [1,162 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [998 kB]
Reading package lists... Done
W: GPG error: http://security.ubuntu.com/ubuntu bionic-security InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 3B4FE6ACC0B21F32
E: The repository 'http://security.ubuntu.com/ubuntu bionic-security InRelease' is not signed.
N: Updating from such a repository can't be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.

##--&gt; @see https://askubuntu.com/questions/943539/the-following-signatures-couldnt-be-verified-because-the-public-key-is-not-avai

winse@DESKTOP-BR4MG38:~$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3B4FE6ACC0B21F32
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Executing: /tmp/apt-key-gpghome.Ak5EisV4UJ/gpg.1.sh --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3B4FE6ACC0B21F32
gpg: key 3B4FE6ACC0B21F32: public key "Ubuntu Archive Automatic Signing Key (2012) &lt;ftpmaster@ubuntu.com&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1

winse@DESKTOP-BR4MG38:~$ sudo apt update &amp;&amp; apt-cache policy libssl1.0-dev
Hit:1 http://archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://security.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 http://security.ubuntu.com/ubuntu bionic-security InRelease
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
103 packages can be upgraded. Run 'apt list --upgradable' to see them.
W: http://security.ubuntu.com/ubuntu/dists/bionic-security/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
libssl1.0-dev:
  Installed: (none)
  Candidate: 1.0.2n-1ubuntu5.13
  Version table:
     1.0.2n-1ubuntu5.13 500
        500 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages

winse@DESKTOP-BR4MG38:~$ sudo apt-get install libssl1.0-dev
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  libssl1.0.0
The following NEW packages will be installed:
  libssl1.0-dev libssl1.0.0
0 upgraded, 2 newly installed, 0 to remove and 103 not upgraded.
Need to get 2,455 kB of archives.
After this operation, 10.8 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://security.ubuntu.com/ubuntu bionic-security/main amd64 libssl1.0.0 amd64 1.0.2n-1ubuntu5.13 [1,089 kB]
Get:2 http://security.ubuntu.com/ubuntu bionic-security/main amd64 libssl1.0-dev amd64 1.0.2n-1ubuntu5.13 [1,366 kB]
Fetched 2,455 kB in 4s (665 kB/s)
Preconfiguring packages ...
Selecting previously unselected package libssl1.0.0:amd64.
(Reading database ... 29956 files and directories currently installed.)
Preparing to unpack .../libssl1.0.0_1.0.2n-1ubuntu5.13_amd64.deb ...
Unpacking libssl1.0.0:amd64 (1.0.2n-1ubuntu5.13) ...
Selecting previously unselected package libssl1.0-dev:amd64.
Preparing to unpack .../libssl1.0-dev_1.0.2n-1ubuntu5.13_amd64.deb ...
Unpacking libssl1.0-dev:amd64 (1.0.2n-1ubuntu5.13) ...
Setting up libssl1.0.0:amd64 (1.0.2n-1ubuntu5.13) ...
Setting up libssl1.0-dev:amd64 (1.0.2n-1ubuntu5.13) ...
Processing triggers for libc-bin (2.35-0ubuntu3.1) ...
winse@DESKTOP-BR4MG38:~$

winse@DESKTOP-BR4MG38:octopress$ rvm install 2.3
Searching for binary rubies, this might take some time.
No binary rubies available for: ubuntu/22.04/x86_64/ruby-2.3.8.
Continuing with compilation. Please read 'rvm help mount' to get more information on binary rubies.
Checking requirements for ubuntu.
Requirements installation successful.
Installing Ruby from source to: /home/winse/.rvm/rubies/ruby-2.3.8, this may take a while depending on your cpu(s)...
ruby-2.3.8 - #downloading ruby-2.3.8, this may take a while depending on your connection...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 13.7M  100 13.7M    0     0  3149k      0  0:00:04  0:00:04 --:--:-- 3149k
ruby-2.3.8 - #extracting ruby-2.3.8 to /home/winse/.rvm/src/ruby-2.3.8.....
ruby-2.3.8 - #configuring..........................................................
ruby-2.3.8 - #post-configuration..
ruby-2.3.8 - #compiling.............................................................................................................................................................................................................................................
ruby-2.3.8 - #installing..............
ruby-2.3.8 - #making binaries executable..
ruby-2.3.8 - #downloading rubygems-3.0.9
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  865k  100  865k    0     0   701k      0  0:00:01  0:00:01 --:--:--  701k
No checksum for downloaded archive, recording checksum in user configuration.
ruby-2.3.8 - #extracting rubygems-3.0.9.....
ruby-2.3.8 - #removing old rubygems........
ruby-2.3.8 - #installing rubygems-3.0.9................................................................
ruby-2.3.8 - #gemset created /home/winse/.rvm/gems/ruby-2.3.8@global
ruby-2.3.8 - #importing gemset /home/winse/.rvm/gemsets/global.gems..............................there was an error installing gem rubygems-bundler
.............................
ruby-2.3.8 - #generating global wrappers........
ruby-2.3.8 - #gemset created /home/winse/.rvm/gems/ruby-2.3.8
ruby-2.3.8 - #importing gemsetfile /home/winse/.rvm/gemsets/default.gems evaluated to empty gem list
ruby-2.3.8 - #generating default wrappers........
ruby-2.3.8 - #adjusting #shebangs for (gem irb erb ri rdoc testrb rake).
Install of ruby-2.3.8 - #complete
Ruby was built without documentation, to build it run: rvm docs generate-ri
winse@DESKTOP-BR4MG38:octopress$

winse@DESKTOP-BR4MG38:octopress$ rvm list
   ruby-2.3.8 [ x86_64 ]

# Default ruby not set. Try 'rvm alias create default &lt;ruby&gt;'.

# =&gt; - current
# =* - current &amp;&amp; default
#  * - default

winse@DESKTOP-BR4MG38:octopress$

winse@DESKTOP-BR4MG38:octopress$ bash --login
winse@DESKTOP-BR4MG38:octopress$ rvm use 2.3.8 --default
Using /home/winse/.rvm/gems/ruby-2.3.8

##--&gt; @see https://mirrors.tuna.tsinghua.edu.cn/help/rubygems/

winse@DESKTOP-BR4MG38:octopress$ unset HTTPS_PROXY
winse@DESKTOP-BR4MG38:octopress$ bundle config mirror.https://rubygems.org https://mirrors.tuna.tsinghua.edu.cn/rubygems

winse@DESKTOP-BR4MG38:octopress$ bundle install
Fetching source index from https://mirrors.tuna.tsinghua.edu.cn/rubygems/
Resolving dependencies...
Fetching rake 10.5.0
Installing rake 10.5.0
Fetching RedCloth 4.2.9
Installing RedCloth 4.2.9 with native extensions
Fetching bigdecimal 1.3.2
Installing bigdecimal 1.3.2 with native extensions
Fetching blankslate 2.1.2.4
Installing blankslate 2.1.2.4
Using bundler 1.17.3
Fetching timers 1.1.0
Installing timers 1.1.0
Fetching celluloid 0.15.2
Installing celluloid 0.15.2
Fetching chunky_png 1.3.1
Installing chunky_png 1.3.1
Fetching fast-stemmer 1.0.2
Installing fast-stemmer 1.0.2 with native extensions
Fetching classifier 1.3.4
Installing classifier 1.3.4
Fetching coffee-script-source 1.7.1
Installing coffee-script-source 1.7.1
Fetching execjs 2.2.1
Installing execjs 2.2.1
Fetching coffee-script 2.3.0
Installing coffee-script 2.3.0
Fetching colorator 0.1
Installing colorator 0.1
Fetching fssm 0.2.10
Installing fssm 0.2.10
Fetching sass 3.2.19
Installing sass 3.2.19
Fetching compass 0.12.6
Installing compass 0.12.6
Fetching ffi 1.9.3
Installing ffi 1.9.3 with native extensions
Fetching tilt 1.4.1
Installing tilt 1.4.1
Fetching haml 4.0.5
Installing haml 4.0.5
Fetching jekyll-coffeescript 1.0.0
Installing jekyll-coffeescript 1.0.0
Fetching jekyll-gist 1.1.0
Installing jekyll-gist 1.1.0
Fetching jekyll-paginate 1.0.0
Installing jekyll-paginate 1.0.0
Fetching jekyll-sass-converter 1.0.0
Installing jekyll-sass-converter 1.0.0
Fetching rb-fsevent 0.9.4
Installing rb-fsevent 0.9.4
Fetching rb-inotify 0.9.5
Installing rb-inotify 0.9.5
Fetching listen 2.7.9
Installing listen 2.7.9
Fetching jekyll-watch 1.0.0
Installing jekyll-watch 1.0.0
Fetching kramdown 1.4.0
Installing kramdown 1.4.0
Fetching liquid 2.6.1
Installing liquid 2.6.1
Fetching mercenary 0.3.4
Installing mercenary 0.3.4
Fetching posix-spawn 0.3.8
Installing posix-spawn 0.3.8 with native extensions
Fetching yajl-ruby 1.1.0
Installing yajl-ruby 1.1.0 with native extensions
Fetching pygments.rb 0.6.0
Installing pygments.rb 0.6.0
Fetching redcarpet 3.1.2
Installing redcarpet 3.1.2 with native extensions
Fetching safe_yaml 1.0.4
Installing safe_yaml 1.0.4
Fetching parslet 1.5.0
Installing parslet 1.5.0
Fetching toml 0.1.1
Installing toml 0.1.1
Fetching jekyll 2.1.1
Installing jekyll 2.1.1
Fetching jekyll-date-format 1.0.0
Installing jekyll-date-format 1.0.0
Fetching jekyll-page-hooks 1.3.0
Installing jekyll-page-hooks 1.3.0
Fetching jekyll-sitemap 0.5.0
Installing jekyll-sitemap 0.5.0
Fetching json 1.8.2
Installing json 1.8.2 with native extensions
Fetching rack 1.5.2
Installing rack 1.5.2
Fetching rack-protection 1.5.3
Installing rack-protection 1.5.3
Fetching rdiscount 2.1.7.1
Installing rdiscount 2.1.7.1 with native extensions
Fetching rubypants 0.2.0
Installing rubypants 0.2.0
Fetching sass-globbing 1.0.0
Installing sass-globbing 1.0.0
Fetching sinatra 1.4.5
Installing sinatra 1.4.5
Fetching stringex 1.4.0
Installing stringex 1.4.0
Bundle complete! 16 Gemfile dependencies, 50 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
Post-install message from haml:

HEADS UP! Haml 4.0 has many improvements, but also has changes that may break
your application:

* Support for Ruby 1.8.6 dropped
* Support for Rails 2 dropped
* Sass filter now always outputs &lt;style&gt; tags
* Data attributes are now hyphenated, not underscored
* html2haml utility moved to the html2haml gem
* Textile and Maruku filters moved to the haml-contrib gem

For more info see:

http://rubydoc.info/github/haml/haml/file/CHANGELOG.md

winse@DESKTOP-BR4MG38:octopress$

winse@DESKTOP-BR4MG38:octopress$ rake preview
Starting to watch source with Jekyll and Compass. Starting Rack on port 14000
/home/winse/.rvm/gems/ruby-2.3.8/gems/liquid-2.6.1/lib/liquid/htmltags.rb:43: warning: key "index0" is duplicated and overwritten on line 46
[2023-11-18 09:42:44] INFO  WEBrick 1.3.1
[2023-11-18 09:42:44] INFO  ruby 2.3.8 (2018-10-18) [x86_64-linux]
[2023-11-18 09:42:44] INFO  WEBrick::HTTPServer#start: pid=24150 port=14000
Configuration file: /mnt/e/winsegit/octopress/_config.yml
            Source: source
       Destination: public
      Generating...
                    done.
</code></pre>

<p>UPDATE 2021-05-25 24:09 (wsl-linux + rvm)</p>

<pre><code>sudo apt-get update
sudo apt-get install make
sudo apt-get install gcc

## https://ruby-china.org/wiki/rvm-guide

winse@LAPTOP-I9ECVAQ4:e$ gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

# curl -sSL https://get.rvm.io | bash -s stable
# https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer
winse@LAPTOP-I9ECVAQ4:e$ cat rvm-installer.txt | bash -s stable 

winse@LAPTOP-I9ECVAQ4:e$ echo "ruby_url=https://cache.ruby-china.com/pub/ruby" &gt; ~/.rvm/user/db


# 依赖安装
## https://www.garron.me/en/linux/install-ruby-2-3-3-ubuntu.html
Edit this file /etc/apt/sources.list and add this line to the end of it.

deb http://security.ubuntu.com/ubuntu bionic-security main

After that run:

sudo apt update &amp;&amp; apt-cache policy libssl1.0-dev

Finally,

sudo apt-get install libssl1.0-dev

##END

winse@LAPTOP-I9ECVAQ4:~$ rvm install 2.3

winse@LAPTOP-I9ECVAQ4:~$ rvm list

winse@LAPTOP-I9ECVAQ4:~$ bash --login
winse@LAPTOP-I9ECVAQ4:~$ rvm use 2.3.8 --default
Using /home/winse/.rvm/gems/ruby-2.3.8

## 
winse@LAPTOP-I9ECVAQ4:octopress$ bundle install

winse@LAPTOP-I9ECVAQ4:octopress$ rake preview

winse@DESKTOP-BR4MG38:~$ ln -s /mnt/e/local/npp/notepad++.exe text
</code></pre>

<h2>安装docker</h2>

<ul>
<li><a href="https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce-1">https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce-1</a></li>
</ul>


<pre><code>winse@DESKTOP-ADH7K1Q:~$ uname -r
4.4.0-43-Microsoft
winse@DESKTOP-ADH7K1Q:~$ uname -a
Linux DESKTOP-ADH7K1Q 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014 x86_64 x86_64 x86_64 GNU/Linux

winse@DESKTOP-ADH7K1Q:~$  sudo apt-get install \
     apt-transport-https \
     ca-certificates \
     curl \
     software-properties-common

winse@DESKTOP-ADH7K1Q:~$ lsb_release -cs
xenial
winse@DESKTOP-ADH7K1Q:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
OK
winse@DESKTOP-ADH7K1Q:~$ sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

winse@DESKTOP-ADH7K1Q:~$ sudo apt-get update

winse@DESKTOP-ADH7K1Q:~$ sudo apt-get install docker-ce

winse@DESKTOP-ADH7K1Q:~$ sudo service docker start
 * Starting Docker: docker                                                                                                                     [ OK ]
winse@DESKTOP-ADH7K1Q:~$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
winse@DESKTOP-ADH7K1Q:~$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
winse@DESKTOP-ADH7K1Q:~$
</code></pre>

<h2>运行windows系统应用</h2>

<ul>
<li><a href="https://www.howtogeek.com/285082/how-to-run-windows-programs-from-windows-10s-bash-shell/">https://www.howtogeek.com/285082/how-to-run-windows-programs-from-windows-10s-bash-shell/</a></li>
<li><a href="https://github.com/Microsoft/WSL/issues/333">https://github.com/Microsoft/WSL/issues/333</a></li>
<li><a href="https://msdn.microsoft.com/en-us/commandline/wsl/interop">https://msdn.microsoft.com/en-us/commandline/wsl/interop</a></li>
</ul>


<pre><code>winse@DESKTOP-ADH7K1Q:~$ ln -s /mnt/e/local/usr/share/npp/notepad++.exe text

winse@DESKTOP-ADH7K1Q:~$ cp -r ../winse-cygwin/new_post.sh ./
winse@DESKTOP-ADH7K1Q:~$ cat new_post.sh
cd ~/winsegit/octopress/
rake new_post["$1"] | tail -1 | awk -F: '{print $2}' | while read line
do
name=${line#source/_posts/}
newpath=source/_stash/$name
mv $line $newpath

echo -e "\n\n--END" &gt;&gt;$newpath

~/text $newpath &amp;
done

winse@DESKTOP-ADH7K1Q:~$ ./new_post.sh "windows run ubuntu"
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c in PATH, mode 040777
mkdir -p source/_posts
</code></pre>

<h2>重新配置git</h2>

<p>用powershell修改原来的权限后，然后用shell来进行设置。</p>

<pre><code>#powershell
takeown /F . /R
cacls *.* /T /G Everyone:F

#ubuntu shell
winse@DESKTOP-ADH7K1Q:~$ cp -r ../winse-cygwin/.ssh ./

winse@DESKTOP-ADH7K1Q:~$ cd .ssh
winse@DESKTOP-ADH7K1Q:~/.ssh$ chmod 600 id_rsa authorized_keys
winse@DESKTOP-ADH7K1Q:~/.ssh$ chmod 644 id_rsa.pub config

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress/_deploy$ rm -rf *
winse@DESKTOP-ADH7K1Q:~/winsegit/octopress/_deploy$ git clone git@github.com:winse/winse.github.com.git ./

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ git config --global user.email winseliu@qq.com
winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ git config --global user.name winse

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ rake preview
winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ sh public.git.sh
</code></pre>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为github Pages页面设置自定义域名]]></title>
    <link href="http://winse.github.io/blog/2014/10/24/github-custom-domain/"/>
    <updated>2014-10-24T00:17:19+08:00</updated>
    <id>http://winse.github.io/blog/2014/10/24/github-custom-domain</id>
    <content type="html"><![CDATA[<ol>
<li>注册个域名（net.cn）</li>
<li>添加CNAME文件（github.com）</li>
<li>添加解析记录（net.cn）</li>
</ol>


<p><img src="http://file.bmob.cn/M00/20/C5/wKhkA1RJKuyAf6lWAACIJ28IFe8161.png" alt="" /></p>

<p>如果是使用子域名的话非常简单。在（pages）CNAME文件中填写www.winseliu.com，然后在（net.cn）解析页添加CNAME指向winse.github.io即可。</p>

<p>如果想默认顶级域名也能访问，需要添加的两个ip指向，参见上图。同时（pages）CNAME中使用winseliu.com。</p>

<h2>参考</h2>

<ul>
<li><a href="https://help.github.com/articles/my-custom-domain-isn-t-working/">My custom domain isn&rsquo;t working</a></li>
<li><a href="https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/">Tips for configuring an A record with your DNS provider</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
