<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: #ddns | Winse Blog]]></title>
  <link href="http://winse.github.io/blog/categories/ddns/atom.xml" rel="self"/>
  <link href="http://winse.github.io/"/>
  <updated>2024-01-16T13:54:48+08:00</updated>
  <id>http://winse.github.io/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[科学上网（续）]]></title>
    <link href="http://winse.github.io/blog/2018/06/09/reasonable-way-to-access-the-internet/"/>
    <updated>2018-06-09T14:03:11+08:00</updated>
    <id>http://winse.github.io/blog/2018/06/09/reasonable-way-to-access-the-internet</id>
    <content type="html"><![CDATA[<p>到新的环境就会遇到新的问题，需要不断的学习更新来适应新的环境。上网也是一样，工作地点和家里存在了一道鸿沟。过去断断续续的有一些解决的方式，但是总是有点间接。</p>

<ul>
<li><a href="http://www.winseliu.com/blog/2017/11/04/teamviewer-vpn-on-windows/">使用TeamviewerVPN访问公司内网</a></li>
<li><a href="http://www.winseliu.com/blog/2017/02/04/privoxy-http-proxy-for-shadowsocks/">使用Privoxy把shadowsocks转换为Http代理</a></li>
<li><a href="http://www.winseliu.com/blog/2016/03/11/install-and-config-openvpn/">安装配置OpenVPN</a></li>
<li><a href="http://www.winseliu.com/blog/2015/11/22/gfw-ladder/">搭梯笔记</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_port_forwarding.html">SSH原理与运用（二）：远程操作与端口转发</a></li>
<li><a href="http://www.winseliu.com/blog/2015/09/06/squid-http-proxy-server-install/">安装http代理服务器squid</a></li>
<li><a href="http://www.winseliu.com/blog/2017/10/30/windows-run-ubuntu/">Windows Run Ubuntu</a></li>
</ul>


<p>上周和同事讨论到在家访问公司服务器的方式时，可以通过花生壳的DDNS来实现域名动态绑定，相当于了把家里的宽带看做一个公网IP，花生壳实时的把域名解析更新为最新的IP。</p>

<p>其实有了公网IP绑定域名后，就可以在公司访问自己的域名（绑定到了家里的IP），公司连自己域名做一个 <em>反向代理</em> ，然后就可以在家直接访问公司的环境了。</p>

<p>但是查了下对于花生壳的口碑都不咋的，其实只要能自动的更新绑定域名和宽带的IP（电信宽带给的是动态IP，使用动态域名绑定），和花生壳的效果是一样。然后在 github 查到了 <code>aliyun-ddns</code> 可以同时定时检测来更新阿里云上的域名解析。</p>

<p>首先通过域名映射到家里电信宽带的公网IP，ddns用来适配电信IP的动态分配； <br/>
然后在家里局域网的一台机器开个SSH的服务；  <br/>
再在家里路由上做端口转发到ssh主机。这样就可以在公司通过 <code>ssh -p port my-domain</code> 连回家了。</p>

<h2>DDNS配置：映射域名到自己的公网IP</h2>

<p><a href="https://github.com/yyqian/aliyun-ddns">aliyun-ddns</a> 老版本有些复杂，我在此基础上一个<a href="https://github.com/winse/aliyun-ddns">本地命令行的版本</a> ，直接运行一个脚本就可以更新域名解析了：</p>

<pre><code>./client.sh myhome.winseliu.com
</code></pre>

<p><img src="/images/blogs/aliyun-dns.png" alt="" /></p>

<p>注：默认电信宽带给你分配的内网IP的，你可以打10000号要他们给你分配改成公网IP。</p>

<h2>本地环境配置</h2>

<ul>
<li>本地SSHD配置</li>
</ul>


<pre><code>winse@DESKTOP-ADH7K1Q:~$ sudo dpkg-reconfigure openssh-server
winse@DESKTOP-ADH7K1Q:~$ sudo service ssh start
</code></pre>

<ul>
<li>无秘密登录配置</li>
</ul>


<p>为了安全，通过公网的SSH访问最好通过秘钥登录，把SSH密码登录的方式给关掉。</p>

<pre><code>winse@DESKTOP-ADH7K1Q:~/.ssh$ cat /business/server/id_rsa.pub &gt;&gt;authorized_keys
</code></pre>

<p></p>

<ul>
<li>本机防火墙开放22端口</li>
</ul>


<p>参考 <a href="https://blog.csdn.net/zzq900503/article/details/11936379">开放windows服务器端口&mdash;&ndash;以打开端口8080为例</a></p>

<p><img src="/images/blogs/ddns-local-firewall.png" alt="" /></p>

<ul>
<li>路由器端口映射配置</li>
</ul>


<p><img src="/images/blogs/ddns-route-portforwarding.png" alt="" /></p>

<h2>穿透：配置反向代理</h2>

<p>在公司(机器)访问自己的域名，使用ssh的 <code>-R</code> 反向代理参数连接在家里电脑，在家里电脑新建一个5432的端口绑定(数据转发)到服务器的5432端口。这样当你在家电脑连本地的 <code>127.0.0.1:5432</code> 就相当于连接了服务器的 5432 端口。</p>

<pre><code>/usr/bin/autossh -M 0 -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no \
-N -R 5432:localhost:5432 -i ~/.ssh/id_rsa autossh@myhome.winseliu.com 
</code></pre>

<p></p>

<p>当autossh连接太慢、并且SSH提示信息一直不出来，你完全有理由怀疑本地端口被占用了！！查看本地端口状态：</p>

<pre><code>C:\Users\winse&gt;netstat /?

C:\Users\winse&gt;netstat -ano |findstr 5432
</code></pre>

<p>如果端口被占用了，需要去任务管理器中关掉对应PID的程序。</p>

<p></p>

<h2>小结</h2>

<p>速度比 teamviewer vpn 的方式快狠多狠多！！这个10000号值得打，这个ddns值得一试。</p>

<h2>后记</h2>

<h3>说说 VS Code调试</h3>

<p>在写脚本bat/sh的过程中，需要用到nodejs的调试。</p>

<p>使用Windows Ubuntu中安装的Node：</p>

<ul>
<li><a href="https://blogs.msdn.microsoft.com/commandline/2017/10/27/running-node-js-on-wsl-from-visual-studio-code/">Running Node.js on WSL from Visual Studio Code</a></li>
<li><a href="https://stackoverflow.com/a/47495710/5697508">Using Visual Studio Code on Windows with Ubuntu-Bash and NodeJS</a></li>
</ul>


<pre><code>"useWSL": true
</code></pre>

<p><a href="https://code.visualstudio.com/docs/nodejs/nodejs-debugging">https://code.visualstudio.com/docs/nodejs/nodejs-debugging</a></p>

<p>注意：这种外部启动的方式，会通过bash.sh运行node，所以就算停止调试后，Node进程还是一直存在的！！！需要通过任务管理器关闭。</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
