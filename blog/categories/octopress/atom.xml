<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: #octopress | Winse Blog]]></title>
  <link href="http://winse.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://winse.github.io/"/>
  <updated>2024-01-13T10:40:37+08:00</updated>
  <id>http://winse.github.io/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress生成TOC]]></title>
    <link href="http://winse.github.io/blog/2021/12/08/octopress-generate-toc/"/>
    <updated>2021-12-08T18:23:23+08:00</updated>
    <id>http://winse.github.io/blog/2021/12/08/octopress-generate-toc</id>
    <content type="html"><![CDATA[<p>尝试了jekyll直接生成toc的方式都失败了，最终通过jquery运行时生成的方式实现目录导航。</p>

<h2>参考</h2>

<ul>
<li><a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">Generating a Table of Contents in Octopress</a></li>
</ul>


<h2>步骤实现</h2>

<h3>添加jquery.toc.min.js</h3>

<p>1、下载 <a href="https://ndabas.github.io/toc/">https://ndabas.github.io/toc/</a> 当前是 0.4.0 版本。解压把 jquery.toc.min.js 放到 source/javascripts/libs/ 目录下。</p>

<p>2、在 source/_includes/head.html 文件的 jquery.min.js 下一行引入 jquery.toc.min.js ：</p>

<pre><code>
  &lt;script&gt;!window.jQuery &amp;&amp; document.write(unescape('%3Cscript src="{{ root_url }}/javascripts/libs/jquery.min.js"%3E%3C/script%3E'))&lt;/script&gt;
  &lt;script src="{{ root_url }}/javascripts/libs/jquery.toc.min.js" type="text/javascript"&gt;&lt;/script&gt;

</code></pre>

<h3>使用toc创建目录导航</h3>

<p>3、在 source/javascripts 目录下创建 generate-toc.js ，内容如下：</p>

<pre><code>function generateTOC(insertBefore, heading) {
  var container = jQuery("&lt;div id='tocBlock'&gt;&lt;/div&gt;");
  var div = jQuery("&lt;ul id='toc'&gt;&lt;/ul&gt;");

  var content = $(insertBefore).first();

  if (heading != undefined &amp;&amp; heading != null) {
    container.append('&lt;span class="tocHeading"&gt;' + heading + '&lt;/span&gt;');
  }

// div.tableOfContents(content);
  div.toc({content: content, headings: "h2,h3,h4"});
  container.append(div);
  container.insertBefore(insertBefore);
}
</code></pre>

<p>并在 source/_includes/custom/head.html 引入该文件：</p>

<p>```
</p>

<script src="{{ root_url }}/javascripts/generate-toc.js" type="text/javascript"></script>


<p>
```</p>

<p>4、运行时调用toc创建目录，在 source/_includes/custom/after_footer.html 添加如下内容：</p>

<pre><code>
{% if index %}
  {% comment %}
  No table of contents on the index page.
  {% endcomment %}

{% elsif page.toc == true %}
  &lt;script type="text/javascript"&gt;
  jQuery(document).ready(function() {
    // Put a TOC right before the entry content.
    generateTOC('.entry-content', '目录');
  });
  &lt;/script&gt;
{% endif %}

</code></pre>

<h3>CSS样式</h3>

<p>5、添加样式，在 sass/custom 目录下添加 _screen.scss 文件，内容如下：</p>

<pre><code>$toc-bg: #dfdfdf;

$toc-incr: 5px;

div#tocBlock {
border-radius: 10px;
padding: 10px;
box-shadow: 5px 5px 5px #999;

    float: right;
    font-size: 10pt;
    width: 300px;
    padding-left: 20px;
    padding-right: 10px;
    padding-top: 10px;
    padding-bottom: 0px;

    background: $toc-bg;
    border: solid 1px #999999;
    margin: 0 0 10px 15px;

    .tocHeading {
        font-weight: bold;
        font-size: 125%;
    }

    #toc {
        background: $toc-bg;
        ul {
            list-style: disc;
            li {
                margin-left: $toc-incr !important;
                padding: 0 !important;
            }
        }
    }
}
</code></pre>

<p>并把该文件添加到 sass/screen.scss ：</p>

<pre><code>@import "custom/screen";
</code></pre>

<h3>运行调试</h3>

<p>6、删除 source/stylesheets/screen.css</p>

<p>7、预览看效果 <code>rake preview</code></p>

<h2>jekyll生成 查看</h2>

<blockquote><p>{:toc} ，jekyll-toc ，jekyll html 都没试成功，难道是jekyll-2太老了？</p></blockquote>

<ul>
<li><a href="https://plutotree.me/jekyll/2019/01/30/jekyll-toc-solution.html">https://plutotree.me/jekyll/2019/01/30/jekyll-toc-solution.html</a></li>
<li><a href="http://www.zhengjiachao.com/topics/github.io/add-outline-on-jekyll-post.html">http://www.zhengjiachao.com/topics/github.io/add-outline-on-jekyll-post.html</a></li>
<li><a href="https://github.com/allejo/jekyll-toc#usage">https://github.com/allejo/jekyll-toc#usage</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitalk on Octopress]]></title>
    <link href="http://winse.github.io/blog/2018/01/20/gitalk-on-octopress/"/>
    <updated>2018-01-20T15:41:00+08:00</updated>
    <id>http://winse.github.io/blog/2018/01/20/gitalk-on-octopress</id>
    <content type="html"><![CDATA[<p>以前有添加过 多说 ，步骤都类似的。其实就是调用一个第三方的服务，把评论的数据存储在第三方。</p>

<p>可以先看看 <a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">gitalk 的文档</a> ，分四步：</p>

<ul>
<li>注册一个github 的 <a href="https://github.com/settings/developers">OAuth Apps</a></li>
<li>添加div容器</li>
<li>加入css，js依赖</li>
<li>调用javascript显示</li>
</ul>


<h2>配置</h2>

<h4>注册一个github应用</h4>

<ul>
<li><a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md#%E4%BD%BF%E7%94%A8">使用</a></li>
<li><a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a></li>
</ul>


<h4>在 <code>_layouts/post.html</code> 的 Comments 下添加一个 gitalk-container 的节点：</h4>

<p>（粘贴后把大括号和百分号之间的空格去掉）</p>

<p>```
{ % if site.disqus_short_name and page.comments == true % }
  <section>
    <h1>Comments</h1></p>

<!-- gitalk评论 start -->


<pre><code>&lt;div id="gitalk-container"&gt;&lt;/div&gt; 
</code></pre>

<!-- gitalk评论 end -->


<p>  </section>
{ % endif % }
```</p>

<h4>在 <code>_includes</code> 目录下增加一个 gitalk.html 的页面，添加依赖并添加初始化代码：</h4>

<p>这里clientID，clientSecret对应第一步注册应用的id和secret。</p>

<p>在官网文档给的例子上调整了一下: id， body, createIssueManually。代码里面是通过 <code>labels + id</code> 来查询对应的issue：<a href="https://github.com/gitalk/gitalk/blob/9a2c6e94281a628a8e0f1ccbdceebd5d17bc1756/src/gitalk.jsx#L174">查询Issue源码</a></p>

<p>（粘贴后把大括号和百分号之间的空格去掉）</p>

<p>```
{ % if site.disqus_short_name and page.comments != false % }</p>

<p><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css"></p>

<script src="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"></script>




<script>

var gitalk = new Gitalk({
  clientID: 'c14f68eac6330d15d984',
  clientSecret: '73b7c1fffa98e299ff0cdd332821201933858e6e',
  repo: 'winse.github.com',
  owner: 'winse',
  admin: ['winse'],
  id: location.pathname,
  labels: ['Gitalk'],
  body: "http://winse.github.io" + location.pathname,
  createIssueManually: true,
  
  // facebook-like distraction free mode
  distractionFreeMode: false
})

gitalk.render('gitalk-container')

</script>


<p>{ % endif % }
```</p>

<p>然后在同一级目录的 after_footer.html 新增一条 这个新页面一个引用（粘贴后把大括号和百分号之间的空格去掉）:</p>

<pre><code>{ % include gitalk.html % }
</code></pre>

<h2>初始化</h2>

<ul>
<li><a href="https://github.com/gitalk/gitalk/wiki/%E8%AF%84%E8%AE%BA%E5%88%9D%E5%A7%8B%E5%8C%96">https://github.com/gitalk/gitalk/wiki/%E8%AF%84%E8%AE%BA%E5%88%9D%E5%A7%8B%E5%8C%96</a></li>
<li><a href="https://draveness.me/git-comments-initialize">https://draveness.me/git-comments-initialize</a></li>
<li><a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></li>
</ul>


<p>其实就是在对应的repo下面建一个repo，注意下 <strong>labels</strong> 规则就行了：</p>

<pre><code>username = "winse" # GitHub 用户名

# https://github.com/settings/tokens
new_token = ""  # GitHub Token
repo_name = "winse.github.com" # 存放 issues

sitemap_url = "sitemap.xml" # sitemap
kind = "Gitalk"

# 可以结合git的状态，added的调用命令创建一个issue

# 除了使用Token，也可以手动输入密码
curl -H "Accept: application/json" -X POST -d '{"body": "http://winseliu.com/blog/2017/11/20/sed-debug-sedsed/", "labels": ["Gitalk", "/blog/2017/11/20/sed-debug-sedsed/"], "title": "gitalk 测试" }' -u $username https://api.github.com/repos/$username/$repo_name/issues
Enter host password for user 'winse':

OR

# https://developer.github.com/v3/auth/#basic-authentication
curl -u username:token https://api.github.com/user
</code></pre>

<h2>参考</h2>

<ul>
<li><a href="http://qiubaiying.top/2017/12/19/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0-Gitalk-%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/">为博客添加 Gitalk 评论插件</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
