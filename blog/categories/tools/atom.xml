<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tools | Winse Blog]]></title>
  <link href="http://winseliu.com/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://winseliu.com/"/>
  <updated>2015-09-22T17:34:20+08:00</updated>
  <id>http://winseliu.com/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cacti监控主机]]></title>
    <link href="http://winseliu.com/blog/2015/09/22/cacti-start-guide/"/>
    <updated>2015-09-22T14:33:36+08:00</updated>
    <id>http://winseliu.com/blog/2015/09/22/cacti-start-guide</id>
    <content type="html"><![CDATA[<h2>环境说明</h2>

<p>五台机器：cu1~cu5(centos6.6)， 其中仅cu2作为cacti服务器，所有服务器都安装snmp服务。</p>

<pre><code>cu1     192.168.0.37 
cu2     192.168.0.214 
cu3     192.168.0.148 
cu4     192.168.0.30 
cu5     192.168.0.174 
</code></pre>

<h2>软件安装</h2>

<p>版本信息在贴的内容中体现。PHP不会，仅仅作为一个工具来使用。</p>

<h3>Cacti服务器机器安装</h3>

<p>mysql数据库5.1</p>

<pre><code>[root@cu2 ~]# rpm -q mysql 
mysql-5.1.73-5.el6_6.x86_64
</code></pre>

<p>首先用yum安装了php，httpd，snmp和rrdtool工具。</p>

<pre><code>[root@cu2 ~]# yum install epel-release

[root@cu2 ~]# yum install httpd php php-devel php-mysql php-pear php-common php-gd php-mbstring php-cli php-snmp net-snmp-utils net-snmp-libs rrdtool 
...

Installed:
  net-snmp-libs.x86_64 1:5.5-54.el6_7.1 net-snmp-utils.x86_64 1:5.5-54.el6_7.1 php.x86_64 0:5.3.3-46.el6_6          php-cli.x86_64 0:5.3.3-46.el6_6   php-common.x86_64 0:5.3.3-46.el6_6
  php-devel.x86_64 0:5.3.3-46.el6_6     php-gd.x86_64 0:5.3.3-46.el6_6         php-mbstring.x86_64 0:5.3.3-46.el6_6 php-mysql.x86_64 0:5.3.3-46.el6_6 php-pear.noarch 1:1.9.4-4.el6     
  php-snmp.x86_64 0:5.3.3-46.el6_6      rrdtool.x86_64 0:1.3.8-7.el6          

Dependency Installed:
  autoconf.noarch 0:2.63-5.1.el6               automake.noarch 0:1.11.1-4.el6                  dejavu-fonts-common.noarch 0:2.33-1.el6   dejavu-lgc-sans-mono-fonts.noarch 0:2.33-1.el6  
  dejavu-sans-mono-fonts.noarch 0:2.33-1.el6   fontpackages-filesystem.noarch 0:1.41-1.1.el6   lm_sensors-libs.x86_64 0:3.1.1-17.el6     net-snmp.x86_64 1:5.5-54.el6_7.1                
  php-pdo.x86_64 0:5.3.3-46.el6_6             

Updated:
  httpd.x86_64 0:2.2.15-47.el6.centos                                                                                                                                                       

Dependency Updated:
  httpd-tools.x86_64 0:2.2.15-47.el6.centos                                                                                                                                                 

Complete!

[root@cu2 ~]# service httpd start
Starting httpd: httpd: Could not reliably determine the server's fully qualified domain name, using 192.168.0.214 for ServerName
                                                           [  OK  ]
[root@cu2 ~]# service snmpd start
Starting snmpd:                                            [  OK  ]

[root@cu2 ~]# vi /etc/snmp/snmpd.conf 
     41 #com2sec notConfigUser  default       public
     42 com2sec notConfigUser  192.168.0.214       public
     ...
     63 #access  notConfigGroup ""      any       noauth    exact  systemview none none
     64 access  notConfigGroup ""      any       noauth    exact  all none none
     ...
     86 ##           incl/excl subtree                          mask
     87 view all    included  .1                               80    

[root@cu2 ~]# service snmpd restart

使用snmpwalk可以得到数据
[root@cu2 ~]# snmpwalk -Os -c public -v 1 cu2 system

snmpwalk -v 1 -c public localhost IP-MIB::ipAdEntIfIndex
</code></pre>

<p>然后把cacti解压到httpd应用的默认目录下/var/www/html。同时配置了cacti连接到数据库。</p>

<pre><code>[root@cu2 ~]# cd /var/www/html/
[root@cu2 html]# tar zxvf cacti-0.8.8f.tar.gz 

[root@cu2 html]# ln -s cacti-0.8.8f cacti

[root@cu2 html]$ mysql -u root -p -h 127.0.01
Enter password: 
mysql&gt; 
mysql&gt; create database cacti character set UTF8;
mysql&gt; grant all on cacti.* to cacti@'%' identified by cacti;
mysql&gt; flush privileges;
mysql&gt; source /var/www/html/cacti/cacti.sql;

[root@cu2 html]# vi cacti/include/config.php 
$database_type = "mysql";
$database_default = "cacti";
$database_hostname = "127.0.0.1";
$database_username = "cacti";
$database_password = "cacti";
$database_port = "3306";

[root@cu2 html]$ vi /etc/php.ini 
date.timezone = "Asia/Shanghai"

[root@cu2 cacti]# php poller.php 

[root@cu2 cacti]# crontab -e
* * * * * php /var/www/html/cacti/poller.php &gt; /var/www/html/cacti/log/cron.log 2&gt;&amp;1
</code></pre>

<p>打开浏览器访问：<a href="http://cu2/cacti/">http://cu2/cacti/</a> 首先会进入到install步骤，最后输入admin/admin登录，就可以看到localhost的数据了。</p>

<p>日志可以通过：</p>

<pre><code>[root@cu2 cacti]# less /var/log/httpd/error_log 

[root@cu2 cacti]# less log/cacti.log 
</code></pre>

<h3>添加插件</h3>

<p>（网上很多文章都要打补丁，我这里的版本是最新的，同时plugin的补丁没有对应的版本，这里直接安装插件）</p>

<p>从<a href="http://docs.cacti.net/plugins">http://docs.cacti.net/plugins</a>下载<a href="http://docs.cacti.net/plugin:monitor">monitor</a>。把下载文件解压到plugins目录下：</p>

<pre><code>[root@cu2 plugins]# pwd
/var/www/html/cacti/plugins
[root@cu2 plugins]# ll
-rw-r--r-- 1 1000 users   44 Jul 20 21:42 index.php
drwxr-xr-x 4 root root  4096 Oct  6  2011 monitor
</code></pre>

<p>然后进入Plugin Management页面<a href="http://cu2/cacti/plugins.php">http://cu2/cacti/plugins.php</a>，就能看到Monitor插件。点击表格Actions列的<strong>安装和启用</strong>图标（按钮），启用后，最上面页签会增加新的页签项monitor。</p>

<p>点击monitor页签，可以查看机器存活的状态。</p>

<p>同时Settings页面多了Misc选项卡，可以配置修改monitor属性。</p>

<p>注意：网上版本资料都有配置config.php添加plugins变量。我这里没修改配置也是ok的，安装启用会把monitor下面的sql更新到数据库，不需要手动执行。</p>

<h3>安装spine</h3>

<pre><code>[root@cu2 ~] tar zxvf cacti-spine-0.8.8f.tar.gz

[root@cu2 cacti-spine-0.8.8f]# yum install -y mysql-devel
[root@cu2 cacti-spine-0.8.8f]# yum install net-snmp-devel

[root@cu2 cacti-spine-0.8.8f]# ./configuration --prefix=/usr/local/cacti-spine
[root@cu2 cacti-spine-0.8.8f]# make &amp;&amp; make install

[root@cu2 cacti-spine-0.8.8f]# cd /usr/local/cacti-spine/etc
[root@cu2 etc]# mv spine.conf.dist spine.conf
[root@cu2 etc]# vi spine.conf 
DB_Host         127.0.0.1
DB_Database     cacti
DB_User         cacti
DB_Pass         cacti
DB_Port         3306
</code></pre>

<p>然后修改<a href="http://hadoop-master2/cacti/settings.php">cacti</a>使用spine来获取信息。</p>

<p>在[Settings]-[Paths]添加Spine Poller File Path为<code>/usr/local/cacti-spine/bin/spine</code>。在[Poller]选项卡，[Poller Type]修改为spine，[Poller Interval]和[Cron Interval]修改为一分钟即Every Minute。</p>

<p>添加“每分钟”流量视图，
点击Console -> Data Templates -> Interface -> Traffic 添加“每分钟”流量视图，将轮询时间设置为60秒，Heartbeat时间设置为120秒(traffic_out里面的Heartbeat时间也设置为120秒)</p>

<h2>被监控机器配置</h2>

<p>被监控的机器，仅仅需要安装snmp即可。然后配置snpmd.conf即可。</p>

<pre><code>[root@cu5 ~]# yum install  net-snmp net-snmp-utils net-snmp-libs -y
[root@cu5 ~]# vi /etc/snmp/snmpd.conf 
     41 #com2sec notConfigUser  default       public
     42 com2sec notConfigUser  192.168.0.214       public
     ...
     63 #access  notConfigGroup ""      any       noauth    exact  systemview none none
     64 access  notConfigGroup ""      any       noauth    exact  all none none
     ...
     86 ##           incl/excl subtree                          mask
     87 view all    included  .1                               80    

[root@cu2 ~]# service snmpd restart
</code></pre>

<p>然后在Cacti的web页面添加Device(主机)。</p>

<ul>
<li>点击Console->Devices，打开设备管理页面。</li>
<li>点击右上角的add，添加一个新的机器</li>
<li>当主机的信息填好之后，点击Create

<ul>
<li>Host Template就是一个模板，会事先建立一些Associated Graph Templates和Associated Data Queries的数据，如Load Average，Memory Uages等。如果不确定直接选None即可。</li>
<li>SNMP Version选<code>Version 2</code>，SNMP Community与snmpd.conf中对应，如果安装上面操作，默认即可。</li>
</ul>
</li>
<li>此时你的页面左上角应该显示：Save Successful，并且已经显示出了主机信息和SNMP信息，如果SNMP信息显示 SNMP error，请查看最后的问题综述。</li>
<li>这时我们就可以添加相应的监控项了，在页面最下方的Associated Graph Templates中添加图形模板，在Associated Data Queries中添加数据模板。</li>
<li>保存，点击右上角的Create Graphs for this Host，来为刚才通过模板所获得到的数据进行画图。</li>
<li>选择好需要画图的项目后，点击右下角的Create，左上角会出现被创建出来的画图项。</li>
</ul>


<p>在Graphs界面左边显示树新添加主机。</p>

<ul>
<li>在Cacti界面Graph Trees中，选择进入节点(或者系统默认的Default Tree)。</li>
<li>添加一个新的显示项，在Tree Item Type中选择Host，然后在下面的Host中选择我们刚才创建的主机。点击Create。</li>
</ul>


<h2>资料</h2>

<p>入门的文档不错，可以通过到<a href="http://vdisk.weibo.com/u/1554831624">微盘</a>下载。</p>

<pre><code>Cacti实战指南--备份还原.pdf
Cacti实战指南-完美部署.pdf
Cacti实战指南-巧设轮询.pdf
Cacti实战指南-插件安装.pdf
Cacti实战指南-用户权限.pdf
Cacti实战指南-邮件预警.pdf
Cacti实战指南-阀值预警.pdf
</code></pre>

<h2>参考</h2>

<ul>
<li>先看这个文档 <a href="http://blog.chinaunix.net/attachment/attach/21/08/97/212108972176206e1112f29600926449bdeedb3970.pdf">http://blog.chinaunix.net/attachment/attach/21/08/97/212108972176206e1112f29600926449bdeedb3970.pdf</a></li>
<li><a href="http://blog.csdn.net/chen3888015/article/details/8233125">http://blog.csdn.net/chen3888015/article/details/8233125</a></li>
<li><p><a href="http://www.cacti.net/downloads/docs/pdf/manual.pdf">http://www.cacti.net/downloads/docs/pdf/manual.pdf</a></p></li>
<li><p><a href="http://www.ehowstuff.com/how-to-install-and-configure-epel-repository-on-centos-6-2/">http://www.ehowstuff.com/how-to-install-and-configure-epel-repository-on-centos-6-2/</a></p></li>
<li><a href="http://www.ehowstuff.com/how-to-install-cacti-on-centos-6-2-using-epel-repository/">http://www.ehowstuff.com/how-to-install-cacti-on-centos-6-2-using-epel-repository/</a></li>
<li><a href="http://www.ehowstuff.com/how-to-setup-and-configure-cacti-on-centos-6-2/">http://www.ehowstuff.com/how-to-setup-and-configure-cacti-on-centos-6-2/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决SecureCRT【zmodem Transfer Canceled by Remote Side】问题]]></title>
    <link href="http://winseliu.com/blog/2015/09/21/solve-securecrt-zmodem-transfer-canceled-by-remote-side/"/>
    <updated>2015-09-21T16:02:18+08:00</updated>
    <id>http://winseliu.com/blog/2015/09/21/solve-securecrt-zmodem-transfer-canceled-by-remote-side</id>
    <content type="html"><![CDATA[<p>处理方法很简单，解决后，对于ssh机器之间多次跳转的文件传输操作会方便很多。</p>

<pre><code>写到/etc/profile以后就可以直接使用了
[root@af042cb4b34c ~]# alias rz="rz -e"

[root@af042cb4b34c ~]# cd /usr/share/cacti/
[root@af042cb4b34c cacti]# cd plugins
[root@af042cb4b34c plugins]# rz
rz waiting to receive.
Starting zmodem transfer.  Press Ctrl+C to cancel.
Transferring monitor-v1.3-1.tgz...
  100%     231 KB     231 KB/sec    00:00:01       0 Errors  

[root@af042cb4b34c plugins]# ll
total 236
-rw-r--r-- 1 root root     44 Aug  7  2013 index.php
-rw-r--r-- 1 root root 236682 Sep 21 07:54 monitor-v1.3-1.tgz
</code></pre>

<p>zmoden还是有比较多的限制。sftp还是不能少啊！！</p>

<h2>参考</h2>

<ul>
<li><a href="http://iamhere1.blog.163.com/blog/static/23612284201372322622902/">http://iamhere1.blog.163.com/blog/static/23612284201372322622902/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装http代理服务器squid]]></title>
    <link href="http://winseliu.com/blog/2015/09/06/squid-http-proxy-server-install/"/>
    <updated>2015-09-06T23:22:50+08:00</updated>
    <id>http://winseliu.com/blog/2015/09/06/squid-http-proxy-server-install</id>
    <content type="html"><![CDATA[<h2>环境说明</h2>

<ul>
<li>squid-3.3.14.tar.gz</li>
<li>centos6.6</li>
</ul>


<h2>安装</h2>

<pre><code>yum install gcc gcc-c++
cd squid-3.3.14
./configure
make
make install

cd /usr/local/squid
#不修改会有权限的问题
chmod 777 var/logs
sbin/squid 
sbin/squid -k shutdown
</code></pre>

<h2>使用</h2>

<p>在浏览器中设置Http代理。端口为3128</p>

<h2>参考</h2>

<ul>
<li><a href="ftp://ftp.cuhk.edu.hk/pub/packages/info-systems/www/squid/">ftp://ftp.cuhk.edu.hk/pub/packages/info-systems/www/squid/</a></li>
<li><a href="http://www.educity.cn/linux/517165.html">http://www.educity.cn/linux/517165.html</a></li>
<li><a href="http://www.ajaxstu.com/Proxyfuwuqi/283731.html">http://www.ajaxstu.com/Proxyfuwuqi/283731.html</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_537b9caa010185xo.html">http://blog.sina.com.cn/s/blog_537b9caa010185xo.html</a></li>
<li><a href="http://blog.163.com/sword_111/blog/static/6658941620114163458435/">http://blog.163.com/sword_111/blog/static/6658941620114163458435/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[手动安装supervisor]]></title>
    <link href="http://winseliu.com/blog/2015/08/24/manual-install-supervisor/"/>
    <updated>2015-08-24T16:24:25+08:00</updated>
    <id>http://winseliu.com/blog/2015/08/24/manual-install-supervisor</id>
    <content type="html"><![CDATA[<h2>下载依赖以及安装包，并安装</h2>

<pre><code>python -V

tar zxvf setuptools-18.2.tar.gz 
cd setuptools-18.2
python setup.py install

tar zxvf meld3-0.6.5.tar.gz 
cd meld3-0.6.5
python setup.py install

tar zxvf elementtree-1.2.6-20050316.tar.gz 
cd elementtree-1.2.6-20050316
python setup.py install

tar zxvf supervisor-3.1.3.tar.gz 
cd supervisor-3.1.3
python setup.py  install
</code></pre>

<h2>配置启动</h2>

<pre><code>[root@master supervisor-3.1.3]# echo_supervisord_conf &gt;/etc/supervisord.conf
[root@master supervisor-3.1.3]# supervisord

[root@master supervisor-3.1.3]# ps aux | grep supervisor | grep -v grep
root      6123  0.0  0.7 207292 13296 ?        Ss   08:15   0:00 /usr/bin/python /usr/bin/supervisord

[root@master supervisor-3.1.3]# supervisorctl shutdown
Shut down
</code></pre>

<h2>参考</h2>

<ul>
<li><a href="http://supervisord.org/installing.html#installing-to-a-system-without-internet-access">http://supervisord.org/installing.html#installing-to-a-system-without-internet-access</a></li>
<li><a href="http://supervisord.org/configuration.html#programx-section">http://supervisord.org/configuration.html#programx-section</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logstash Elasticsearch Kibana日志采集查询系统搭建]]></title>
    <link href="http://winseliu.com/blog/2015/08/21/logstash-elasticsearch-kibana-startguide/"/>
    <updated>2015-08-21T14:42:30+08:00</updated>
    <id>http://winseliu.com/blog/2015/08/21/logstash-elasticsearch-kibana-startguide</id>
    <content type="html"><![CDATA[<h2>软件版本</h2>

<pre><code>[root@master opt]# ll
total 20
drwxr-xr-x 7 root root 4096 Aug 21 01:23 elasticsearch-1.7.1
drwxr-xr-x 8 uucp  143 4096 Mar 18  2014 jdk1.8.0_05
drwxrwxr-x 7 1000 1000 4096 Aug 21 01:09 kibana-4.1.1-linux-x64
drwxr-xr-x 5 root root 4096 Aug 21 05:58 logstash-1.5.3
drwxrwxr-x 6 root root 4096 Aug 21 06:44 redis-3.0.3
</code></pre>

<h2>安装运行脚本</h2>

<pre><code># java
vi /etc/profile
source /etc/profile

cd /opt/elasticsearch-1.7.1
bin/elasticsearch -p elasticsearch.pid -d

curl localhost:9200/_cluster/nodes/172.17.0.4

cd /opt/kibana-4.1.1-linux-x64/
bin/kibana 
# http://master:5601

cd /opt/redis-3.0.3
yum install gcc
yum install bzip2
make MALLOC=jemalloc

# 也可以修改配置的daemon属性
nohup src/redis-server &amp; 

cd /opt/logstash-1.5.3/
bin/logstash -e 'input { stdin { } } output { stdout {} }'

vi index.conf
vi agent.conf

# agent可不加
bin/logstash agent -f agent.conf &amp;
bin/logstash agent -f index.conf &amp;
</code></pre>

<h2>logstash配置</h2>

<p>由于程序都运行在一台机器(localhost)，redis、elasticsearch和kibana都使用默认配置。下面贴的是logstash的采集和过滤的配置：</p>

<p>(kibaba的配置config/kibana.yml, elasticsearch的配置config/elasticsearch.yml)</p>

<pre><code>[root@master logstash-1.5.3]# cat agent.conf 
input {
  file {
    path =&gt; "/var/log/yum.log"
    start_position =&gt; beginning
  }
}

output {
  redis {
    key =&gt; "logstash.redis"
    data_type =&gt; list
  }

  # 便于查看调试
  stdout { }
}

[root@master logstash-1.5.3]# cat index.conf 
input {
  redis {
    data_type =&gt; list
    key =&gt; "logstash.redis"
  }
}

output {
  elasticsearch {
    host =&gt; "localhost"
  }
}
</code></pre>

<p>注意要改动下被采集的原始文件！！然后启动相应的程序，打开浏览器<a href="http://master:5601">http://master:5601</a>配置一下索引项，就可以查看了。</p>

<p>至于input/output/filter(map,reduce)怎么配置，查看官方文档<a href="https://www.elastic.co/guide/en/logstash/current/filter-plugins.html">filter-plugins</a></p>

<h2>filter</h2>

<pre><code>[hadoop@cu1 logstash-1.5.3]$ bin/logstash -e "
input {
stdin {}
}

filter {
grok { 
match =&gt; {\"message\" =&gt; \"%{WORD:content}\"}
add_field =&gt; { \"foo_%{content}\" =&gt; \"helloworld\" }
}
}

output {
stdout { codec =&gt; json }
}
"

abc
{"message":"abc","@version":"1","@timestamp":"2015-09-10T08:02:52.024Z","host":"cu1","content":"abc","foo_abc":"helloworld"}
</code></pre>

<p>grok-pattern文件的位置：</p>

<pre><code>[hadoop@cu2 logstash-1.5.3]$ less ./vendor/bundle/jruby/1.9/gems/logstash-patterns-core-0.1.10/patterns/grok-patterns 

2015-09-06 15:23:53,027 INFO org.apache.hadoop.hdfs.server.namenode.FSNamesystem: No KeyProvider found.
%{TIMESTAMP_ISO8601:time} %{LOGLEVEL:loglevel} %{GREEDYDATA:content}

[2015-09-10 08:00:46,539][INFO ][cluster.metadata         ] [Jumbo Carnation] [logstash-2015.09.10] update_mapping [hbase-logs] (dynamic)
\[%{TIMESTAMP_ISO8601:time}\]\[%{LOGLEVEL:loglevel}%{SPACE}\]%{GREEDYDATA:content}
</code></pre>

<h2>学习</h2>

<p>过滤DEBUG/INFO日志</p>

<pre><code>[hadoop@cu1 logstash-1.5.3]$ bin/logstash -e "
 input {
 stdin {}
 }

 filter {
 grok {
 match =&gt; { \"message\" =&gt; \"%{TIMESTAMP_ISO8601:time} %{LOGLEVEL:loglevel} %{GREEDYDATA:content}\" }
 }

 if [loglevel] == \"INFO\" { drop {} }
 }

 output {
 stdout {}
 }

 "
</code></pre>

<p>用shell先预处理</p>

<pre><code>input {
    stdin {
        type =&gt; "nginx"
        format =&gt; "json_event"
    }
} 
output {
    amqp {
        type =&gt; "nginx"
        host =&gt; "10.10.10.10"
        key  =&gt; "cdn"
        name =&gt; "logstash"
        exchange_type =&gt; "direct"
    }
}

#!/bin/sh
      tail -F /data/nginx/logs/access.json \
    | sed 's/upstreamtime":-/upstreamtime":0/' \
    | /usr/local/logstash/bin/logstash -f /usr/local/logstash/etc/agent.conf &amp;
</code></pre>

<h2>参考</h2>

<ul>
<li><a href="http://www.cnblogs.com/buzzlight/p/logstash_elasticsearch_kibana_log.html">http://www.cnblogs.com/buzzlight/p/logstash_elasticsearch_kibana_log.html</a></li>
<li><a href="http://www.cnblogs.com/ibook360/archive/2013/03/15/2961428.html">http://www.cnblogs.com/ibook360/archive/2013/03/15/2961428.html</a></li>
<li><a href="https://www.elastic.co/guide/en/logstash/current/index.html">https://www.elastic.co/guide/en/logstash/current/index.html</a></li>
<li><a href="https://www.elastic.co/guide/en/logstash/current/first-event.html">https://www.elastic.co/guide/en/logstash/current/first-event.html</a></li>
<li><a href="https://www.elastic.co/guide/en/logstash/current/working-with-plugins.html">https://www.elastic.co/guide/en/logstash/current/working-with-plugins.html</a></li>
<li><a href="https://www.elastic.co/guide/en/logstash/current/advanced-pipeline.html">https://www.elastic.co/guide/en/logstash/current/advanced-pipeline.html</a></li>
<li><p><a href="https://www.elastic.co/guide/en/logstash/current/codec-plugins.html">https://www.elastic.co/guide/en/logstash/current/codec-plugins.html</a></p></li>
<li><p><a href="http://blog.csdn.net/yeasy/article/details/45332493">http://blog.csdn.net/yeasy/article/details/45332493</a></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
