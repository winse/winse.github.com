<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tools | Winse Blog]]></title>
  <link href="http://winseliu.com/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://winseliu.com/"/>
  <updated>2015-04-19T16:49:32+08:00</updated>
  <id>http://winseliu.com/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用RamDisk来优化系统]]></title>
    <link href="http://winseliu.com/blog/2015/04/12/optimize-system-ramdisk/"/>
    <updated>2015-04-12T16:56:09+08:00</updated>
    <id>http://winseliu.com/blog/2015/04/12/optimize-system-ramdisk</id>
    <content type="html"><![CDATA[<p>最近加了一条8G的内存，总共16G。暂时来说很难全部用起来。如果能够实现类似linux的shm分区的话，那就完美了，把临时的数据全部放到这个内存分区中。最好是免费的，通过一阵折腾搜索，整理如下：</p>

<p>去到官网<a href="http://www.ltr-data.se/opencode.html/#ImDisk">http://www.ltr-data.se/opencode.html/#ImDisk</a>直接下载<code>ImDisk Toolkit</code><a href="http://reboot.pro/files/file/284-imdisk-toolkit/">http://reboot.pro/files/file/284-imdisk-toolkit/</a>，toolkit里面已经集成了ImDisk软件。（新版本的toolkit可以节省很多事情，参考最后的两个链接看看即可）</p>

<p>配置：填写大小<code>5</code>、盘符<code>S</code>、磁盘格式<code>NTFS</code>，然后点击【确定】格式化磁盘，然后就可以使用了。</p>

<p><img src="/images/blogs/ramdisk-config.png" alt="" /></p>

<p>把临时的文件目录指定到ramdisk，重启系统。</p>

<p><img src="/images/blogs/ramdisk-temp.png" alt="" /></p>

<p>上面仅仅是把用户和系统的临时目录移到<strong>内存盘</strong>中。由于rar，java一些软件都是用用户的临时目录，已经可以体验到加速的快感了！！直接拖拽解压rar情况下速度明显快了很多。</p>

<p>多数情况工作还是以浏览查看网页，把浏览器的缓冲放到内存，既能去掉磁盘无用的一次性读写，还能加快速度！</p>

<p>我使用的是chrome，默认缓冲放置在<code>C:\Users\winse\AppData\Local\Google\Chrome\User Data\Default\Cache</code>，网上有用添加启动参数的方式，最终解决还要修改注册表比较麻烦。这里使用文件链接的方式，把Cache目录重定向到内存盘。</p>

<pre><code>rmdir "C:\Users\winse\AppData\Local\Google\Chrome\User Data\Default\Cache" #删掉原来的Cache目录
mkdir S:\Temp\Chrome\Cache
mklink /J "C:\Users\winse\AppData\Local\Google\Chrome\User Data\Default\Cache" S:\Temp\Chrome\Cache
</code></pre>

<p>还有一个问题，重启后，内存盘的数据会被全部清掉。默认情况下只建立了Temp目录，没有我们指定的Cache目录。Chrome启动的时刻如果发现Cache目录为不可用状态会重建该目录。</p>

<p>在Advanced页签，<strong>Load Content from Image File or Folder</strong>选项可以选择初始化加载的内容。我们只要先把目录结构建立后，然后在初始化后加载该路径一切都解决了。</p>

<pre><code>E:\local\home\RamDiskInit&gt;find .
.
./Temp
./Temp/Chrome
./Temp/Chrome/Cache
</code></pre>

<p>然后在<code>RamDisk Config</code>的Advanced页签选择<strong>E:\local\home\RamDiskInit</strong>作为<strong>Load Content</strong>即可。</p>

<h2>参考</h2>

<ul>
<li><a href="http://zohead.com/archives/rsync-performance-linux-cygwin-msys/">http://zohead.com/archives/rsync-performance-linux-cygwin-msys/</a> 从这里看到ramdisk-imdisk</li>
<li><a href="http://www.appinn.com/imdisk/">http://www.appinn.com/imdisk/</a> 安装简单使用，以及两篇核心文章的链接</li>
<li><a href="http://www.ltr-data.se/opencode.html/#ImDisk">http://www.ltr-data.se/opencode.html/#ImDisk</a></li>
<li><a href="http://www.kenming.idv.tw/super_lighweight_ramdisk_imdisk_setup#more-1995">超小巧效能强悍的穷人版 Ramdisk－ImDisk (设定篇) </a></li>
<li><a href="http://www.mobile01.com/topicdetail.php?f=300&amp;t=2200352">Win7 x64 下使用 ImDisk 当作RamDisk的小小心得与改良方法</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VMware共享目录]]></title>
    <link href="http://winseliu.com/blog/2015/03/07/vmware-sharefolder/"/>
    <updated>2015-03-07T22:25:52+08:00</updated>
    <id>http://winseliu.com/blog/2015/03/07/vmware-sharefolder</id>
    <content type="html"><![CDATA[<p>VMware提供了与主机共享目录的功能，可以在虚拟机访问宿主机器的文件。</p>

<ol>
<li>选择映射目录
 选择[Edit virtual machine settings]，在弹出的对话框中选择[Options]页签，选择[Shared Folders]，点击右边的[Add]按钮添加需要映射(maven)的本地目录。</li>
<li>安装VMware Tools

<ul>
<li>启动linux虚拟机，选择[VM]菜单，再选择[Install VMware Tools&hellip;]菜单。下载完成后，会自动通过cdrom加载到虚拟机。</li>
<li>登录linux虚拟机，执行以下命令：</li>
</ul>
</li>
</ol>


<pre><code>cd /mnt
mkdir cdrom
mount /dev/cdrom cdrom
cd cdrom/
mkdir ~/vmware
tar zxvf VMwareTools-9.2.0-799703.tar.gz -C ~/vmware

cd ~/vmware
cd vmware-tools-distrib/
./vmware-install.pl 
reboot

cd /mnt/hgfs/maven
</code></pre>

<p>当前的maven目录是映射到宿主的机器目录。</p>

<pre><code>[root@localhost maven]# ll -a
total 3
drwxrwxrwx. 1 root root    0 Dec 28  2012 .
dr-xr-xr-x. 1 root root 4192 Mar  7 22:41 ..
drwxrwxrwx. 1 root root    0 Dec 28  2012 .m2
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学习btrace]]></title>
    <link href="http://winseliu.com/blog/2015/02/06/start-btrace/"/>
    <updated>2015-02-06T20:38:33+08:00</updated>
    <id>http://winseliu.com/blog/2015/02/06/start-btrace</id>
    <content type="html"><![CDATA[<p>到官网下载<a href="https://kenai.com/projects/btrace/downloads/directory/releases">btrace</a>，在btrace-bin.zip压缩包中包括了usersguide.html入门教程。源码用hg管理<a href="https://kenai.com/projects/btrace/sources/hg/show">点击下载</a>。</p>

<p>Btrace程序是一个普通的java类，由<strong>BTrace annotations</strong>标注的带有的<code>public static void</code>方法组成。从代码上面来看，类似于spring aop的写法。标注用于指定需要监控的位置（方法，类）。</p>

<p>Btrace程序是只读的，以及只能执行有限制的操作。一般的限制：</p>

<ul>
<li>不能创建新对象（new objects）</li>
<li>不能创建数组（new arrays）</li>
<li>不能抛出异常（throw）</li>
<li>不能捕获异常（catch）</li>
<li>不能调用实例/静态方法。仅仅能调用com.sun.btrace.BTraceUtils的static方法。</li>
<li>不能给被监测的程序的实例或者静态字段复制。但是Btrace程序可以给自己的类的静态字段复制。</li>
<li>不能有实例字段和方法。Btrace类中仅能包括static字段和<code>public static void</code>的方法。</li>
<li>不能有内部类，嵌套类（outer, inner, nested or local classes）</li>
<li>不能有同步块或同步方法</li>
<li>不能包括循环（for，while，do&hellip;while）</li>
<li>不能继承（父类只能是默认的java.lang.Object）</li>
<li>不能实现接口</li>
<li>不能包括assert语句</li>
<li>不能使用类常量</li>
</ul>


<h2>helloworld</h2>

<pre><code>// import all BTrace annotations
import com.sun.btrace.annotations.*;
// import statics from BTraceUtils class
import static com.sun.btrace.BTraceUtils.*;

// @BTrace annotation tells that this is a BTrace program
@BTrace
public class HelloWorld {

    // @OnMethod annotation tells where to probe.
    // In this example, we are interested in entry 
    // into the Thread.start() method. 
    @OnMethod(
        clazz="java.lang.Thread",
        method="start"
    )
    public static void func() {
        // println is defined in BTraceUtils
        // you can only call the static methods of BTraceUtils
        println("about to start a thread!");
    }
}
</code></pre>

<p>通过命令行脚本<code>btrace &lt;PID&gt; &lt;btrace-script&gt;</code>脚本运行。script可以是java源文件，或者已经编译好的class字节码文件。</p>

<p>btracec提供了类似于javac的功能，额外会对include的文件中定义的变量进行替换。如果你的btrace类就是一个普通功能的java类的话，直接用javac编译及可以了。</p>

<p>编写一个测试类，然后监控这个java程序的线程启动：</p>

<pre><code>public class HelloTest {

    @Test
    public void test() throws Exception {
        testNewThread();
    }

    public void testNewThread() throws InterruptedException {
        Thread.sleep(20 * 1000); // 最佳方式就是使用Scanner，手动输入一个操作后执行后面的操作。scanner.nextLine()

        for (int i = 0; i &lt; 100; i++) {
            final int index = i;
            new Thread(//
                    new Runnable() {
                        public void run() {
                            System.out.println("my order: " + index);
                        }
                    } //
            ).start();
        }
    }

}
</code></pre>

<p>然后，启动btrace程序：</p>

<pre><code>cd src\test\script

#下面的内容是一个批处理文件
set PATH=%PATH%;C:\cygwin\bin;C:\cygwin\usr\local\bin

set BTRACE_HOME=E:\local\opt\btrace-bin
set CUR_ROOT=%cd%\..\..\..
set SCRIPT=%CUR_ROOT%\src\main\java\com\github\winse\btrace\HelloWorld.java
set SCRIPT=%CUR_ROOT%\target\classes\com\github\winse\btrace\HelloWorld.class

jps -m  | findstr HelloTest | gawk '{print $1}' | xargs -I {} %BTRACE_HOME%\bin\btrace.bat {} %SCRIPT%
</code></pre>

<p>上面的主程序启动后sleep了20s，等btrace程序启动。如果是程序一启动就要进行监控记录，可vm的参数添加javaagent：</p>

<pre><code>-javaagent:E:\local\opt\btrace-bin\build\btrace-agent.jar=noServer=true,scriptOutputFile=C:\Temp\test.txt,script=F:\workspaces\cms_hadoop\btrace\target\classes\com\github\winse\btrace\HelloWorld.class
</code></pre>

<p>添加到eclipse的运行配置（Debug Configurations）参数（Arguments）的VM arguments输入框内。</p>

<p>启动主程序，就可以在C:\Temp\test.txt文件看到btrace程序输出的内容了。</p>

<h2>注解</h2>

<ul>
<li>参数</li>
</ul>


<p>@Self获取this对象
@Return用于获取方法的返回值对象
@TargetInstance和@TargetMethodOrField用来查看被监控的方法内部调用那些实例的方法
@ProbeClassName和@ProbeMethodName用来检测获取当前被监控实例和方法（在OnMethod中使用通配符时，查看到底有那些方法被调用）</p>

<ul>
<li>方法</li>
</ul>


<p>@OnMethod
@OnTimer
@OnError
@OnExist
@OnLowMemory
@OnEvent
@OnProbe</p>

<h2>源码</h2>

<ul>
<li><a href="https://github.com/winse/helloJ/tree/hello/btrace">https://github.com/winse/helloJ/tree/hello/btrace</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Gif]]></title>
    <link href="http://winseliu.com/blog/2015/02/04/windows-gif/"/>
    <updated>2015-02-04T15:18:20+08:00</updated>
    <id>http://winseliu.com/blog/2015/02/04/windows-gif</id>
    <content type="html"><![CDATA[<p>看到linux上各种录制gif的工具：</p>

<pre><code>yum install byzanz

byzanz-record -d 10 -x 0 -y 0 -w 1363 -h 758 byzanz-demo.gif
</code></pre>

<p>还有各种包装的工具：<a href="https://github.com/KeyboardFire/mkcast">mkcast</a></p>

<p>本来想在cygwin中安装byzanz，但是编译需要各种库，最终放弃了。</p>

<p>其实在windows下面，也有很好的gif录制的工具：<a href="http://www.cockos.com/licecap/">LICEcap</a></p>

<p><img src="/images/blogs/gif-capture-helloworld.gif" alt="" /></p>

<h2>参考</h2>

<ul>
<li><a href="http://v2ex.com/t/139035">windows 下有没有什么录制 gif 截屏质量较好的软件可推荐?</a></li>
<li><a href="http://v5b7.com/other/ubuntu_byzanz.html">Ubuntu录制GIF图</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql分区]]></title>
    <link href="http://winseliu.com/blog/2014/11/14/mysql-partition/"/>
    <updated>2014-11-14T15:05:50+08:00</updated>
    <id>http://winseliu.com/blog/2014/11/14/mysql-partition</id>
    <content type="html"><![CDATA[<p>Windows8 Mysql安装后数据默认放在<code>C:\ProgramData\MySQL\MySQL Server 5.6\data</code>下。</p>

<blockquote><p>2、MyISAM数据库表文件：
.MYD文件：即MY Data，表数据文件
.MYI文件：即MY Index，索引文件
.log文件：日志文件</p>

<p>3、InnoDB采用表空间（tablespace）来管理数据，存储表数据和索引，
InnoDB数据库文件（即InnoDB文件集，ib-file set）：
  ibdata1、ibdata2等：系统表空间文件，存储InnoDB系统信息和用户数据库表数据和索引，所有表共用
  .ibd文件：单表表空间文件，每个表使用一个表空间文件（file per table），存放用户数据库表数据和索引
  日志文件： ib_logfile1、ib_logfile2</p></blockquote>

<pre><code>create database hello;
use hello;
create table abc ( name varchar(1000), age int );
insert into abc values ("1", 1);

create table abc_myisam ( name varchar(100), age int ) engine=myisam;
insert into abc_myisam values ( '1', 1), ('2',2);
alter table abc_myisam partition by hash(age) partitions 4 ;

insert into abc_myisam values ( '11', 10), ('2',20), ( '1', 11), ('2',21), ( '1', 21), ('2',22), ( '1', 31), ('2',32), ( '1', 41), ('2',24), ( '1', 15), ('2',23) ;
</code></pre>

<p>最终库目录如下:</p>

<p><img src="http://file.bmob.cn/M00/D2/16/oYYBAFRlrMaAAAdoAADDsNJhdNs617.png" alt="" /></p>

<p>根据月份来进行分区：</p>

<pre><code>--最好按照月份分区(date需要为日期类型)
alter table abc_myisam PARTITION BY RANGE (extract(YEAR_MONTH from date)) (  
    PARTITION p410 VALUES LESS THAN (201411),  
    PARTITION p411 VALUES LESS THAN (201412),  
    PARTITION p412 VALUES LESS THAN (201501),  
    PARTITION p501 VALUES LESS THAN (201502), 
    PARTITION p502 VALUES LESS THAN (201503), 
    PARTITION p503 VALUES LESS THAN (201504), 
    PARTITION p504 VALUES LESS THAN (201505), 
    PARTITION p505 VALUES LESS THAN (201506), 
    PARTITION p0 VALUES LESS THAN MAXVALUE  
)
</code></pre>

<p>根据日期来分区：</p>

<pre><code>alter table t_dta_activeresources_ip PARTITION BY RANGE (to_days(day)) (  
    PARTITION p0 VALUES LESS THAN (735926),  
PARTITION p141124 VALUES LESS THAN (735927),
PARTITION p141125 VALUES LESS THAN (735928),
PARTITION p141126 VALUES LESS THAN (735929),
PARTITION p88 VALUES LESS THAN MAXVALUE  
)
</code></pre>

<p>查询时执行计划带上partitions可以查看命中的是那个分区：</p>

<pre><code>mysql&gt; explain select * from t_dta_illegalweb where day='2015-01-04';
+----+-------------+------------------+------+---------------+------+---------+------+---------+-------------+
| id | select_type | table            | type | possible_keys | key  | key_len | ref  | rows    | Extra       |
+----+-------------+------------------+------+---------------+------+---------+------+---------+-------------+
|  1 | SIMPLE      | t_dta_illegalweb | ALL  | NULL          | NULL | NULL    | NULL | 1335432 | Using where |
+----+-------------+------------------+------+---------------+------+---------+------+---------+-------------+
1 row in set

mysql&gt; explain partitions
 select * from t_dta_illegalweb where day='2015-01-04';
+----+-------------+------------------+------------+------+---------------+------+---------+------+---------+-------------+
| id | select_type | table            | partitions | type | possible_keys | key  | key_len | ref  | rows    | Extra       |
+----+-------------+------------------+------------+------+---------------+------+---------+------+---------+-------------+
|  1 | SIMPLE      | t_dta_illegalweb | p150104    | ALL  | NULL          | NULL | NULL    | NULL | 1335432 | Using where |
+----+-------------+------------------+------------+------+---------------+------+---------+------+---------+-------------+
1 row in set
</code></pre>

<p>如果清理掉分区的数据后，再查看执行计划：</p>

<pre><code>mysql&gt; alter table t_dta_illegalweb truncate partition p150104;
Query OK, 0 rows affected

mysql&gt; explain partitions select * from t_dta_illegalweb where day='2015-01-04';
+----+-------------+-------+------------+------+---------------+------+---------+------+------+-----------------------------------------------------+
| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | Extra                                               |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+-----------------------------------------------------+
|  1 | SIMPLE      | NULL  | NULL       | NULL | NULL          | NULL | NULL    | NULL | NULL | Impossible WHERE noticed after reading const tables |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+-----------------------------------------------------+
1 row in set
</code></pre>

<h2>打开日志开关</h2>

<p>默认mysql是没有打开记录一般日志的开关的，可以通过命令行修改参数。对于查看具体执行了那些sql语句，调试很有帮助。</p>

<pre><code>mysql&gt; set global general_log = 1;
Query OK, 0 rows affected

mysql&gt; SHOW  GLOBAL VARIABLES LIKE '%log%';
</code></pre>

<h2>参考</h2>

<ul>
<li><a href="http://blog.csdn.net/yaotinging/article/details/6671506">MySQL数据文件介绍及存放位置</a></li>
<li><a href="http://lehsyh.iteye.com/blog/732719">MySQL的表分区</a></li>
<li><a href="http://lobert.iteye.com/blog/1955841">http://lobert.iteye.com/blog/1955841</a></li>
<li><a href="http://blog.csdn.net/jiao_fuyou/article/details/14214213">http://blog.csdn.net/jiao_fuyou/article/details/14214213</a></li>
<li><a href="http://database.51cto.com/art/201002/184392.htm">http://database.51cto.com/art/201002/184392.htm</a></li>
<li><a href="http://dev.mysql.com/doc/refman/5.5/en/error-log.html">mysql不重启清理日志</a></li>
<li><a href="http://pangge.blog.51cto.com/6013757/1319304">http://pangge.blog.51cto.com/6013757/1319304</a></li>
<li><a href="http://bbs.csdn.net/topics/70096519">http://bbs.csdn.net/topics/70096519</a></li>
<li><a href="http://bbs.csdn.net/topics/350138520">http://bbs.csdn.net/topics/350138520</a></li>
<li><a href="http://www.iteye.com/topic/408701">http://www.iteye.com/topic/408701</a></li>
<li><a href="http://www.blogjava.net/allrounder/articles/323591.html">http://www.blogjava.net/allrounder/articles/323591.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
