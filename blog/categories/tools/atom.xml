<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tools | Winse Blog]]></title>
  <link href="http://winseliu.com/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://winseliu.com/"/>
  <updated>2017-11-17T05:57:35+08:00</updated>
  <id>http://winseliu.com/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Sphinx生成/管理文档]]></title>
    <link href="http://winseliu.com/blog/2017/11/16/sphinx-generate-docs/"/>
    <updated>2017-11-16T23:23:23+08:00</updated>
    <id>http://winseliu.com/blog/2017/11/16/sphinx-generate-docs</id>
    <content type="html"><![CDATA[<p>很多开源的软件都使用Sphinx来进行文档的管理，其中Ansible就是其中一个。</p>

<p>Sphinx使用 类MarkDown的reStructuredText格式 来进行内容的编写，然后使用 sphinx-build 命令来生成html文件。</p>

<h2>安装、入门</h2>

<ul>
<li><a href="http://www.sphinx-doc.org/en/stable/tutorial.html">http://www.sphinx-doc.org/en/stable/tutorial.html</a></li>
<li><a href="http://www.sphinx-doc.org/en/stable/rest.html">reStructuredText</a></li>
<li><a href="http://zh-sphinx-doc.readthedocs.io/en/latest/rest.html">reStructuredText 简介</a></li>
<li><a href="http://www.sphinx-doc.org/en/stable/markup/index.html">Sphinx Markup Constructs</a></li>
<li><a href="http://rest-sphinx-memo.readthedocs.io/en/latest/ReST.html">ReST – reStructuredText</a> GOOD!</li>
</ul>


<pre><code>sudo apt-get install python-pip
sudo pip install Sphinx

sphinx-quickstart
</code></pre>

<h2>主题</h2>

<ul>
<li><a href="http://www.sphinx-doc.org/en/stable/theming.html">http://www.sphinx-doc.org/en/stable/theming.html</a></li>
<li><a href="https://pypi.python.org/pypi/sphinx_rtd_theme">https://pypi.python.org/pypi/sphinx_rtd_theme</a></li>
</ul>


<pre><code>sudo pip install sphinx_rtd_theme

sed -i "/html_theme/s/.*/html_theme = 'sphinx_rtd_theme'/" conf.py
</code></pre>

<h2>管理历史文档</h2>

<ul>
<li><a href="http://zh-sphinx-doc.readthedocs.io/en/latest/intro.html#id2">不同文档系统的转换</a></li>
<li><a href="https://pypi.python.org/pypi/html2rest">https://pypi.python.org/pypi/html2rest</a></li>
</ul>


<p>先使用 html2rest 把html转成reStructuredText格式。</p>

<pre><code>sudo pip install html2rest

#JSON：原始文档层次结构
  [
  { "id": "a16", "pId": "a", "name": "Administration", "file": "output/AdministrativeDocumentation.html" }, 
  { "id": "a1617", "pId": "a16", "name": "Basic Configuration Guide" },
  { "id": "a161718", "pId": "a1617", "name": "Configuring Deployments", "file": "output/ConfiguringDeployments.html" }
  ]

cat administration.json | jq '.[].file' | sed 's/"//g' | while read line ; do cp "$line" administration.origin/  ; done
cd administration.origin
ls | while read f ; do html2rest $f &gt;"../administration.rst/${f%%.*}.rst" ; done
</code></pre>

<p>这仅仅是把html转换成了reStructuredText格式，当然我们还可以做多一些的操作：把文件结构也创建出来。</p>

<p>脚本内容如下：</p>

<pre><code>#!/bin/bash

JSON_FILE=~/api/administration.json

function children(){
local id=$1

local name="$( cat "$JSON_FILE" | jq '.[] | select(.id=="'$id'")' | jq '.name' | sed 's/"//g' )"
echo "id: $id, name: $name"

local filename="$( echo $name | sed 's/[^[:alnum:]]//g' )"

if [ ! -f "$filename.rst" ] ; then
cat &gt; "$filename.rst" &lt;&lt;EOF
$name
======================================

EOF
fi

local nodes="$( cat "$JSON_FILE" | jq '.[] | select(.pId=="'$id'")' )"

if [ "x$nodes" == "x" ] ; then 
  return 1
fi

# if have children, create folder and toc
local foldername="$( echo $name | sed 's/[^[:alnum:]]//g' )"
local names="$( echo "$nodes" | jq ".name" | sed 's/[^[:alnum:]]//g' )"
local ids="$( echo "$nodes" | jq ".id" | sed 's/[^[:alnum:]]//g' )"

cat &gt;&gt;"$foldername.rst" &lt;&lt;EOF

Contents:

.. toctree::
   :maxdepth: 3
   :titlesonly:
   :glob:

$( echo "$names" | sed "s#^#   $foldername/#" ) 

EOF

mkdir -p "$foldername"
pushd "$foldername"

while read cid
do 
  children $cid
done &lt; &lt;(echo "$ids")

popd

}

#a：为第一级目录的id
children a
</code></pre>

<p>然后执行该命令，把目录、目录索引、临时文件创建好：</p>

<pre><code>cd ~/administration
./docs-gen.sh
</code></pre>

<p>然后就是把最开始转换的rst文件拷贝过来：</p>

<pre><code>cd ../administration.rst

ls | while read f ; do 
filename="$(echo $f | sed 's/.rst$//' | sed 's/[^[:alnum:]]//g' ).rst" ; 
find ../administration/ -name "$filename" -exec /bin/cp -f $f {} \;  ;  
done

#再执行一遍docs-gen.sh，把目录的索引再（确认）添加一次
cd ../administration
./docs-gen.sh
</code></pre>

<p>完后生成 <code>make html</code> ，直接打开 <strong>_build/html/index.html</strong> 查看下内容。</p>

<p>最后就是根据具体情况，做一些细微的调整了。</p>

<h2>MISC</h2>

<ul>
<li><a href="http://www.sphinx-doc.org/en/latest/markup/inline.html">Inline markup</a></li>
<li><a href="http://zh-sphinx-doc.readthedocs.io/en/latest/markup/inline.html">文档引用</a></li>
<li><a href="http://rest-sphinx-memo.readthedocs.io/en/latest/Sphinx.html#sphinx-inline-markup">Sphinx inline markup</a></li>
<li><a href="http://rest-sphinx-memo.readthedocs.io/en/latest/ReST.html#tables">表格</a> GOOD!</li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用TeamviewerVPN访问公司内网]]></title>
    <link href="http://winseliu.com/blog/2017/11/04/teamviewer-vpn-on-windows/"/>
    <updated>2017-11-04T22:26:50+08:00</updated>
    <id>http://winseliu.com/blog/2017/11/04/teamviewer-vpn-on-windows</id>
    <content type="html"><![CDATA[<p>一直以来都只是用Teamviewer的图形界面，如果仅仅针对单台机器操作还是蛮OK的。但是如果想要访问远程的整个集群，那就为难了。</p>

<p>以前通过 <strong> 公司的跳板机 </strong>，然后连接 <strong> 内网搭建的VPN </strong> 来实现 <strong> 透明 </strong> 的访问公司的环境。也折腾过自己买一台aliyun的机器搞一个外网IP，然后通过SSH的反向代理来间接的跳转访问公司内网，但成本都还是比较高的。</p>

<p>既然Teamviewer提供了一种远程访问的方式，那么能不能通过Teamviewer来实现代理，继而类似VPN的方式在家访问公司内网呢？</p>

<p>备注：一般都是双保险啊，Teamviewer和Anydesk都放一个！！！</p>

<h2>安装</h2>

<p>Teamviewer是提供了VPN的访问方式，需要在安装的时刻 选择【显示高级设置】，在下一步中选择【使用Teamviewer VPN】。连接的 <strong> 两台主机都需要安装Teamviewer VPN </strong> 的功能！！！</p>

<p><img src="/images/teamviewer-vpn-install.png" alt="" /></p>

<h2>使用VPN</h2>

<p><img src="/images/teamviewer-vpn-connect.png" alt="" /></p>

<h2>访问内网</h2>

<p>如果是Linux的话，可以在iptables上面配置SNAT，但是Linux Teamviewer暂时不支持VPN功能。
并且公司运行Teamviewer的机器是WIN7，不能通过运行nat命令（server版本才有）来设置转发。最后功夫不负有心人，找到了在win7下可以设置NAT的方法：</p>

<ul>
<li><a href="https://social.technet.microsoft.com/Forums/windows/en-US/30c1affa-cc6b-4eeb-9377-7600cc3f333a/nat-in-windows7?forum=w7itpronetworking">NAT in windows7</a></li>
<li><a href="https://www.onlinekosten.de/forum/showthread.php?p=2278439">AW: mit Teamviewer VPN ins interne Netzwerk?</a></li>
</ul>


<h4>转发配置</h4>

<ol>
<li>连接的两台机器都启动 <strong> Routing an Remote Access </strong> 系统服务。（修改注册表IPEnableRouter的，不弄也行）</li>
<li>在公司Teamviwer机器上，下载并安装 <a href="http://www.nat32.com/download2/nat32v2.zip">NAT</a> ，<a href="https://www.ntkernel.com/downloads/winpkflt_rtl.zip">配置工具</a></li>
<li>在公司Teamviwer机器上，打开配置工具 <strong> WinpkFilter - Internet Gateway </strong>，配置 本地连接 为Provider， Teamviewer VPN 为Client，然后启动 Start NAT。</li>
</ol>


<p><img src="/images/teamviewer-vpn-nat-config.png" alt="" /></p>

<ol>
<li>在本地机器上，添加route，把访问 公司内网IP 的数据转到公司Teamviewer VPN，这样我们就可以透明的访问公司的所有机器了。</li>
</ol>


<pre><code>#网关填公司Teamviewer端的IP地址！！！
C:\Windows\system32&gt;route add 192.168.193.0 mask 255.255.255.0 7.138.125.65 metric 1

C:\Windows\system32&gt;ping 192.168.193.110

正在 Ping 192.168.193.110 具有 32 字节的数据:
来自 192.168.193.110 的回复: 字节=32 时间=22ms TTL=63
来自 192.168.193.110 的回复: 字节=32 时间=21ms TTL=63
来自 192.168.193.110 的回复: 字节=32 时间=21ms TTL=63

192.168.193.110 的 Ping 统计信息:
    数据包: 已发送 = 3，已接收 = 3，丢失 = 0 (0% 丢失)，
往返行程的估计时间(以毫秒为单位):
    最短 = 21ms，最长 = 22ms，平均 = 21ms
</code></pre>

<p>完美，所有的事情Teamviewer都帮想到了并且实现了。</p>

<p>把上面的全部操作写到一个脚本，以后直接使用管理员权限运行即可：</p>

<pre><code>winse@DESKTOP-ADH7K1Q:~/bigendian$ cat VPN-Route.bat
@setlocal enableextensions enabledelayedexpansion
@echo on

rem https://community.teamviewer.com/t5/Knowledge-Base/Are-there-parameters-to-start-TeamViewer/ta-p/4135
rem teamviewer.exe -i &lt;ID&gt; -P &lt;Password&gt; [-m fileTransfer/vpn]
start "teamviewer" "C:\Program Files (x86)\TeamViewer\TeamViewer.exe"

set teamvpnipaddr=7.138.125.65

:loop
ping -n 1 !teamvpnipaddr! | find "TTL"
if not errorlevel 1 goto :run
if errorlevel 1 goto :endloop
:endloop
ping -n 2 127.0.0.1 &gt;nul: 2&gt;nul:
cls
goto :loop

:run
route delete 192.168.193.0
route add 192.168.193.0 mask 255.255.255.0 !teamvpnipaddr! metric 1

endlocal

pause
</code></pre>

<h2>参考的原文：</h2>

<pre><code>
Hello everybody, I investigated a lot for this issue.
Establish a VPN session with TeamViewer to my home pc (remote side) and try to get access to this local network from my working place (local side).
I found an solution i never read anywhere before. Since Windows 7 has removed NAT option using netsh it is difficult to solve it with windows on board tools only.
- Install TeamViewer incl. VPN driver on both sides, activate unattended access on the remote side (my home pc). Use the button Show advanced options, and go to Advanced network options … Install VPN driver
- Install WinPkFilter Device Driver on remote side (my home pc) and restart (http://www.nat32.com/v2/install.htm Download installer: http://www.ntkernel.com/downloads/winpkflt_rtl.zip . NAT32 you don't need. This WinPkFilter package contains a simple GUI to configure the NAT between the VPN interface (client) and the remote side LAN interface (provider). see following hints ...
- Windows: Start RemoteAccess - service 'Routing an Remote Access'  and set to automatic (local/remote side).
- Optional: On the remote side (my home pc), the registry has to be modified. Start the registry editor for example by Regedt32, and browse to HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters Set the parameter IPEnableRouter to “1”. Using console or batch as admin: reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" /v "IPEnableRouter" /t REG_DWORD /d "1". On my system it worked without this option, but according internet forums it seems to be recommended.
- Now create a remote desktop session to your home pc and start also the VPN connection within this TeamViewer session (Menu / Extras / VPN). I created a free TeamViewer account and added all pc's to my computers to make the access to my machines easier.
- On remode side (my home pc) where WinPkFilter is installed start the Internet Gateway GUI of WinPkFilter: Start / Programms / WinpkFilter / Internet Gateway. Select (double click) the ethernet adapter of your local privat lan and set NAT Status to 'Provider'. Select the TeamViewer VPN adapter and set NAT Status to 'client'. Press 'Start NAT'
 - On local side (my working place) Add a route to the local side (my working place) to give access to several devices that have the same subnet, add the route like this:

route add &lt;base IP of remote devices&gt; mask 255.255.255.0 &lt;IP of Teamviewer VPN on remote PC&gt; 
metric 1

Example (home lan ip range: 192.168.2.x / TeamViewer VPN IP in home pc (remote side) 7.37.88.245
route add 192.168.2.0 mask 255.255.255.0 7.37.88.245 metric 1 &lt;ENTER&gt;
route add 192.168.2.0 mask 255.255.255.0 7.37.88.245 metric 1 -p &lt;ENTER&gt; (if persistent)
Do delete the route route delete 192.168.2.0
Now you should have access to your private home network. Good luck and have fun.
</code></pre>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Run Ubuntu]]></title>
    <link href="http://winseliu.com/blog/2017/10/30/windows-run-ubuntu/"/>
    <updated>2017-10-30T07:17:53+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/30/windows-run-ubuntu</id>
    <content type="html"><![CDATA[<p>最新版的Windows已经可以安装ubuntu了，算是微软开源后的一个阶段性的成果了。</p>

<p>功能和windows兼容性很强（不像cygwin），软链接、文件权限都是和系统一致的。并且基本所有ubuntu的功能都可以使用，安装jekyll、docker都很顺利。同时打开系统的程序也很方便。非常赞和值得程序员去尝试！！</p>

<p>本文后面会逐渐增加使用过程中的一些操作，今天先更新系统安装、octopress安装、docker安装。</p>

<h2>系统安装</h2>

<p>直接去微软的官网下载最新版系统ISO，然后安装系统 <strong> 专业版 </strong>（教育版比较干净一些，但是网上没有破解方式啊）。</p>

<p></p>

<h2>Ubuntu</h2>

<h4>安装Ubuntu</h4>

<p>最新版的Ubuntu已经进入到稳定版。直接打开商店，搜索Ubuntu，然后安装即可。大概200M的样子，很快就安装了。然后Launch会初始化创建用户。</p>

<p>相关的一些有用的文档：</p>

<ul>
<li><a href="https://msdn.microsoft.com/zh-cn/commandline/wsl/user-support">https://msdn.microsoft.com/zh-cn/commandline/wsl/user-support</a></li>
<li>权限相关 <a href="https://github.com/Microsoft/WSL/issues/81">https://github.com/Microsoft/WSL/issues/81</a></li>
</ul>


<h4>安装mintty</h4>

<ul>
<li><a href="https://superuser.com/questions/1110045/windows-10-bash-and-mintty">https://superuser.com/questions/1110045/windows-10-bash-and-mintty</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22033219">https://zhuanlan.zhihu.com/p/22033219</a></li>
</ul>


<p>CMD方式操作Ubuntu太难受了，mintty操作就像SecurtCRT一样，简单方便。安装 <a href="https://github.com/mintty/wsltty">wsltty-1.8.0-install</a> ，使用mintty来运行ubuntu。</p>

<p>默认mintty的配置放在 <code>%APPDATA%\wsltty</code>。在子目录theme下可以 <a href="http://ciembor.github.io/4bit/">http://ciembor.github.io/4bit/</a> 下载一个主题放到该目录下，然后再mintty配置页面选择该主题。</p>

<h4>系统文件</h4>

<ul>
<li><a href="https://github.com/Microsoft/WSL/issues/402">https://github.com/Microsoft/WSL/issues/402</a></li>
</ul>


<p>root挂载点：<code>C:\Users\&lt;user&gt;\AppData\Local\lxss</code> or <code>C:\Users\&lt;username&gt;\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState</code></p>

<h2>安装Jekyll</h2>

<pre><code># https://superuser.com/questions/116625/recursively-change-owner-windows-7
#takeown /f "C:\path\to\folder" /r
#icacls "C:\path\to\folder" /reset /T
用powershell管理员权限 "提"权
PS E:\winsegit\octopress&gt; takeown /F . /R
修改就旧系统的文件属性：
PS E:\winsegit\octopress&gt; cacls *.* /T /G Everyone:F

sudo apt-get update
sudo apt-get install ruby-bundler
sudo apt-get install ruby-dev
sudo apt-get install make
sudo apt-get install gcc
bundle install

sudo gem update
sudo gem uninstall rake
sudo gem install rake -v 10.5.0
sudo apt-get install nodejs

rake preview

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ rake preview
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
Starting to watch source with Jekyll and Compass. Starting Rack on port 4000
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
/var/lib/gems/2.3.0/gems/liquid-2.6.1/lib/liquid/htmltags.rb:43: warning: key "index0" is duplicated and overwritten on line 46
[2017-10-29 22:48:09] INFO  WEBrick 1.3.1
[2017-10-29 22:48:09] INFO  ruby 2.3.1 (2016-04-26) [x86_64-linux-gnu]
[2017-10-29 22:48:09] INFO  WEBrick::HTTPServer#start: pid=39 port=4000
Configuration file: /mnt/e/winsegit/octopress/_config.yml
            Source: source
       Destination: public
      Generating...
                    done.
</code></pre>

<p>上面warning提示也有对应的Issue，也没所谓暂时不理： <a href="https://github.com/Microsoft/WSL/issues/1426">https://github.com/Microsoft/WSL/issues/1426</a></p>

<h2>安装docker</h2>

<ul>
<li><a href="https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce-1">https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce-1</a></li>
</ul>


<pre><code>winse@DESKTOP-ADH7K1Q:~$ uname -r
4.4.0-43-Microsoft
winse@DESKTOP-ADH7K1Q:~$ uname -a
Linux DESKTOP-ADH7K1Q 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014 x86_64 x86_64 x86_64 GNU/Linux

winse@DESKTOP-ADH7K1Q:~$  sudo apt-get install \
     apt-transport-https \
     ca-certificates \
     curl \
     software-properties-common

winse@DESKTOP-ADH7K1Q:~$ lsb_release -cs
xenial
winse@DESKTOP-ADH7K1Q:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
OK
winse@DESKTOP-ADH7K1Q:~$ sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

winse@DESKTOP-ADH7K1Q:~$ sudo apt-get update

winse@DESKTOP-ADH7K1Q:~$ sudo apt-get install docker-ce

winse@DESKTOP-ADH7K1Q:~$ sudo service docker start
 * Starting Docker: docker                                                                                                                     [ OK ]
winse@DESKTOP-ADH7K1Q:~$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
winse@DESKTOP-ADH7K1Q:~$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
winse@DESKTOP-ADH7K1Q:~$
</code></pre>

<h2>运行windows系统应用</h2>

<ul>
<li><a href="https://www.howtogeek.com/285082/how-to-run-windows-programs-from-windows-10s-bash-shell/">https://www.howtogeek.com/285082/how-to-run-windows-programs-from-windows-10s-bash-shell/</a></li>
<li><a href="https://github.com/Microsoft/WSL/issues/333">https://github.com/Microsoft/WSL/issues/333</a></li>
<li><a href="https://msdn.microsoft.com/en-us/commandline/wsl/interop">https://msdn.microsoft.com/en-us/commandline/wsl/interop</a></li>
</ul>


<pre><code>winse@DESKTOP-ADH7K1Q:~$ ln -s /mnt/e/local/usr/share/npp/notepad++.exe text

winse@DESKTOP-ADH7K1Q:~$ cp -r ../winse-cygwin/new_post.sh ./
winse@DESKTOP-ADH7K1Q:~$ cat new_post.sh
cd ~/winsegit/octopress/
rake new_post["$1"] | tail -1 | awk -F: '{print $2}' | while read line
do
name=${line#source/_posts/}
newpath=source/_stash/$name
mv $line $newpath

echo -e "\n\n--END" &gt;&gt;$newpath

~/text $newpath &amp;
done

winse@DESKTOP-ADH7K1Q:~$ ./new_post.sh "windows run ubuntu"
/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c in PATH, mode 040777
mkdir -p source/_posts
</code></pre>

<h2>重新配置git</h2>

<p>用powershell修改原来的权限后，然后用shell来进行设置。</p>

<pre><code>#powershell
takeown /F . /R
cacls *.* /T /G Everyone:F

#ubuntu shell
winse@DESKTOP-ADH7K1Q:~$ cp -r ../winse-cygwin/.ssh ./

winse@DESKTOP-ADH7K1Q:~$ cd .ssh
winse@DESKTOP-ADH7K1Q:~/.ssh$ chmod 600 id_rsa authorized_keys
winse@DESKTOP-ADH7K1Q:~/.ssh$ chmod 644 id_rsa.pub config

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress/_deploy$ rm -rf *
winse@DESKTOP-ADH7K1Q:~/winsegit/octopress/_deploy$ git clone git@github.com:winse/winse.github.com.git ./

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ git config --global user.email winseliu@qq.com
winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ git config --global user.name winse

winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ rake preview
winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ sh public.git.sh
</code></pre>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Cenots7双击运行程序]]></title>
    <link href="http://winseliu.com/blog/2017/10/28/application-run-do-double-click-on-centos7/"/>
    <updated>2017-10-28T22:58:20+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/28/application-run-do-double-click-on-centos7</id>
    <content type="html"><![CDATA[<p>Linux本来就是作为服务器来运行的，双击运行程序的需求比较少。但是还是有一些，同时也没有Windows桌面快捷方式那么的方便。</p>

<p>在Centos7中建立"快捷方式"双击运行，需要建立一个desktop类型的文件：</p>

<pre><code>[root@k8s ~] cat ~/Desktop/Cassandra.desktop
[Desktop Entry]
Name=Cassandra
Comment=Launch Cassandra
Exec=su - hadoop /home/hadoop/apache-cassandra-2.2.10/bin/cassandra -f
Terminal=true
Type=Application
</code></pre>

<p>右键创建快捷的方式，在Centos7上面没有找到。</p>

<blockquote><p>In Gnome :
- right click on the desktop and &lsquo;create launcher&rsquo;
- browse to the script location and give a name</p></blockquote>

<h2>参考</h2>

<ul>
<li><a href="https://unix.stackexchange.com/questions/189777/how-to-launch-shell-script-with-double-click-in-centos-7">https://unix.stackexchange.com/questions/189777/how-to-launch-shell-script-with-double-click-in-centos-7</a></li>
<li><a href="https://askubuntu.com/questions/138908/how-to-execute-a-script-just-by-double-clicking-like-exe-files-in-windows">https://askubuntu.com/questions/138908/how-to-execute-a-script-just-by-double-clicking-like-exe-files-in-windows</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Flamegraph查看磁盘使用情况]]></title>
    <link href="http://winseliu.com/blog/2017/10/28/flamegraph-display-how-disk-be-used/"/>
    <updated>2017-10-28T19:08:14+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/28/flamegraph-display-how-disk-be-used</id>
    <content type="html"><![CDATA[<p>以前有使用FlameGraph做Java程序的堆栈（热点代码）的显示。其实磁盘也可以使用类似的方式来显示查看占用情况，找出没用的数据。</p>

<pre><code>$ git clone https://github.com/brendangregg/FlameGraph.git

#使用管理员权限运行
winse@Lenovo-PC /cygdrive/e/git/FlameGraph
$ ./files.pl /cygdrive/c/ | ./flamegraph.pl --hash --countname=bytes &gt; /cygdrive/r/c.svg
</code></pre>

<p>然后浏览器查看即可，主要还是查看占用比。（但是不一定所有文件都包括在SVG里面）。</p>

<p>当然，默认官网提供的 files.pl 是获取所有的目录。我们可以做下层级控制，代码修改如下：</p>

<pre><code>$ git diff
diff --git a/files.pl b/files.pl
index 27654be..5d1012e 100755
--- a/files.pl
+++ b/files.pl
@@ -29,7 +29,16 @@ sub usage {
 usage() if @ARGV == 0 or $ARGV[0] eq "--help" or $ARGV[0] eq "-h";

 foreach my $dir (@ARGV) {
-    find(\&amp;wanted, $dir);
+    find({
+       preprocess =&gt; \&amp;preprocess,
+       wanted =&gt; \&amp;wanted,
+    }, $dir);
+}
+
+sub preprocess {
+       my $depth = $File::Find::dir =~ tr[/][];
+       return @_ if $depth &lt; 8;
+       return ;
 }

 sub wanted {
</code></pre>

<p><img src="/images/blogs/flamegraph_disk.png" alt="" /></p>

<p>下列的文件夹可以排查下进行处理：</p>

<ul>
<li>C:\pagefile.sys C:\swapfile.sys : 系统属性-高级-性能选项-虚拟内存</li>
<li>C:\hiberfil.sys : powercfg -h -zie 60% ; powercfg.exe /hibernate off</li>
<li>C:\ProgramData\Package Cache</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://www.brendangregg.com/blog/2016-01-20/ebpf-offcpu-flame-graph.html">http://www.brendangregg.com/blog/2016-01-20/ebpf-offcpu-flame-graph.html</a></li>
<li><a href="https://support.microsoft.com/en-us/help/920730/how-to-disable-and-re-enable-hibernation-on-a-computer-that-is-running">https://support.microsoft.com/en-us/help/920730/how-to-disable-and-re-enable-hibernation-on-a-computer-that-is-running</a></li>
<li><a href="http://www.intowindows.com/how-to-reduce-hibernate-file-size-in-windows-7/">http://www.intowindows.com/how-to-reduce-hibernate-file-size-in-windows-7/</a></li>
<li><a href="http://www.brendangregg.com/blog/2017-02-05/file-system-flame-graph.html">http://www.brendangregg.com/blog/2017-02-05/file-system-flame-graph.html</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
