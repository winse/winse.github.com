<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jenkins | Winse Blog]]></title>
  <link href="http://winseliu.com/blog/categories/jenkins/atom.xml" rel="self"/>
  <link href="http://winseliu.com/"/>
  <updated>2018-06-09T17:49:13+08:00</updated>
  <id>http://winseliu.com/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[命令行调用Jenkins2.63打包]]></title>
    <link href="http://winseliu.com/blog/2017/08/31/jenkins-build-via-shell/"/>
    <updated>2017-08-31T01:26:40+08:00</updated>
    <id>http://winseliu.com/blog/2017/08/31/jenkins-build-via-shell</id>
    <content type="html"><![CDATA[<p>Jenkins给集成打包带来了很多的便捷，让不懂开发的同事也能轻松的打包。但是对于开发和运维来说，可能还需要在打包之外做一些事情，以及批量的处理N个打包。</p>

<p>对于研发来说，重复是最难忍受的。Jenkins可以直接通过api来调用查看和处理各种请求。</p>

<p>网络上资料其实挺多的。也有直接一个脚本直接搞定部署的。知其然知其所以然，还是需要自己下功夫理解人家的脚本这样才能更好的用（先不说自己写了）。主要的就是三个步骤：</p>

<ol>
<li>怎么登陆: <a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-Remoteaccess">JenkinsScriptConsole-Remoteaccess</a> .|. <a href="https://wiki.jenkins.io/display/JENKINS/Remote+access+API#RemoteaccessAPI-CSRFProtection">RemoteaccessAPI-CSRFProtection</a></li>
<li>执行build：<a href="http://www.inanzzz.com/index.php/post/jnrg/running-jenkins-build-via-command-line">Running jenkins jobs via command line</a> .|. <a href="https://www.nczonline.net/blog/2015/10/triggering-jenkins-builds-by-url/">Triggering Jenkins builds by URL</a></li>
<li>检查结果：<a href="https://gist.githubusercontent.com/julianchurchill/8780920/raw/ae3ab0c120857b0fe69fe3718d720cb4ef94c4b8/checkJenkins.sh">checkJenkins.sh</a></li>
</ol>


<h2>crumb</h2>

<p>首先来看看crumb是啥</p>

<p>```
[root@iZ9416vn227Z opt]# curl -X POST $JENKINS_PROJ_AUTH_URL/build
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
<title>Error 403 No valid crumb was included in the request</title>
</head>
<body><h2>HTTP ERROR 403</h2></p>

<p>Problem accessing /job/helloworld/build. Reason:
<pre>    No valid crumb was included in the request</pre></p>


<hr><a href="http://eclipse.org/jetty">Powered by Jetty:// 9.4.z-SNAPSHOT</a><hr/>


<p></body>
</html></p>

<pre><code>
这里[CSRF](https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-RemoteaccesswithCSRFprotectionenabled) 相当于jenkins做的一个权限控制，有两种方式处理：

方法一：取消控制

* [no valid crumb was included in the request解决](http://www.zhyea.com/2016/10/14/resolve-no-valid-crumb-was-included-in-the-request-error.html) 
* [No valid crumb was included in the request](https://github.com/ghale/gradle-jenkins-plugin/issues/78#issuecomment-215783175)

在菜单 系统管理 –&gt; Configure Global Security 中调整设置: 取消 防止跨站点请求伪造(Prevent Cross Site Request Forgery exploits) 的勾选。 如果还坚持要启用“防止跨站点请求伪造”，就需要先动态获取crumb。

方法二：获取token

* [How to request for Crumb issuer for jenkins](https://stackoverflow.com/questions/16738441/how-to-request-for-crumb-issuer-for-jenkins)
* [Calling a jenkins job with a bash script](http://russellsimpkins.blogspot.jp/2014/10/calling-jenkins-job-with-bash-script.html)
*  https://support.cloudbees.com/hc/en-us/articles/218889337-How-to-build-a-job-using-the-REST-API-and-cURL-

通过URL: crumbIssuer/api/json 获取token的键值，然后把它附加到build请求的HEADER。




## 命令行通过URL请求jenkins进行编译

* [使用shell脚本curl调用jenkins进行构建并判断是否构建成功 ](http://blog.csdn.net/xian312854159/article/details/41118245)
* [Remote access API](https://wiki.jenkins.io/display/JENKINS/Remote+access+API)
* https://wiki.jenkins.io/display/JENKINS/Authenticating+scripted+clients
* https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console



</code></pre>

<p>JENKINS_ID=&ldquo;admin:PASSWORD&rdquo;
JENKINS_PROJ_AUTH_URL=<a href="http://$JENKINS_ID@localhost:18080/job/helloworld">http://$JENKINS_ID@localhost:18080/job/helloworld</a>
JENKINS_PROJ_URL=<a href="http://localhost:18080/job/helloworld">http://localhost:18080/job/helloworld</a></p>

<p>curl $JENKINS_PROJ_AUTH_URL/lastBuild/api/json</p>

<h1>Get the current configuration and save it locally</h1>

<p>curl -X GET $JENKINS_PROJ_URL/config.xml</p>

<p>curl &lsquo;<a href="http://">http://</a>&rsquo;$JENKINS_ID'@localhost:18080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&ldquo;:&rdquo;,//crumb)&lsquo;
Jenkins-Crumb:a4296173a91d900c11af07d932559fcd</p>

<p>curl -X POST -H &ldquo;Jenkins-Crumb:a4296173a91d900c11af07d932559fcd&rdquo;  $JENKINS_PROJ_AUTH_URL/build</p>

<p>curl -s $JENKINS_PROJ_AUTH_URL/lastBuild/api/json | jq .</p>

<h1>&mdash; TODO &mdash;</h1>

<p>progress（排队中）|pending（构建中），每三秒去重新获取结果进行判断<br/>
while grep -qE &ldquo;In progress|pending&rdquo; build.tmp2;</p>

<p>if grep -qE &ldquo;Success&rdquo; build.tmp2 ;then<br/>
elif grep -qE &ldquo;Unstable&rdquo; build.tmp2 ;then<br/>
elif grep -qE &ldquo;Failed|Aborted&rdquo; build.tmp2 ;then<br/>
echo &ldquo;#Open Link: ${jobPage}${newbuild}/console see details&rdquo;</p>

<p>```</p>

<p>BuildName</p>

<ul>
<li><a href="https://wiki.jenkins.io/display/JENKINS/Build+Name+Setter+Plugin">https://wiki.jenkins.io/display/JENKINS/Build+Name+Setter+Plugin</a></li>
<li><a href="https://stackoverflow.com/questions/42172320/how-to-set-the-jenkins-build-name-based-on-some-conditions">https://stackoverflow.com/questions/42172320/how-to-set-the-jenkins-build-name-based-on-some-conditions</a></li>
<li><a href="https://stackoverflow.com/questions/30111298/how-to-use-build-name-setter-plugin">https://stackoverflow.com/questions/30111298/how-to-use-build-name-setter-plugin</a></li>
</ul>


<p>jenkins的使用案例</p>

<ul>
<li><a href="http://debugtalk.com/post/iOS-Android-Packing-with-Jenkins-details/">http://debugtalk.com/post/iOS-Android-Packing-with-Jenkins-details/</a></li>
</ul>


<h2>参考</h2>

<p>API使用</p>

<ul>
<li><a href="https://gist.githubusercontent.com/julianchurchill/8780920/raw/ae3ab0c120857b0fe69fe3718d720cb4ef94c4b8/checkJenkins.sh">https://gist.githubusercontent.com/julianchurchill/8780920/raw/ae3ab0c120857b0fe69fe3718d720cb4ef94c4b8/checkJenkins.sh</a></li>
<li><a href="https://www.nczonline.net/blog/2015/10/triggering-jenkins-builds-by-url/">Triggering Jenkins builds by URL</a></li>
</ul>


<p>登录/权限问题</p>

<ul>
<li><a href="https://stackoverflow.com/questions/10698419/how-can-a-jenkins-user-authentication-details-be-passed-to-a-script-which-uses">https://stackoverflow.com/questions/10698419/how-can-a-jenkins-user-authentication-details-be-passed-to-a-script-which-uses</a></li>
<li><a href="http://www.scmgalaxy.com/tutorials/ways-to-login-jenkins-using-command-line">http://www.scmgalaxy.com/tutorials/ways-to-login-jenkins-using-command-line</a></li>
<li><a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-Remoteaccess">https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-Remoteaccess</a></li>
<li><a href="http://russellsimpkins.blogspot.jp/2014/10/calling-jenkins-job-with-bash-script.html">Calling a jenkins job with a bash script</a></li>
<li><a href="https://issues.jenkins-ci.org/browse/JENKINS-42200">No valid crumb was included in the request in kubernetes</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
