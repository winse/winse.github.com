<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Winse Blog]]></title>
  <link href="http://winseliu.com/atom.xml" rel="self"/>
  <link href="http://winseliu.com/"/>
  <updated>2017-11-17T08:06:11+08:00</updated>
  <id>http://winseliu.com/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Sphinx生成/管理文档]]></title>
    <link href="http://winseliu.com/blog/2017/11/16/sphinx-generate-docs/"/>
    <updated>2017-11-16T23:23:23+08:00</updated>
    <id>http://winseliu.com/blog/2017/11/16/sphinx-generate-docs</id>
    <content type="html"><![CDATA[<p>很多开源的软件都使用Sphinx来进行文档的管理，其中Ansible就是其中一个。</p>

<p>Sphinx使用 类MarkDown的reStructuredText格式 来进行内容的编写，然后使用 sphinx-build 命令来生成html文件。</p>

<h2>安装、入门</h2>

<ul>
<li><a href="http://www.sphinx-doc.org/en/stable/tutorial.html">http://www.sphinx-doc.org/en/stable/tutorial.html</a></li>
<li><a href="http://www.sphinx-doc.org/en/stable/rest.html">reStructuredText</a></li>
<li><a href="http://zh-sphinx-doc.readthedocs.io/en/latest/rest.html">reStructuredText 简介</a></li>
<li><a href="http://www.sphinx-doc.org/en/stable/markup/index.html">Sphinx Markup Constructs</a></li>
<li><a href="http://rest-sphinx-memo.readthedocs.io/en/latest/ReST.html">ReST – reStructuredText</a> GOOD!</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install python-pip
</span><span class='line'>sudo pip install Sphinx
</span><span class='line'>
</span><span class='line'>sphinx-quickstart
</span></code></pre></td></tr></table></div></figure>


<h2>主题</h2>

<ul>
<li><a href="http://www.sphinx-doc.org/en/stable/theming.html">http://www.sphinx-doc.org/en/stable/theming.html</a></li>
<li><a href="https://pypi.python.org/pypi/sphinx_rtd_theme">https://pypi.python.org/pypi/sphinx_rtd_theme</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pip install sphinx_rtd_theme
</span><span class='line'>
</span><span class='line'>sed -i "/html_theme/s/.*/html_theme = 'sphinx_rtd_theme'/" conf.py
</span></code></pre></td></tr></table></div></figure>


<h2>管理历史文档</h2>

<ul>
<li><a href="http://zh-sphinx-doc.readthedocs.io/en/latest/intro.html#id2">不同文档系统的转换</a></li>
<li><a href="https://pypi.python.org/pypi/html2rest">https://pypi.python.org/pypi/html2rest</a></li>
</ul>


<p>先使用 html2rest 把html转成reStructuredText格式。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo pip install html2rest
</span><span class='line'>
</span><span class='line'>#JSON：原始文档层次结构
</span><span class='line'>  [
</span><span class='line'>  { "id": "a16", "pId": "a", "name": "Administration", "file": "output/AdministrativeDocumentation.html" }, 
</span><span class='line'>  { "id": "a1617", "pId": "a16", "name": "Basic Configuration Guide" },
</span><span class='line'>  { "id": "a161718", "pId": "a1617", "name": "Configuring Deployments", "file": "output/ConfiguringDeployments.html" }
</span><span class='line'>  ]
</span><span class='line'>
</span><span class='line'>cat administration.json | jq '.[].file' | sed 's/"//g' | while read line ; do cp "$line" administration.origin/  ; done
</span><span class='line'>cd administration.origin
</span><span class='line'>ls | while read f ; do html2rest $f &gt;"../administration.rst/${f%%.*}.rst" ; done
</span></code></pre></td></tr></table></div></figure>


<p>这仅仅是把html转换成了reStructuredText格式，当然我们还可以做多一些的操作：把文件结构也创建出来。</p>

<p>脚本内容如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>
</span><span class='line'>JSON_FILE=~/administration.json
</span><span class='line'>
</span><span class='line'>function children(){
</span><span class='line'>local id=$1
</span><span class='line'>
</span><span class='line'>local name="$( cat "$JSON_FILE" | jq '.[] | select(.id=="'$id'")' | jq '.name' | sed 's/"//g' )"
</span><span class='line'>echo "id: $id, name: $name"
</span><span class='line'>
</span><span class='line'>local filename="$( echo $name | sed 's/[^[:alnum:]]//g' )"
</span><span class='line'>
</span><span class='line'>if [ ! -f "$filename.rst" ] ; then
</span><span class='line'>cat &gt; "$filename.rst" &lt;&lt;EOF
</span><span class='line'>$name
</span><span class='line'>======================================
</span><span class='line'>
</span><span class='line'>EOF
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>local nodes="$( cat "$JSON_FILE" | jq '.[] | select(.pId=="'$id'")' )"
</span><span class='line'>
</span><span class='line'>if [ "x$nodes" == "x" ] ; then 
</span><span class='line'>  return 1
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'># if have children, create folder and toc
</span><span class='line'>local foldername="$( echo $name | sed 's/[^[:alnum:]]//g' )"
</span><span class='line'>local names="$( echo "$nodes" | jq ".name" | sed 's/[^[:alnum:]]//g' )"
</span><span class='line'>local ids="$( echo "$nodes" | jq ".id" | sed 's/[^[:alnum:]]//g' )"
</span><span class='line'>
</span><span class='line'>if ! grep '.. toctree::' "$foldername.rst" ; then
</span><span class='line'>cat &gt;&gt;"$foldername.rst" &lt;&lt;EOF
</span><span class='line'>
</span><span class='line'>Contents:
</span><span class='line'>
</span><span class='line'>.. toctree::
</span><span class='line'>   :maxdepth: 3
</span><span class='line'>   :titlesonly:
</span><span class='line'>   :glob:
</span><span class='line'>   
</span><span class='line'>$( echo "$names" | sed "s#^#   $foldername/#" ) 
</span><span class='line'>
</span><span class='line'>EOF
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>mkdir -p "$foldername"
</span><span class='line'>pushd "$foldername"
</span><span class='line'>
</span><span class='line'>while read cid
</span><span class='line'>do 
</span><span class='line'>  children $cid
</span><span class='line'>done &lt; &lt;(echo "$ids")
</span><span class='line'>
</span><span class='line'>popd
</span><span class='line'>
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>children a
</span></code></pre></td></tr></table></div></figure>


<p>然后执行该命令，把目录、目录索引、临时文件创建好：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/administration
</span><span class='line'>./docs-gen.sh</span></code></pre></td></tr></table></div></figure>


<p>然后就是把最开始转换的rst文件拷贝过来：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ../administration.rst
</span><span class='line'>
</span><span class='line'>ls | while read f ; do 
</span><span class='line'>filename="$(echo $f | sed 's/.rst$//' | sed 's/[^[:alnum:]]//g' ).rst" ; 
</span><span class='line'>find ../administration/ -name "$filename" -exec /bin/cp -f $f {} \;  ;  
</span><span class='line'>done
</span><span class='line'>
</span><span class='line'>#再执行一遍docs-gen.sh，把目录的索引再（确认）添加一次
</span><span class='line'>cd ../administration
</span><span class='line'>./docs-gen.sh
</span></code></pre></td></tr></table></div></figure>


<p>完后生成 <code>make html</code> ，直接打开 <strong>_build/html/index.html</strong> 查看下内容。</p>

<p>最后就是根据具体情况，做一些细微的调整了。</p>

<h2>MISC</h2>

<ul>
<li><a href="http://www.sphinx-doc.org/en/latest/markup/inline.html">Inline markup</a></li>
<li><a href="http://zh-sphinx-doc.readthedocs.io/en/latest/markup/inline.html">文档引用</a></li>
<li><a href="http://rest-sphinx-memo.readthedocs.io/en/latest/Sphinx.html#sphinx-inline-markup">Sphinx inline markup</a></li>
<li><a href="http://rest-sphinx-memo.readthedocs.io/en/latest/ReST.html#tables">表格</a> GOOD!</li>
<li><a href="http://openalea.gforge.inria.fr/doc/openalea/doc/_build/html/source/sphinx/rest_syntax.html#tables">table</a></li>
<li><a href="http://www.tablesgenerator.com/text_tables#">tablesgenerator</a> <a href="https://stackoverflow.com/questions/26609816/some-online-tool-or-automation-plugin-for-sublimetext-for-generating-sphinx-rst">&lt;-</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用TeamviewerVPN访问公司内网]]></title>
    <link href="http://winseliu.com/blog/2017/11/04/teamviewer-vpn-on-windows/"/>
    <updated>2017-11-04T22:26:50+08:00</updated>
    <id>http://winseliu.com/blog/2017/11/04/teamviewer-vpn-on-windows</id>
    <content type="html"><![CDATA[<p>一直以来都只是用Teamviewer的图形界面，如果仅仅针对单台机器操作还是蛮OK的。但是如果想要访问远程的整个集群，那就为难了。</p>

<p>以前通过 <strong> 公司的跳板机 </strong>，然后连接 <strong> 内网搭建的VPN </strong> 来实现 <strong> 透明 </strong> 的访问公司的环境。也折腾过自己买一台aliyun的机器搞一个外网IP，然后通过SSH的反向代理来间接的跳转访问公司内网，但成本都还是比较高的。</p>

<p>既然Teamviewer提供了一种远程访问的方式，那么能不能通过Teamviewer来实现代理，继而类似VPN的方式在家访问公司内网呢？</p>

<p>备注：一般都是双保险啊，Teamviewer和Anydesk都放一个！！！</p>

<h2>安装</h2>

<p>Teamviewer是提供了VPN的访问方式，需要在安装的时刻 选择【显示高级设置】，在下一步中选择【使用Teamviewer VPN】。连接的 <strong> 两台主机都需要安装Teamviewer VPN </strong> 的功能！！！</p>

<p><img src="http://winseliu.com/images/teamviewer-vpn-install.png" alt="" /></p>

<h2>使用VPN</h2>

<p><img src="http://winseliu.com/images/teamviewer-vpn-connect.png" alt="" /></p>

<h2>访问内网</h2>

<p>如果是Linux的话，可以在iptables上面配置SNAT，但是Linux Teamviewer暂时不支持VPN功能。
并且公司运行Teamviewer的机器是WIN7，不能通过运行nat命令（server版本才有）来设置转发。最后功夫不负有心人，找到了在win7下可以设置NAT的方法：</p>

<ul>
<li><a href="https://social.technet.microsoft.com/Forums/windows/en-US/30c1affa-cc6b-4eeb-9377-7600cc3f333a/nat-in-windows7?forum=w7itpronetworking">NAT in windows7</a></li>
<li><a href="https://www.onlinekosten.de/forum/showthread.php?p=2278439">AW: mit Teamviewer VPN ins interne Netzwerk?</a></li>
</ul>


<h4>转发配置</h4>

<ol>
<li>连接的两台机器都启动 <strong> Routing an Remote Access </strong> 系统服务。（修改注册表IPEnableRouter的，不弄也行）</li>
<li>在公司Teamviwer机器上，下载并安装 <a href="http://www.nat32.com/download2/nat32v2.zip">NAT</a> ，<a href="https://www.ntkernel.com/downloads/winpkflt_rtl.zip">配置工具</a></li>
<li>在公司Teamviwer机器上，打开配置工具 <strong> WinpkFilter - Internet Gateway </strong>，配置 本地连接 为Provider， Teamviewer VPN 为Client，然后启动 Start NAT。</li>
</ol>


<p><img src="http://winseliu.com/images/teamviewer-vpn-nat-config.png" alt="" /></p>

<ol>
<li>在本地机器上，添加route，把访问 公司内网IP 的数据转到公司Teamviewer VPN，这样我们就可以透明的访问公司的所有机器了。</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#网关填公司Teamviewer端的IP地址！！！
</span><span class='line'>C:\Windows\system32&gt;route add 192.168.193.0 mask 255.255.255.0 7.138.125.65 metric 1
</span><span class='line'>
</span><span class='line'>C:\Windows\system32&gt;ping 192.168.193.110
</span><span class='line'>
</span><span class='line'>正在 Ping 192.168.193.110 具有 32 字节的数据:
</span><span class='line'>来自 192.168.193.110 的回复: 字节=32 时间=22ms TTL=63
</span><span class='line'>来自 192.168.193.110 的回复: 字节=32 时间=21ms TTL=63
</span><span class='line'>来自 192.168.193.110 的回复: 字节=32 时间=21ms TTL=63
</span><span class='line'>
</span><span class='line'>192.168.193.110 的 Ping 统计信息:
</span><span class='line'>    数据包: 已发送 = 3，已接收 = 3，丢失 = 0 (0% 丢失)，
</span><span class='line'>往返行程的估计时间(以毫秒为单位):
</span><span class='line'>    最短 = 21ms，最长 = 22ms，平均 = 21ms</span></code></pre></td></tr></table></div></figure>


<p>完美，所有的事情Teamviewer都帮想到了并且实现了。</p>

<p>把上面的全部操作写到一个脚本，以后直接使用管理员权限运行即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:~/bigendian$ cat VPN-Route.bat
</span><span class='line'>@setlocal enableextensions enabledelayedexpansion
</span><span class='line'>@echo on
</span><span class='line'>
</span><span class='line'>rem https://community.teamviewer.com/t5/Knowledge-Base/Are-there-parameters-to-start-TeamViewer/ta-p/4135
</span><span class='line'>rem teamviewer.exe -i &lt;ID&gt; -P &lt;Password&gt; [-m fileTransfer/vpn]
</span><span class='line'>start "teamviewer" "C:\Program Files (x86)\TeamViewer\TeamViewer.exe"
</span><span class='line'>
</span><span class='line'>set teamvpnipaddr=7.138.125.65
</span><span class='line'>
</span><span class='line'>:loop
</span><span class='line'>ping -n 1 !teamvpnipaddr! | find "TTL"
</span><span class='line'>if not errorlevel 1 goto :run
</span><span class='line'>if errorlevel 1 goto :endloop
</span><span class='line'>:endloop
</span><span class='line'>ping -n 2 127.0.0.1 &gt;nul: 2&gt;nul:
</span><span class='line'>cls
</span><span class='line'>goto :loop
</span><span class='line'>
</span><span class='line'>:run
</span><span class='line'>route delete 192.168.193.0
</span><span class='line'>route add 192.168.193.0 mask 255.255.255.0 !teamvpnipaddr! metric 1
</span><span class='line'>
</span><span class='line'>endlocal
</span><span class='line'>
</span><span class='line'>pause
</span></code></pre></td></tr></table></div></figure>


<h2>参考的原文：</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>Hello everybody, I investigated a lot for this issue.
</span><span class='line'>Establish a VPN session with TeamViewer to my home pc (remote side) and try to get access to this local network from my working place (local side).
</span><span class='line'>I found an solution i never read anywhere before. Since Windows 7 has removed NAT option using netsh it is difficult to solve it with windows on board tools only.
</span><span class='line'>- Install TeamViewer incl. VPN driver on both sides, activate unattended access on the remote side (my home pc). Use the button Show advanced options, and go to Advanced network options … Install VPN driver
</span><span class='line'>- Install WinPkFilter Device Driver on remote side (my home pc) and restart (http://www.nat32.com/v2/install.htm Download installer: http://www.ntkernel.com/downloads/winpkflt_rtl.zip . NAT32 you don't need. This WinPkFilter package contains a simple GUI to configure the NAT between the VPN interface (client) and the remote side LAN interface (provider). see following hints ...
</span><span class='line'>- Windows: Start RemoteAccess - service 'Routing an Remote Access'  and set to automatic (local/remote side).
</span><span class='line'>- Optional: On the remote side (my home pc), the registry has to be modified. Start the registry editor for example by Regedt32, and browse to HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters Set the parameter IPEnableRouter to “1”. Using console or batch as admin: reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" /v "IPEnableRouter" /t REG_DWORD /d "1". On my system it worked without this option, but according internet forums it seems to be recommended.
</span><span class='line'>- Now create a remote desktop session to your home pc and start also the VPN connection within this TeamViewer session (Menu / Extras / VPN). I created a free TeamViewer account and added all pc's to my computers to make the access to my machines easier.
</span><span class='line'>- On remode side (my home pc) where WinPkFilter is installed start the Internet Gateway GUI of WinPkFilter: Start / Programms / WinpkFilter / Internet Gateway. Select (double click) the ethernet adapter of your local privat lan and set NAT Status to 'Provider'. Select the TeamViewer VPN adapter and set NAT Status to 'client'. Press 'Start NAT'
</span><span class='line'> - On local side (my working place) Add a route to the local side (my working place) to give access to several devices that have the same subnet, add the route like this:
</span><span class='line'>
</span><span class='line'>route add &lt;base IP of remote devices&gt; mask 255.255.255.0 &lt;IP of Teamviewer VPN on remote PC&gt; 
</span><span class='line'>metric 1
</span><span class='line'>
</span><span class='line'>Example (home lan ip range: 192.168.2.x / TeamViewer VPN IP in home pc (remote side) 7.37.88.245
</span><span class='line'>route add 192.168.2.0 mask 255.255.255.0 7.37.88.245 metric 1 &lt;ENTER&gt;
</span><span class='line'>route add 192.168.2.0 mask 255.255.255.0 7.37.88.245 metric 1 -p &lt;ENTER&gt; (if persistent)
</span><span class='line'>Do delete the route route delete 192.168.2.0
</span><span class='line'>Now you should have access to your private home network. Good luck and have fun.
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Run Ubuntu]]></title>
    <link href="http://winseliu.com/blog/2017/10/30/windows-run-ubuntu/"/>
    <updated>2017-10-30T07:17:53+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/30/windows-run-ubuntu</id>
    <content type="html"><![CDATA[<p>最新版的Windows已经可以安装ubuntu了，算是微软开源后的一个阶段性的成果了。</p>

<p>功能和windows兼容性很强（不像cygwin），软链接、文件权限都是和系统一致的。并且基本所有ubuntu的功能都可以使用，安装jekyll、docker都很顺利。同时打开系统的程序也很方便。非常赞和值得程序员去尝试！！</p>

<p>本文后面会逐渐增加使用过程中的一些操作，今天先更新系统安装、octopress安装、docker安装。</p>

<h2>系统安装</h2>

<p>直接去微软的官网下载最新版系统ISO，然后安装系统 <strong> 专业版 </strong>（教育版比较干净一些，但是网上没有破解方式啊）。</p>

<h2>Ubuntu</h2>

<h4>安装Ubuntu</h4>

<p>最新版的Ubuntu已经进入到稳定版。直接打开商店，搜索Ubuntu，然后安装即可。大概200M的样子，很快就安装了。然后Launch会初始化创建用户。</p>

<p>相关的一些有用的文档：</p>

<ul>
<li><a href="https://msdn.microsoft.com/zh-cn/commandline/wsl/user-support">https://msdn.microsoft.com/zh-cn/commandline/wsl/user-support</a></li>
<li>权限相关 <a href="https://github.com/Microsoft/WSL/issues/81">https://github.com/Microsoft/WSL/issues/81</a></li>
</ul>


<h4>安装mintty</h4>

<ul>
<li><a href="https://superuser.com/questions/1110045/windows-10-bash-and-mintty">https://superuser.com/questions/1110045/windows-10-bash-and-mintty</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22033219">https://zhuanlan.zhihu.com/p/22033219</a></li>
</ul>


<p>CMD方式操作Ubuntu太难受了，mintty操作就像SecurtCRT一样，简单方便。安装 <a href="https://github.com/mintty/wsltty">wsltty-1.8.0-install</a> ，使用mintty来运行ubuntu。</p>

<p>默认mintty的配置放在 <code>%APPDATA%\wsltty</code>。在子目录theme下可以 <a href="http://ciembor.github.io/4bit/">http://ciembor.github.io/4bit/</a> 下载一个主题放到该目录下，然后再mintty配置页面选择该主题。</p>

<h4>系统文件</h4>

<ul>
<li><a href="https://github.com/Microsoft/WSL/issues/402">https://github.com/Microsoft/WSL/issues/402</a></li>
</ul>


<p>root挂载点：<code>C:\Users\&lt;user&gt;\AppData\Local\lxss</code> or <code>C:\Users\&lt;username&gt;\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState</code></p>

<h2>安装Jekyll</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># https://superuser.com/questions/116625/recursively-change-owner-windows-7
</span><span class='line'>#takeown /f "C:\path\to\folder" /r
</span><span class='line'>#icacls "C:\path\to\folder" /reset /T
</span><span class='line'>用powershell管理员权限 "提"权
</span><span class='line'>PS E:\winsegit\octopress&gt; takeown /F . /R
</span><span class='line'>修改就旧系统的文件属性：
</span><span class='line'>PS E:\winsegit\octopress&gt; cacls *.* /T /G Everyone:F
</span><span class='line'>
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install ruby-bundler
</span><span class='line'>sudo apt-get install ruby-dev
</span><span class='line'>sudo apt-get install make
</span><span class='line'>sudo apt-get install gcc
</span><span class='line'>bundle install
</span><span class='line'>
</span><span class='line'>sudo gem update
</span><span class='line'>sudo gem uninstall rake
</span><span class='line'>sudo gem install rake -v 10.5.0
</span><span class='line'>sudo apt-get install nodejs
</span><span class='line'>   
</span><span class='line'>rake preview
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ rake preview
</span><span class='line'>/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
</span><span class='line'>Starting to watch source with Jekyll and Compass. Starting Rack on port 4000
</span><span class='line'>/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
</span><span class='line'>/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c/Windows/System32 in PATH, mode 040777
</span><span class='line'>/var/lib/gems/2.3.0/gems/liquid-2.6.1/lib/liquid/htmltags.rb:43: warning: key "index0" is duplicated and overwritten on line 46
</span><span class='line'>[2017-10-29 22:48:09] INFO  WEBrick 1.3.1
</span><span class='line'>[2017-10-29 22:48:09] INFO  ruby 2.3.1 (2016-04-26) [x86_64-linux-gnu]
</span><span class='line'>[2017-10-29 22:48:09] INFO  WEBrick::HTTPServer#start: pid=39 port=4000
</span><span class='line'>Configuration file: /mnt/e/winsegit/octopress/_config.yml
</span><span class='line'>            Source: source
</span><span class='line'>       Destination: public
</span><span class='line'>      Generating...
</span><span class='line'>                    done.
</span><span class='line'>                  </span></code></pre></td></tr></table></div></figure>


<p>上面warning提示也有对应的Issue，也没所谓暂时不理： <a href="https://github.com/Microsoft/WSL/issues/1426">https://github.com/Microsoft/WSL/issues/1426</a></p>

<h2>安装docker</h2>

<ul>
<li><a href="https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce-1">https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce-1</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:~$ uname -r
</span><span class='line'>4.4.0-43-Microsoft
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ uname -a
</span><span class='line'>Linux DESKTOP-ADH7K1Q 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014 x86_64 x86_64 x86_64 GNU/Linux
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$  sudo apt-get install \
</span><span class='line'>     apt-transport-https \
</span><span class='line'>     ca-certificates \
</span><span class='line'>     curl \
</span><span class='line'>     software-properties-common
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ lsb_release -cs
</span><span class='line'>xenial
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
</span><span class='line'>OK
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo add-apt-repository \
</span><span class='line'>   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
</span><span class='line'>   $(lsb_release -cs) \
</span><span class='line'>   stable"
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo apt-get update
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo apt-get install docker-ce
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo service docker start
</span><span class='line'> * Starting Docker: docker                                                                                                                     [ OK ]
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo docker images
</span><span class='line'>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo docker ps
</span><span class='line'>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$
</span></code></pre></td></tr></table></div></figure>


<h2>运行windows系统应用</h2>

<ul>
<li><a href="https://www.howtogeek.com/285082/how-to-run-windows-programs-from-windows-10s-bash-shell/">https://www.howtogeek.com/285082/how-to-run-windows-programs-from-windows-10s-bash-shell/</a></li>
<li><a href="https://github.com/Microsoft/WSL/issues/333">https://github.com/Microsoft/WSL/issues/333</a></li>
<li><a href="https://msdn.microsoft.com/en-us/commandline/wsl/interop">https://msdn.microsoft.com/en-us/commandline/wsl/interop</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:~$ ln -s /mnt/e/local/usr/share/npp/notepad++.exe text
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ cp -r ../winse-cygwin/new_post.sh ./
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ cat new_post.sh
</span><span class='line'>cd ~/winsegit/octopress/
</span><span class='line'>rake new_post["$1"] | tail -1 | awk -F: '{print $2}' | while read line
</span><span class='line'>do
</span><span class='line'>name=${line#source/_posts/}
</span><span class='line'>newpath=source/_stash/$name
</span><span class='line'>mv $line $newpath
</span><span class='line'>
</span><span class='line'>echo -e "\n\n--END" &gt;&gt;$newpath
</span><span class='line'>
</span><span class='line'>~/text $newpath &
</span><span class='line'>done
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ ./new_post.sh "windows run ubuntu"
</span><span class='line'>/usr/lib/ruby/vendor_ruby/bundler/shared_helpers.rb:78: warning: Insecure world writable dir /mnt/c in PATH, mode 040777
</span><span class='line'>mkdir -p source/_posts
</span></code></pre></td></tr></table></div></figure>


<h2>重新配置git</h2>

<p>用powershell修改原来的权限后，然后用shell来进行设置。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#powershell
</span><span class='line'>takeown /F . /R
</span><span class='line'>cacls *.* /T /G Everyone:F
</span><span class='line'>
</span><span class='line'>#ubuntu shell
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ cp -r ../winse-cygwin/.ssh ./
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ cd .ssh
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/.ssh$ chmod 600 id_rsa authorized_keys
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/.ssh$ chmod 644 id_rsa.pub config
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/winsegit/octopress/_deploy$ rm -rf *
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/winsegit/octopress/_deploy$ git clone git@github.com:winse/winse.github.com.git ./
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ git config --global user.email winseliu@qq.com
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ git config --global user.name winse
</span><span class='line'>
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ rake preview
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~/winsegit/octopress$ sh public.git.sh
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Cenots7双击运行程序]]></title>
    <link href="http://winseliu.com/blog/2017/10/28/application-run-do-double-click-on-centos7/"/>
    <updated>2017-10-28T22:58:20+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/28/application-run-do-double-click-on-centos7</id>
    <content type="html"><![CDATA[<p>Linux本来就是作为服务器来运行的，双击运行程序的需求比较少。但是还是有一些，同时也没有Windows桌面快捷方式那么的方便。</p>

<p>在Centos7中建立&#8221;快捷方式&#8221;双击运行，需要建立一个desktop类型的文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s ~] cat ~/Desktop/Cassandra.desktop
</span><span class='line'>[Desktop Entry]
</span><span class='line'>Name=Cassandra
</span><span class='line'>Comment=Launch Cassandra
</span><span class='line'>Exec=su - hadoop /home/hadoop/apache-cassandra-2.2.10/bin/cassandra -f
</span><span class='line'>Terminal=true
</span><span class='line'>Type=Application
</span></code></pre></td></tr></table></div></figure>


<p>右键创建快捷的方式，在Centos7上面没有找到。</p>

<blockquote><p>In Gnome :
- right click on the desktop and &lsquo;create launcher&rsquo;
- browse to the script location and give a name</p></blockquote>

<h2>参考</h2>

<ul>
<li><a href="https://unix.stackexchange.com/questions/189777/how-to-launch-shell-script-with-double-click-in-centos-7">https://unix.stackexchange.com/questions/189777/how-to-launch-shell-script-with-double-click-in-centos-7</a></li>
<li><a href="https://askubuntu.com/questions/138908/how-to-execute-a-script-just-by-double-clicking-like-exe-files-in-windows">https://askubuntu.com/questions/138908/how-to-execute-a-script-just-by-double-clicking-like-exe-files-in-windows</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Flamegraph查看磁盘使用情况]]></title>
    <link href="http://winseliu.com/blog/2017/10/28/flamegraph-display-how-disk-be-used/"/>
    <updated>2017-10-28T19:08:14+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/28/flamegraph-display-how-disk-be-used</id>
    <content type="html"><![CDATA[<p>以前有使用FlameGraph做Java程序的堆栈（热点代码）的显示。其实磁盘也可以使用类似的方式来显示查看占用情况，找出没用的数据。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/brendangregg/FlameGraph.git
</span><span class='line'>
</span><span class='line'>#使用管理员权限运行
</span><span class='line'>winse@Lenovo-PC /cygdrive/e/git/FlameGraph
</span><span class='line'>$ ./files.pl /cygdrive/c/ | ./flamegraph.pl --hash --countname=bytes &gt; /cygdrive/r/c.svg
</span></code></pre></td></tr></table></div></figure>


<p>然后浏览器查看即可，主要还是查看占用比。（但是不一定所有文件都包括在SVG里面）。</p>

<p>当然，默认官网提供的 files.pl 是获取所有的目录。我们可以做下层级控制，代码修改如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git diff
</span><span class='line'>diff --git a/files.pl b/files.pl
</span><span class='line'>index 27654be..5d1012e 100755
</span><span class='line'>--- a/files.pl
</span><span class='line'>+++ b/files.pl
</span><span class='line'>@@ -29,7 +29,16 @@ sub usage {
</span><span class='line'> usage() if @ARGV == 0 or $ARGV[0] eq "--help" or $ARGV[0] eq "-h";
</span><span class='line'>
</span><span class='line'> foreach my $dir (@ARGV) {
</span><span class='line'>-    find(\&wanted, $dir);
</span><span class='line'>+    find({
</span><span class='line'>+       preprocess =&gt; \&preprocess,
</span><span class='line'>+       wanted =&gt; \&wanted,
</span><span class='line'>+    }, $dir);
</span><span class='line'>+}
</span><span class='line'>+
</span><span class='line'>+sub preprocess {
</span><span class='line'>+       my $depth = $File::Find::dir =~ tr[/][];
</span><span class='line'>+       return @_ if $depth &lt; 8;
</span><span class='line'>+       return ;
</span><span class='line'> }
</span><span class='line'>
</span><span class='line'> sub wanted {
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://winseliu.com/images/blogs/flamegraph_disk.png" alt="" /></p>

<p>下列的文件夹可以排查下进行处理：</p>

<ul>
<li>C:\pagefile.sys C:\swapfile.sys : 系统属性-高级-性能选项-虚拟内存</li>
<li>C:\hiberfil.sys : powercfg -h -zie 60% ; powercfg.exe /hibernate off</li>
<li>C:\ProgramData\Package Cache</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://www.brendangregg.com/blog/2016-01-20/ebpf-offcpu-flame-graph.html">http://www.brendangregg.com/blog/2016-01-20/ebpf-offcpu-flame-graph.html</a></li>
<li><a href="https://support.microsoft.com/en-us/help/920730/how-to-disable-and-re-enable-hibernation-on-a-computer-that-is-running">https://support.microsoft.com/en-us/help/920730/how-to-disable-and-re-enable-hibernation-on-a-computer-that-is-running</a></li>
<li><a href="http://www.intowindows.com/how-to-reduce-hibernate-file-size-in-windows-7/">http://www.intowindows.com/how-to-reduce-hibernate-file-size-in-windows-7/</a></li>
<li><a href="http://www.brendangregg.com/blog/2017-02-05/file-system-flame-graph.html">http://www.brendangregg.com/blog/2017-02-05/file-system-flame-graph.html</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker多主机网络配置 - Macvlan]]></title>
    <link href="http://winseliu.com/blog/2017/10/08/docker-network-via-macvlan/"/>
    <updated>2017-10-08T10:27:54+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/08/docker-network-via-macvlan</id>
    <content type="html"><![CDATA[<h2>参考</h2>

<ul>
<li><a href="https://docs.docker.com/engine/userguide/networking/get-started-macvlan/#macvlan-bridge-mode-example-usage">Get started with Macvlan network driver</a></li>
<li><a href="https://github.com/alfredhuang211/study-docker-doc/blob/master/docker%E8%B7%A8%E4%B8%BB%E6%9C%BAmacvlan%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.md">docker跨主机macvlan网络配置</a></li>
<li><a href="https://blog.jessfraz.com/post/ips-for-all-the-things/">ip static</a></li>
<li><a href="https://stackoverflow.com/questions/35742807/docker-1-10-containers-ip-in-lan/39285950#39285950">Docker 1.12+ container&rsquo;s IP in LAN</a></li>
<li><a href="http://hustcat.github.io/docker-macvlan/">Docker自定义网络——MacVLAN</a> 这篇内容有点类似pipework。</li>
</ul>


<blockquote><p>Note: In Macvlan you are not able to ping or communicate with the default namespace IP address. For example, if you create a container and try to ping the Docker host’s eth0 it will not work. That traffic is explicitly filtered by the kernel modules themselves to offer additional provider isolation and security.</p></blockquote>

<h2>主机</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@kube-master140 ~]# ip addr show ens33
</span><span class='line'>2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
</span><span class='line'>    link/ether 00:0c:29:40:2d:15 brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 192.168.191.140/24 brd 192.168.191.255 scope global dynamic ens33
</span><span class='line'>       valid_lft 1765sec preferred_lft 1765sec
</span><span class='line'>    inet6 fe80::1186:2fe5:9ee5:8790/64 scope link 
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>
</span><span class='line'>[root@kube-worker141 ~]# ip addr show ens33
</span><span class='line'>2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
</span><span class='line'>    link/ether 00:0c:29:2e:67:4d brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 192.168.191.141/24 brd 192.168.191.255 scope global dynamic ens33
</span><span class='line'>       valid_lft 1779sec preferred_lft 1779sec
</span><span class='line'>    inet6 fe80::dd23:1df6:b37:efae/64 scope link 
</span><span class='line'>       valid_lft forever preferred_lft forever</span></code></pre></td></tr></table></div></figure>


<h2>创建网络</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@kube-worker141 ~]# docker network create \
</span><span class='line'>-d macvlan \
</span><span class='line'>--subnet=192.168.191.0/24 \
</span><span class='line'>--gateway=192.168.191.2 \
</span><span class='line'>-o parent=ens33 pub_net
</span><span class='line'>4370998ed03024bc0057a894f1280d5b0fcdba526fd9e8da612a3abb0dbc884b
</span><span class='line'>
</span><span class='line'>[root@kube-worker141 ~]# docker network list 
</span><span class='line'>NETWORK ID          NAME                DRIVER              SCOPE
</span><span class='line'>eee9236a36ba        bridge              bridge              local               
</span><span class='line'>ddc7f59215c1        host                host                local               
</span><span class='line'>d8dc7fbc40a6        none                null                local               
</span><span class='line'>4370998ed030        pub_net             macvlan             local               
</span><span class='line'>
</span><span class='line'>[root@kube-worker141 ~]# docker network inspect pub_net
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<h2>使用</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker rm -f $( docker ps -a | grep -v IMAGE | awk '{print $1}' ) 
</span><span class='line'>
</span><span class='line'>[root@kube-worker141 ~]# docker run --net=pub_net --ip=192.168.191.200 --name c200 -tid busybox /bin/sh
</span><span class='line'>2e0a2ede40e80a2f1739330bb3a6c45b91ea08d78d26d165ad13945bedbea40f
</span><span class='line'>
</span><span class='line'>[root@kube-worker141 ~]# docker ps 
</span><span class='line'>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
</span><span class='line'>2e0a2ede40e8        busybox             "/bin/sh"           13 seconds ago      Up 11 seconds                           c200
</span><span class='line'>[root@kube-worker141 ~]# docker exec c200 ifconfig 
</span><span class='line'>eth0      Link encap:Ethernet  HWaddr 02:42:C0:A8:BF:C8  
</span><span class='line'>          inet addr:192.168.191.200  Bcast:0.0.0.0  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::42:c0ff:fea8:bfc8/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0 
</span><span class='line'>          RX bytes:0 (0.0 B)  TX bytes:648 (648.0 B)
</span><span class='line'>
</span><span class='line'>lo        Link encap:Local Loopback  
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          inet6 addr: ::1/128 Scope:Host
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:65536  Metric:1
</span><span class='line'>          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1 
</span><span class='line'>          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
</span><span class='line'>
</span><span class='line'>[root@kube-worker141 ~]# docker exec c200 route -n
</span><span class='line'>Kernel IP routing table
</span><span class='line'>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
</span><span class='line'>0.0.0.0         192.168.191.2   0.0.0.0         UG    0      0        0 eth0
</span><span class='line'>192.168.191.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0
</span><span class='line'>[root@kube-worker141 ~]# docker exec c200 ping baidu.com 
</span><span class='line'>PING baidu.com (111.13.101.208): 56 data bytes
</span><span class='line'>64 bytes from 111.13.101.208: seq=0 ttl=128 time=45.029 ms
</span><span class='line'>64 bytes from 111.13.101.208: seq=1 ttl=128 time=44.616 ms
</span><span class='line'>
</span><span class='line'>#201
</span><span class='line'>[root@kube-worker141 ~]# docker run --net=pub_net --ip=192.168.191.201 -tid busybox /bin/sh 
</span><span class='line'>c8cfd3443f2b7b3973a06470cb95442eadface8d89c8cb1749ad73ebbd7e9e39
</span><span class='line'>
</span><span class='line'>##本地容器互通: 
</span><span class='line'>#: HOST141-200 ping HOST141-201
</span><span class='line'>[root@kube-worker141 ~]# docker exec c200 ping -W 10 192.168.191.201
</span><span class='line'>PING 192.168.191.201 (192.168.191.201): 56 data bytes
</span><span class='line'>64 bytes from 192.168.191.201: seq=0 ttl=64 time=0.523 ms
</span><span class='line'>
</span><span class='line'>#210 
</span><span class='line'>[root@kube-master ~]# docker run --net=pub_net --ip=192.168.191.210 -tid busybox /bin/sh 
</span><span class='line'>7929c136c3dbc646b68b3b7302e8525a25fe2f583db2246fea0da85a448b7b78
</span><span class='line'>
</span><span class='line'>##B访问A主机的容器: 
</span><span class='line'>#: HOST140 ping HOST141-201 
</span><span class='line'>[root@kube-master140 ~]# ping 192.168.191.201 
</span><span class='line'>PING 192.168.191.201 (192.168.191.201) 56(84) bytes of data.
</span><span class='line'>64 bytes from 192.168.191.201: icmp_seq=1 ttl=64 time=1.44 ms
</span><span class='line'>
</span><span class='line'>##A主机容器访问B主机容器: 
</span><span class='line'>#: HOST141-200 ping HOST140-210
</span><span class='line'>[root@kube-worker141 ~]# docker exec c200 ping -W 10 192.168.191.210
</span><span class='line'>PING 192.168.191.210 (192.168.191.210): 56 data bytes
</span><span class='line'>64 bytes from 192.168.191.210: seq=0 ttl=64 time=2.049 ms
</span><span class='line'>64 bytes from 192.168.191.210: seq=1 ttl=64 time=0.993 ms
</span><span class='line'>
</span><span class='line'>#主机与所在容器互相不能访问 (--!): 
</span><span class='line'>#: HOST141 ping HOST141-200
</span><span class='line'>[root@kube-worker141 ~]# ping 192.168.191.200
</span><span class='line'>PING 192.168.191.200 (192.168.191.200) 56(84) bytes of data.
</span><span class='line'>From 192.168.191.141 icmp_seq=1 Destination Host Unreachable
</span><span class='line'>From 192.168.191.141 icmp_seq=2 Destination Host Unreachable
</span><span class='line'>#: HOST141-200 ping HOST141
</span><span class='line'>[root@kube-worker1 ~]# docker exec c200 ping 192.168.191.141
</span></code></pre></td></tr></table></div></figure>


<p>针对主机与本机容器不能互通的问题，可以增加一张默认的网卡：<a href="https://success.docker.com/KBase/Multiple_Docker_Networks">Multiple Docker Networks</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#先通过默认网络创建
</span><span class='line'>[root@kube-worker1 ~]# docker run --name c200 -tid busybox /bin/sh                                   
</span><span class='line'>47b7c1813b95cbec471b1a6de6a870e5537cfa70d54120873a5edb4e444b373b
</span><span class='line'>#然后连接pub_net！
</span><span class='line'>[root@kube-worker1 ~]# docker network connect --ip=192.168.191.200 pub_net c200        
</span><span class='line'>[root@kube-worker1 ~]# docker exec c200 ip a
</span><span class='line'>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue qlen 1
</span><span class='line'>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span><span class='line'>    inet 127.0.0.1/8 scope host lo
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>    inet6 ::1/128 scope host 
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>14: eth0@if15: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu 1500 qdisc noqueue 
</span><span class='line'>    link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 172.18.0.2/16 scope global eth0
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>    inet6 fe80::42:acff:fe12:2/64 scope link 
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>16: eth1@if2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu 1500 qdisc noqueue 
</span><span class='line'>    link/ether 02:42:c0:a8:bf:c8 brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 192.168.191.200/24 scope global eth1
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>    inet6 fe80::42:c0ff:fea8:bfc8/64 scope link 
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>       </span></code></pre></td></tr></table></div></figure>


<p>方式1：</p>

<p>与主机的通信，通过 172.18.0.0/24 的网络。其他的通过 192.168.191.0/24 。还是感觉有点鸡肋！！</p>

<p>方式2：</p>

<p>增加route：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#route add -host $container_ip gw $lan_router_ip $if_device_nic2
</span><span class='line'>
</span><span class='line'>[root@kube-worker1 ~]# route add -net 192.168.191.200 gw 172.18.0.1 netmask 255.255.255.255 dev docker0
</span><span class='line'>[root@kube-worker1 ~]# route -n
</span><span class='line'>Kernel IP routing table
</span><span class='line'>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
</span><span class='line'>0.0.0.0         192.168.191.2   0.0.0.0         UG    100    0        0 ens33
</span><span class='line'>172.17.3.0      192.168.191.140 255.255.255.0   UG    100    0        0 ens33
</span><span class='line'>172.17.4.0      0.0.0.0         255.255.255.0   U     425    0        0 kbr0
</span><span class='line'>172.18.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0
</span><span class='line'>192.168.191.0   0.0.0.0         255.255.255.0   U     100    0        0 ens33
</span><span class='line'>192.168.191.200 172.18.0.1      255.255.255.255 UGH   0      0        0 docker0
</span><span class='line'>[root@kube-worker1 ~]# ping 192.168.191.200
</span><span class='line'>PING 192.168.191.200 (192.168.191.200) 56(84) bytes of data.
</span><span class='line'>64 bytes from 192.168.191.200: icmp_seq=1 ttl=64 time=0.239 ms
</span><span class='line'>64 bytes from 192.168.191.200: icmp_seq=2 ttl=64 time=0.106 ms
</span><span class='line'>^C
</span><span class='line'>--- 192.168.191.200 ping statistics ---
</span><span class='line'>2 packets transmitted, 2 received, 0% packet loss, time 1000ms
</span><span class='line'>rtt min/avg/max/mdev = 0.106/0.172/0.239/0.067 ms
</span></code></pre></td></tr></table></div></figure>


<p>通过操作与pipework比较，互有优劣：</p>

<ul>
<li>pipework会创建网卡，然后所有的ip都是互通的，但是绑定、还得把主机的ip配置到br0上。</li>
<li>而docker-network的方式与主机互通需要做额外的配置。</li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker多主机网络配置 - Pipework]]></title>
    <link href="http://winseliu.com/blog/2017/10/07/docker-network-via-pipework/"/>
    <updated>2017-10-07T23:24:23+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/07/docker-network-via-pipework</id>
    <content type="html"><![CDATA[<p>前面使用nat+route的方式手动连通两台机器上的docker容器。pipework是通过脚本的方式（手动）设置网络以及修改路由来进行配置的。</p>

<p>参考：</p>

<ul>
<li><a href="http://www.infoq.com/cn/articles/docker-network-and-pipework-open-source-explanation-practice">Docker网络详解及pipework源码解读与实践</a></li>
<li><a href="http://hongge.blog.51cto.com/2083180/1843169">docker技术剖析&ndash;docker网络（二）docker宿主机之间容器互通 for centos7.2</a> 步骤更详细一点</li>
<li><a href="http://tonybai.com/2016/02/15/understanding-docker-multi-host-networking/">理解Docker跨多主机容器网络</a></li>
</ul>


<blockquote><p>2、将物理网卡桥接到虚拟网桥，使得容器与宿主机配置在同一网段下</p>

<p>在各个宿主机上都建立一个新虚拟网桥设备br0，将各自物理网卡eth0桥接br0上，eth0的IP地址赋给br0；同时修改Docker daemon的DOCKER_OPTS，设置-b=br0（替代docker0），并限制Container IP地址的分配范围为同物理段地址（–fixed-cidr）。重启各个主机的Docker Daemon后，处于与宿主机在同一网段的Docker容器就可以实现跨主机访问了。这个方案同样存在局限和扩展性差的问题：比如需将物理网段的地址划分 成小块，分布到各个主机上，防止IP冲突；子网划分依赖物理交换机设置；Docker容器的主机地址空间大小依赖物理网络划分等。</p></blockquote>

<p>原理就是建立一条连接link，一端 <strong> 在主机 </strong> 一端 <strong> 在容器 </strong> ；然后手动配置容器ip和路由；最后把主机Ethernet和新建的Bridge桥接连接到物理网络。</p>

<p>容器的ip地址和主机的ip地址在一个网段内，所以在同一交换机下的所有主机、里面的容器都互通。</p>

<h2>查看原网络的信息：</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@kube-worker1 ~]# nmcli d show ens33 
</span><span class='line'>GENERAL.DEVICE:                         ens33
</span><span class='line'>GENERAL.TYPE:                           ethernet
</span><span class='line'>GENERAL.HWADDR:                         00:0C:29:2E:67:4D
</span><span class='line'>GENERAL.MTU:                            1500
</span><span class='line'>GENERAL.STATE:                          100 (connected)
</span><span class='line'>GENERAL.CONNECTION:                     ens33
</span><span class='line'>GENERAL.CON-PATH:                       /org/freedesktop/NetworkManager/ActiveConnection/0
</span><span class='line'>WIRED-PROPERTIES.CARRIER:               on
</span><span class='line'>IP4.ADDRESS[1]:                         192.168.191.141/24
</span><span class='line'>IP4.GATEWAY:                            192.168.191.2
</span><span class='line'>IP4.ROUTE[1]:                           dst = 172.17.3.0/24, nh = 192.168.191.140, mt = 100
</span><span class='line'>IP4.DNS[1]:                             192.168.191.2
</span><span class='line'>IP4.DOMAIN[1]:                          localdomain
</span><span class='line'>IP6.ADDRESS[1]:                         fe80::3995:4490:e2e7:1d0f/64
</span><span class='line'>IP6.GATEWAY:                            </span></code></pre></td></tr></table></div></figure>


<h2>安装pipework</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/jpetazzo/pipework
</span><span class='line'>cp ~/pipework/pipework /usr/local/bin/</span></code></pre></td></tr></table></div></figure>


<h2>运行docker</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#设置ip转发
</span><span class='line'>echo 1 &gt; /proc/sys/net/ipv4/ip_forward
</span><span class='line'>
</span><span class='line'>vi /etc/sysctl.conf
</span><span class='line'>net.ipv4.ip_forward = 1  
</span><span class='line'>
</span><span class='line'>NAME=test1
</span><span class='line'>
</span><span class='line'>#如不需要安装软件，可以加 --net none
</span><span class='line'>docker run -itd --name $NAME centos /bin/bash
</span><span class='line'>
</span><span class='line'>#docker ps -a -f name=$NAME | grep $NAME && docker start $NAME 
</span><span class='line'>#docker exec test1 yum install -y iproute net-tools </span></code></pre></td></tr></table></div></figure>


<h2>配置网络</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function docker_container_ip () {
</span><span class='line'>  local name=$1
</span><span class='line'>  local ip=$2
</span><span class='line'>  local gateway=${3:-$GATEWAY}
</span><span class='line'>  
</span><span class='line'>  pipework br0 $name $ip@$gateway
</span><span class='line'>  #docker exec $name ifconfig 
</span><span class='line'>  #docker exec $name route -n 
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>function docker_hosted_bridge_network_reset () {
</span><span class='line'>  local ip=$1
</span><span class='line'>  local gateway=$2
</span><span class='line'>  local iface=$3
</span><span class='line'>  
</span><span class='line'>  if nmcli d show $iface | grep -i ethernet ; then
</span><span class='line'>    #把地址给网桥，然后把ethernet和bridge连起来：(SSH连接操作的话，需要一条命令搞定！修改br0地址后route会变)
</span><span class='line'>    ip addr add $ip dev br0 ; \
</span><span class='line'>    ip addr del $ip dev $iface ; \
</span><span class='line'>    brctl addif br0 $iface ; \
</span><span class='line'>    #ip route del default ; \
</span><span class='line'>    ip route add default via $gateway 
</span><span class='line'>  fi 
</span><span class='line'>  
</span><span class='line'>  brctl show br0
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>GATEWAY=$( route -n | grep '^0.0.0.0' | awk '{print $2}' )
</span><span class='line'>IFACE=$( route -n | grep '^0.0.0.0' | awk '{print $8}' )
</span><span class='line'>HOSTED_IPADDR=$( ip addr show $IFACE | grep "inet " | awk '{print $2}' )
</span></code></pre></td></tr></table></div></figure>


<p>设置容器的IP：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NAME=test1
</span><span class='line'>IP=192.168.191.210/24
</span><span class='line'>
</span><span class='line'>docker_container_ip $NAME $IP $GATEWAY
</span><span class='line'>docker_hosted_bridge_network_reset $HOSTED_IPADDR $GATEWAY $IFACE</span></code></pre></td></tr></table></div></figure>


<p>上面的方式配置方式<strong>重启就失效</strong>的，可以通过写配置文件的方式来永久生效。如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@kube-worker1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33 
</span><span class='line'>TYPE=Ethernet
</span><span class='line'>DEVICE=ens33
</span><span class='line'>BRIDGE=br0
</span><span class='line'>[root@kube-worker1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-br0 
</span><span class='line'>DEVICE=br0
</span><span class='line'>TYPE=Bridge
</span><span class='line'>ONBOOT=yes
</span><span class='line'>BOOTPROTO=static
</span><span class='line'>IPADDR=192.168.191.141
</span><span class='line'>NETMASK=255.255.255.0
</span><span class='line'>GATEWAY=192.168.191.2
</span><span class='line'>DNS1=192.168.191.2
</span><span class='line'>
</span><span class='line'>USERCTL=no</span></code></pre></td></tr></table></div></figure>


<h2>测试</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@kube-worker1 ~]# screen
</span><span class='line'>
</span><span class='line'>  GATEWAY=$( route -n | grep '^0.0.0.0' | awk '{print $2}' )
</span><span class='line'>  IFACE=$( route -n | grep '^0.0.0.0' | awk '{print $8}' )
</span><span class='line'>  HOSTED_IPADDR=$( ip addr show $IFACE | grep "inet " | awk '{print $2}' )
</span><span class='line'>
</span><span class='line'>  docker run -itd --name test21 centos /bin/bash
</span><span class='line'>  docker run -itd --name test22 centos /bin/bash
</span><span class='line'>
</span><span class='line'>  docker_container_ip test21 192.168.191.231/24 $GATEWAY
</span><span class='line'>  docker_container_ip test22 192.168.191.232/24 $GATEWAY
</span><span class='line'>
</span><span class='line'>  docker exec test21 ping  192.168.191.140
</span><span class='line'>  docker exec test21 ping  192.168.191.141
</span><span class='line'>
</span><span class='line'>[root@kube-master ~]# screen #会话"不断"
</span><span class='line'>
</span><span class='line'>  docker_container_ip test11 192.168.191.221/24 $GATEWAY 
</span><span class='line'>  docker_container_ip test12 192.168.191.222/24 $GATEWAY
</span><span class='line'>
</span><span class='line'>  docker_hosted_bridge_network_reset $HOSTED_IPADDR $GATEWAY $IFACE
</span><span class='line'>
</span><span class='line'>  docker exec test11 ping 192.168.191.233</span></code></pre></td></tr></table></div></figure>


<p>注意：容器重启后，这些配置的网卡/路由都没有了，要重新配置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@kube-worker1 ~]# docker stop test21
</span><span class='line'>test21
</span><span class='line'>[root@kube-worker1 ~]# docker start test21
</span><span class='line'>test21
</span><span class='line'>[root@kube-worker1 ~]# pipework route test21 show 
</span><span class='line'>default via 172.18.0.1 dev eth0 
</span><span class='line'>172.18.0.0/16 dev eth0  proto kernel  scope link  src 172.18.0.2 
</span><span class='line'>
</span><span class='line'>[root@kube-worker1 ~]# docker_container_ip test21 192.168.191.231/24 $GATEWAY
</span><span class='line'>[root@kube-worker1 ~]# pipework route test21 show                            
</span><span class='line'>default via 192.168.191.2 dev eth1 
</span><span class='line'>172.18.0.0/16 dev eth0  proto kernel  scope link  src 172.18.0.2 
</span><span class='line'>192.168.191.0/24 dev eth1  proto kernel  scope link  src 192.168.191.231 
</span><span class='line'>
</span><span class='line'>[root@kube-worker1 ~]# docker exec test21 ping 192.168.191.140</span></code></pre></td></tr></table></div></figure>


<p>了解原理后，操作起来还是比较容易的。就是每次重启都要重新配置比较烦。可以写成脚本，启动docker容器的时刻就执行下网络配置。</p>

<p>pipework还可以用来配置vlan，暂时没这个需求，并且基本的操作都类似就没有实际操作了。</p>

<p>话说，<strong> pipework还可以用来创建多网卡的容器。用docker network connect其实更简单。 </strong></p>

<h2>后记</h2>

<p>除了通过pipework来实现共享物理网络外，docker network也可以实现这个功能：</p>

<ul>
<li><a href="https://stackoverflow.com/questions/35742807/docker-1-10-containers-ip-in-lan/35799206#35799206">Docker 1.10 container&rsquo;s IP in LAN</a></li>
<li><p><a href="https://gist.github.com/dreamcat4/bc202ae175b367bcbe693da7a52851af">using bridge driver and brctrl.md</a> 感觉原理也类似pipework，就是那一堆的netns让 docker network + docker run &ndash;net 实现了而已。</p></li>
<li><p>建立并配置Bridge：</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#中间会导致网络断掉，一条命令搞定才行
</span><span class='line'>docker network create --gateway=192.168.191.141 --subnet 192.168.191.0/24 --aux-address "DefaultGatewayIPv4=192.168.191.2" -o com.docker.network.bridge.name=br-home-net homenet ; \
</span><span class='line'>ip addr del 192.168.191.141/24 dev ens33 ; \
</span><span class='line'>brctl addif br-home-net ens33 
</span><span class='line'>
</span><span class='line'>#主机不上外网可以不加
</span><span class='line'>ip route add default via 192.168.191.2 ; 
</span><span class='line'>echo "nameserver 114.114.114.114" &gt;&gt;/etc/resolv.conf ; </span></code></pre></td></tr></table></div></figure>


<ul>
<li>测试 docker-net + bridge：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@kube-worker1 ~]# ip a
</span><span class='line'>...
</span><span class='line'>2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master br-home-net state UP qlen 1000
</span><span class='line'>    link/ether 00:0c:29:2e:67:4d brd ff:ff:ff:ff:ff:ff
</span><span class='line'>4: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN 
</span><span class='line'>    link/ether 02:42:44:ef:32:28 brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 172.18.0.1/16 scope global docker0
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>11: br-home-net: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP 
</span><span class='line'>    link/ether 02:42:84:97:c2:25 brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 192.168.191.141/24 scope global br-home-net
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>    inet6 fe80::42:84ff:fe97:c225/64 scope link 
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>       
</span><span class='line'>[root@kube-worker1 ~]# docker run -tid --name c200 --net homenet --ip 192.168.191.200 busybox /bin/sh 
</span><span class='line'>2579c2ddd18d23322eb1e145ad630205933dbc527b8981169ec6b125da8d8f1e
</span><span class='line'>
</span><span class='line'>[root@kube-worker1 ~]# docker exec -ti c200 sh 
</span><span class='line'>/ # ip a
</span><span class='line'>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue qlen 1
</span><span class='line'>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span><span class='line'>    inet 127.0.0.1/8 scope host lo
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>12: eth0@if13: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu 1500 qdisc noqueue 
</span><span class='line'>    link/ether 02:42:c0:a8:bf:c8 brd ff:ff:ff:ff:ff:ff
</span><span class='line'>    inet 192.168.191.200/24 scope global eth0
</span><span class='line'>       valid_lft forever preferred_lft forever
</span><span class='line'>/ # route -n
</span><span class='line'>Kernel IP routing table
</span><span class='line'>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
</span><span class='line'>0.0.0.0         192.168.191.2   0.0.0.0         UG    0      0        0 eth0
</span><span class='line'>192.168.191.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0
</span><span class='line'>/ # ping baidu.com 
</span><span class='line'>PING baidu.com (111.13.101.208): 56 data bytes
</span><span class='line'>64 bytes from 111.13.101.208: seq=0 ttl=128 time=48.225 ms
</span><span class='line'>^C
</span><span class='line'>--- baidu.com ping statistics ---
</span><span class='line'>1 packets transmitted, 1 packets received, 0% packet loss
</span><span class='line'>round-trip min/avg/max = 48.225/48.225/48.225 ms
</span><span class='line'>/ # ping 192.169.191.140
</span><span class='line'>PING 192.169.191.140 (192.169.191.140): 56 data bytes
</span><span class='line'>^C
</span><span class='line'>--- 192.169.191.140 ping statistics ---
</span><span class='line'>4 packets transmitted, 0 packets received, 100% packet loss
</span><span class='line'>/ # ping 192.168.191.140
</span><span class='line'>PING 192.168.191.140 (192.168.191.140): 56 data bytes
</span><span class='line'>64 bytes from 192.168.191.140: seq=0 ttl=64 time=2.572 ms
</span><span class='line'>64 bytes from 192.168.191.140: seq=1 ttl=64 time=1.076 ms
</span><span class='line'>^C
</span><span class='line'>--- 192.168.191.140 ping statistics ---
</span><span class='line'>2 packets transmitted, 2 packets received, 0% packet loss
</span><span class='line'>round-trip min/avg/max = 1.076/1.824/2.572 ms
</span><span class='line'>/ # ping 192.168.191.141
</span><span class='line'>PING 192.168.191.141 (192.168.191.141): 56 data bytes
</span><span class='line'>64 bytes from 192.168.191.141: seq=0 ttl=64 time=0.474 ms
</span><span class='line'>64 bytes from 192.168.191.141: seq=1 ttl=64 time=0.138 ms
</span><span class='line'>^C
</span><span class='line'>--- 192.168.191.141 ping statistics ---
</span><span class='line'>2 packets transmitted, 2 packets received, 0% packet loss
</span><span class='line'>round-trip min/avg/max = 0.138/0.306/0.474 ms
</span><span class='line'>/ # ping 192.168.191.1
</span><span class='line'>PING 192.168.191.1 (192.168.191.1): 56 data bytes
</span><span class='line'>64 bytes from 192.168.191.1: seq=0 ttl=128 time=1.068 ms
</span><span class='line'>64 bytes from 192.168.191.1: seq=1 ttl=128 time=0.603 ms
</span><span class='line'>^C
</span><span class='line'>--- 192.168.191.1 ping statistics ---
</span><span class='line'>2 packets transmitted, 2 packets received, 0% packet loss
</span><span class='line'>round-trip min/avg/max = 0.603/0.835/1.068 ms
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[STAF Start Guide]]></title>
    <link href="http://winseliu.com/blog/2017/10/06/staf-start-guide/"/>
    <updated>2017-10-06T08:07:49+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/06/staf-start-guide</id>
    <content type="html"><![CDATA[<p>STAF(Software Testing Automation Framework) 是用来构建自动化测试的框架，用来部署测试环境。包括跨平台自动化部署的各种组件：config、process、handle、fs、log、monitor、queue、var、security等各种服务，还可以轻松的扩展。机器通过STAFProc启动的端口来进行通讯（set、query等）。</p>

<blockquote><p>STAF的作用实际上就是提供了机器之间的通信通道并提供基于这个通道的基础服务。</p></blockquote>

<h2>安装</h2>

<ul>
<li><a href="http://staf.sourceforge.net/current/STAFInstall.pdf">http://staf.sourceforge.net/current/STAFInstall.pdf</a></li>
<li><a href="http://blog.csdn.net/lsj6730960/article/details/6186861">STAF的原理及使用</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/opensource/os-test-stafstax/index.html">使用 STAF/STAX 实现测试自动化和持续集成</a></li>
</ul>


<p>直接用 <a href="http://staf.sourceforge.net/getcurrent.php">InstallAnywhere（IA）</a> 的方式安装。文档介绍了整个安装过程中做的所有事情，非常非常的详细。下面针对Linux的安装配置步骤：</p>

<ul>
<li>安装配置项（选项），三种方式选一种：
  交互方式
  文件方式
  默认值</li>
<li>环境变量：使用InstallAnywhere的方式会把环境变量配置好，文档中介绍了使用的环境变量。</li>
<li>启动：shell脚本、开机启动（centos7的服务配置可以参考文档的[Fedora 15 and later]部分）</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#安装（默认值）
</span><span class='line'>./STAF3426-setup-linux-amd64-NoJVM.bin -i silent -DACCEPT_LICENSE=1
</span><span class='line'>
</span><span class='line'>#启动
</span><span class='line'>su -
</span><span class='line'>/usr/local/staf/bin/STAFProc
</span><span class='line'>或者
</span><span class='line'>./startSTAFProc.sh 
</span><span class='line'>
</span><span class='line'>#测试
</span><span class='line'>[root@cdb1 staf]# staf local ping ping
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>PONG
</span><span class='line'>[root@cdb1 staf]# staf local process start command ifconfig
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>5
</span><span class='line'>#程序运行产生的输出是在运行的机器上的！
</span><span class='line'>[root@cdb1 staf]# less nohup.out 
</span><span class='line'>
</span><span class='line'>Machine          : cdb1
</span><span class='line'>Machine nickname : cdb1
</span><span class='line'>Startup time     : 20171006-08:50:55
</span><span class='line'>
</span><span class='line'>STAFProc version 3.4.26 initialized
</span><span class='line'>ens192: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500
</span><span class='line'>        inet 192.168.193.101  netmask 255.255.192.0  broadcast 192.168.255.255
</span><span class='line'>        inet6 fe80::932a:7b98:cc20:f791  prefixlen 64  scopeid 0x20&lt;link&gt;
</span><span class='line'>        inet6 fe80::9ba3:ce9e:cc9c:477d  prefixlen 64  scopeid 0x20&lt;link&gt;
</span><span class='line'>        inet6 fe80::7d8c:b318:d441:70b2  prefixlen 64  scopeid 0x20&lt;link&gt;
</span><span class='line'>        ether 00:50:56:92:26:93  txqueuelen 1000  (Ethernet)
</span><span class='line'>        RX packets 11020400  bytes 3439058707 (3.2 GiB)
</span><span class='line'>        RX errors 0  dropped 717  overruns 0  frame 0
</span><span class='line'>        TX packets 9067587  bytes 3110097659 (2.8 GiB)
</span><span class='line'>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</span><span class='line'>
</span><span class='line'>lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536
</span><span class='line'>        inet 127.0.0.1  netmask 255.0.0.0
</span><span class='line'>        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;
</span><span class='line'>        loop  txqueuelen 1  (Local Loopback)
</span><span class='line'>        RX packets 70483  bytes 10164575 (9.6 MiB)
</span><span class='line'>        RX errors 0  dropped 0  overruns 0  frame 0
</span><span class='line'>        TX packets 70483  bytes 10164575 (9.6 MiB)
</span><span class='line'>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>#多机测试
</span><span class='line'>[root@cdb2 staf]# vi bin/STAF.cfg
</span><span class='line'>trust machine 192.168.193.101 level 5
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf cdb2 ping ping 
</span><span class='line'>[root@cdb1 staf]# staf cdb2 process start command ifconfig 
</span><span class='line'>[root@cdb2 staf]# less nohup.out 
</span><span class='line'>
</span><span class='line'>#安全退出
</span><span class='line'>STAF local SHUTDOWN SHUTDOWN
</span><span class='line'>C:\STAF\bin\STAF.exe local SHUTDOWN SHUTDOWN
</span></code></pre></td></tr></table></div></figure>


<h2>Getting Started</h2>

<p><a href="http://staf.sourceforge.net/current/STAFGS.pdf">http://staf.sourceforge.net/current/STAFGS.pdf</a></p>

<p>STAFGS 对所有的知识点都做了简单的介绍和归纳。更详细的需要看 User Guide 文档。</p>

<p>STAF is an Open Source automation framework designed around the idea of reusable components. It is intended to make it
easier to create automated testcases and workloads. STAF can help you increase the efficiency, productivity, and quality of
your testing by improving your level of automation and reuse in your individual testcases as well as your overall test
environment.</p>

<p>STAF operates in a peer-to-peer environment; in other words, there is no client-server hierarchy among machines
running STAF.</p>

<h4>Basic STAF Concepts</h4>

<p>STAF Instances
Since multiple instances of STAF can be run at the same time on the same system, a STAF Instance name is used to
specify a name for each STAF instance. You specify the instance name to be used by setting the environment variable
STAF_INSTANCE_NAME. The default instance name is &ldquo;STAF&rdquo;.</p>

<p>A basic description of each level follows</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Level 0 - No access
</span><span class='line'>Level 1 - Restricted access. Only PING and helps available.
</span><span class='line'>Level 2 - Limited access. Only query/view facilities available.
</span><span class='line'>Level 3 - Standard access. Non-destructive updates allowed, e.g., logging.
</span><span class='line'>Level 4 - Advanced access. Update abilities, e.g., copying files, deleting log files.
</span><span class='line'>Level 5 - All access, e.g., SHUTDOWN, Process invocation, Trust definition manipulation</span></code></pre></td></tr></table></div></figure>


<p>STAF requests submitted from the command line are generally used to query information from STAF services.</p>

<h4>STAF Commands</h4>

<p>You can also start STAFProc by simply typing STAFProc at a command prompt
window. ( /usr/local/staf/bin is in your PATH )</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>STAF  &lt;Endpoint&gt;/[&lt;Interface&gt;://]&lt;System Identifier&gt;[@&lt;Port&gt;]  &lt;Service&gt; &lt;Request&gt;
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local ping ping 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>PONG
</span><span class='line'>#没运行
</span><span class='line'>[root@cdb1 staf]# staf cdb2 ping ping 
</span><span class='line'>Error submitting request, RC: 16
</span><span class='line'>Additional info
</span><span class='line'>---------------
</span><span class='line'>STAFConnectionProviderConnect: Error performing test read on connected endpoint: recv() RC=111: 22, Endpoint: ssl://cdb2
</span><span class='line'>[root@cdb1 staf]# staf cdb2 ping ping 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>PONG
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local service help 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>*** SERVICE Service Help ***
</span><span class='line'>
</span><span class='line'>LIST    [ SERVICES | SERVICELOADERS | AUTHENTICATORS |
</span><span class='line'>          REQUESTS &lt;[PENDING] [COMPLETE] [LONG]&gt; | [SUMMARY] ]
</span><span class='line'>QUERY   SERVICE &lt;Service Name&gt; | SERVICELOADER &lt;ServiceLoader Name&gt; |
</span><span class='line'>        AUTHENTICATOR &lt;Authenticator Name&gt; | REQUEST &lt;Request Number&gt;
</span><span class='line'>ADD     SERVICE &lt;Service Name&gt; LIBRARY &lt;Library Name&gt;
</span><span class='line'>        [EXECUTE &lt;Executable&gt;] [OPTION &lt;Name[=Value]&gt;]...
</span><span class='line'>        [PARMS &lt;Parameters&gt;]
</span><span class='line'>REMOVE  SERVICE &lt;Service Name&gt;
</span><span class='line'>FREE    REQUEST &lt;Request Number&gt; [FORCE]
</span><span class='line'>HELP
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local shutdown help 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>*** SHUTDOWN Service Help ***
</span><span class='line'>
</span><span class='line'>SHUTDOWN
</span><span class='line'>
</span><span class='line'>NOTIFY REGISTER   [MACHINE &lt;Machine&gt;] [HANDLE &lt;Handle&gt; | NAME &lt;Name&gt;]
</span><span class='line'>                  [PRIORITY &lt;Priority&gt;]
</span><span class='line'>NOTIFY UNREGISTER [MACHINE &lt;Machine&gt;] [HANDLE &lt;Handle&gt; | NAME &lt;Name&gt;]
</span><span class='line'>                  [PRIORITY &lt;Priority&gt;]
</span><span class='line'>NOTIFY LIST
</span><span class='line'>
</span><span class='line'>HELP
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt;&gt; The information returned by Help show us the options we can place after "STAF local shutdown ....." 
</span><span class='line'>in command requests
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local service list 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>Name      Library    Executable
</span><span class='line'>--------- ---------- ----------
</span><span class='line'>CONFIG    &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>DELAY     &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>DIAG      &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>ECHO      &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>FS        &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>HANDLE    &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>HELP      &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>LIFECYCLE &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>MISC      &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>PING      &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>PROCESS   &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>QUEUE     &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>SEM       &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>SERVICE   &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>SHUTDOWN  &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>TRACE     &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>TRUST     &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>VAR       &lt;Internal&gt; &lt;None&gt;    
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local var list 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>STAF/Config/BootDrive             : /
</span><span class='line'>STAF/Config/CodePage              : UTF-8
</span><span class='line'>STAF/Config/ConfigFile            : /usr/local/staf/bin/STAF.cfg
</span><span class='line'>STAF/Config/DefaultAuthenticator  : none
</span><span class='line'>STAF/Config/DefaultInterface      : ssl
</span><span class='line'>STAF/Config/InstanceName          : STAF
</span><span class='line'>STAF/Config/Machine               : cdb1
</span><span class='line'>STAF/Config/MachineNickname       : cdb1
</span><span class='line'>STAF/Config/Mem/Physical/Bytes    : 3974971392
</span><span class='line'>STAF/Config/Mem/Physical/KB       : 3881808
</span><span class='line'>STAF/Config/Mem/Physical/MB       : 3790
</span><span class='line'>STAF/Config/OS/MajorVersion       : 3.10.0-693.el7.x86_64
</span><span class='line'>STAF/Config/OS/MinorVersion       : #1 SMP Tue Aug 22 21:09:27 UTC 2017
</span><span class='line'>STAF/Config/OS/Name               : Linux
</span><span class='line'>STAF/Config/OS/Revision           : x86_64
</span><span class='line'>STAF/Config/Processor/NumAvail    : 4
</span><span class='line'>STAF/Config/Sep/Command           : ;
</span><span class='line'>STAF/Config/Sep/File              : /
</span><span class='line'>STAF/Config/Sep/Line              : 
</span><span class='line'>
</span><span class='line'>STAF/Config/Sep/Path              : :
</span><span class='line'>STAF/Config/STAFRoot              : /usr/local/staf
</span><span class='line'>STAF/Config/StartupTime           : 20171006-10:33:42
</span><span class='line'>STAF/DataDir                      : /usr/local/staf/data/STAF
</span><span class='line'>STAF/Env/_                        : /usr/bin/nohup
</span><span class='line'>STAF/Env/CLASSPATH                : /usr/local/staf/lib/JSTAF.jar:/usr/local/staf/samples/demo/STAFDemo.jar:/usr/local/staf/samples/demo/STAFDemo.jar:/usr/local/staf/lib/JSTAF.jar:
</span><span class='line'>STAF/Env/HISTCONTROL              : ignoredups
</span><span class='line'>STAF/Env/HISTSIZE                 : 1000
</span><span class='line'>STAF/Env/HOME                     : /root
</span><span class='line'>STAF/Env/HOSTNAME                 : cdb1
</span><span class='line'>STAF/Env/JAVA_HOME                : /usr/local/jdk
</span><span class='line'>STAF/Env/LANG                     : en_US.UTF-8
</span><span class='line'>STAF/Env/LD_LIBRARY_PATH          : /usr/local/staf/lib:/usr/local/staf/lib:
</span><span class='line'>STAF/Env/LESSOPEN                 : ||/usr/bin/lesspipe.sh %s
</span><span class='line'>STAF/Env/LOGNAME                  : root
</span><span class='line'>STAF/Env/LS_COLORS                : rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:
</span><span class='line'>STAF/Env/MAIL                     : /var/spool/mail/root
</span><span class='line'>STAF/Env/PATH                     : /usr/local/staf/bin:/usr/local/staf/bin:/usr/local/jdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
</span><span class='line'>STAF/Env/PWD                      : /usr/local/staf
</span><span class='line'>STAF/Env/SELINUX_LEVEL_REQUESTED  : 
</span><span class='line'>STAF/Env/SELINUX_ROLE_REQUESTED   : 
</span><span class='line'>STAF/Env/SELINUX_USE_CURRENT_RANGE: 
</span><span class='line'>STAF/Env/SHELL                    : /bin/bash
</span><span class='line'>STAF/Env/SHLVL                    : 2
</span><span class='line'>STAF/Env/SSH_AUTH_SOCK            : /tmp/ssh-yEmD907zdB/agent.28259
</span><span class='line'>STAF/Env/SSH_CLIENT               : 192.168.193.10 34774 22
</span><span class='line'>STAF/Env/SSH_CONNECTION           : 192.168.193.10 34774 192.168.193.101 22
</span><span class='line'>STAF/Env/SSH_TTY                  : /dev/pts/2
</span><span class='line'>STAF/Env/STAF_INSTANCE_NAME       : STAF
</span><span class='line'>STAF/Env/STAFCONVDIR              : /usr/local/staf/codepage
</span><span class='line'>STAF/Env/TERM                     : vt100
</span><span class='line'>STAF/Env/USER                     : root
</span><span class='line'>STAF/Env/XDG_DATA_DIRS            : /root/.local/share/flatpak/exports/share/:/var/lib/flatpak/exports/share/:/usr/local/share/:/usr/share/
</span><span class='line'>STAF/Env/XDG_RUNTIME_DIR          : /run/user/0
</span><span class='line'>STAF/Env/XDG_SESSION_ID           : 2080
</span><span class='line'>STAF/Version                      : 3.4.26
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt;&gt; STAF predefines many useful variables, including information about the machine's Operating System 
</span><span class='line'>and File/Line/Path separators. 
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local var resolve system string {STAF/Config/Sep/File}
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>/
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local handle list handles
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>Handle Handle Name                     State      Last Used Date-Time
</span><span class='line'>------ ------------------------------- ---------- -------------------
</span><span class='line'>1      STAF_Process                    InProcess  20171006-10:33:42  
</span><span class='line'>2      STAF/Service/STAFServiceLoader1 InProcess  20171006-10:33:42  
</span><span class='line'>11     STAF/Client                     Registered 20171006-10:41:39  
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt;&gt; handle 1 is assigned to STAFProc. Each of the STAF/Client requests represent each 
</span><span class='line'>of the three "STAF local handle list handles" commands you submitted. Note that each request is assigned a new handle
</span><span class='line'>number, and that the previous handles have been deleted 
</span></code></pre></td></tr></table></div></figure>


<h4>Configuring STAF</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cdb1 staf]# staf local log log  machine logname log1 level info message test-message
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local log list machines
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>cdb1
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local log query machine cdb1 logname log1 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>Date-Time         Level Message     
</span><span class='line'>----------------- ----- ------------
</span><span class='line'>20171006-10:54:33 Info  test-message
</span><span class='line'>
</span><span class='line'>#配置
</span><span class='line'>[root@cdb1 staf]# echo "MACHINENICKNAME cdb1.dev" &gt;&gt;bin/STAF.cfg 
</span><span class='line'>[root@cdb1 staf]# staf local shutdown shutdown 
</span><span class='line'>[root@cdb1 staf]# ./startSTAFProc.sh 
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local log log  machine logname log3 level info message test-message
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local log list machines
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>cdb1
</span><span class='line'>cdb1.dev
</span><span class='line'>[root@cdb1 staf]# staf local log query machine cdb1.dev logname log3
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>Date-Time         Level Message     
</span><span class='line'>----------------- ----- ------------
</span><span class='line'>20171006-10:57:59 Info  test-message
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt;&gt; This primarily effects the data stored by
</span><span class='line'>services such as the Log and Monitor services, which store data based on the machine from which it came by using the
</span><span class='line'>STAF/Config/MachineNickname system variable as part of the directory path when creating logs and monitor data. By
</span><span class='line'>allowing the STAF/Config/MachineNickname system variable to be overridden, it allows you to better manage your
</span><span class='line'>data.
</span><span class='line'>Note that the machine nickname is not used to communicate with other systems and does not have any effect on trust. 
</span><span class='line'>
</span><span class='line'>#配置
</span><span class='line'>echo "SET DATADIR /data" &gt;&gt;bin/STAF.cfg
</span><span class='line'>...
</span><span class='line'>SET SYSTEM VAR Test/TestABC=websphere
</span><span class='line'>SET SYSTEM VAR Test/TestXYZ=150
</span><span class='line'>
</span><span class='line'>restart STAFProc and from a command prompt, try the STAF local var list command
</span><span class='line'>
</span><span class='line'>TRUST LEVEL 2 DEFAULT
</span><span class='line'>TRUST LEVEL 5 MACHINE 192.168.193.*
</span><span class='line'>TRUST LEVEL 4 MACHINE tcp://9.3.41.*
</span><span class='line'>TRUST LEVEL 5 MACHINE tcP://9.41.53.147
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local trust list 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>Type    Entry             Trust Level
</span><span class='line'>------- ----------------- -----------
</span><span class='line'>Default &lt;None&gt;            2          
</span><span class='line'>Machine *://192.168.193.* 5          
</span><span class='line'>Machine local://local     5          
</span><span class='line'>Machine tcp://9.3.41.*    4          
</span><span class='line'>Machine tcP://9.41.53.147 5          
</span></code></pre></td></tr></table></div></figure>


<h4>Using the Help Service</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cdb1 staf]# staf local help help 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>*** HELP Service Help ***
</span><span class='line'>
</span><span class='line'>REGISTER   SERVICE &lt;Name&gt; ERROR &lt;Number&gt; INFO &lt;String&gt; DESCRIPTION &lt;String&gt;
</span><span class='line'>
</span><span class='line'>UNREGISTER SERVICE &lt;Name&gt; ERROR &lt;Number&gt;
</span><span class='line'>
</span><span class='line'>[SERVICE &lt;Name&gt;] ERROR &lt;Number&gt;
</span><span class='line'>
</span><span class='line'>LIST SERVICES | [SERVICE &lt;Name&gt;] ERRORS
</span><span class='line'>
</span><span class='line'>HELP
</span><span class='line'>
</span><span class='line'>#错误码详情
</span><span class='line'>[root@cdb1 staf]# staf local error list 
</span><span class='line'>Error submitting request, RC: 2
</span><span class='line'>Additional info
</span><span class='line'>---------------
</span><span class='line'>error
</span><span class='line'>[root@cdb1 staf]# staf local help error 2
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>Description: Unknown service
</span><span class='line'>Details    : You have tried to submit a request to a service that is unknown to STAFProc.  Verify that you have correctly registered the service.
</span></code></pre></td></tr></table></div></figure>


<h4>Registering STAF Services</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://staf.sourceforge.net/getservices.php 下载EventV315.tar
</span><span class='line'>[root@cdb1 staf]# tar xf EventV315.tar 
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# vi bin/STAF.cfg 
</span><span class='line'>...
</span><span class='line'>service Event library JSTAF execute /usr/local/staf/event/STAFEvent.jar
</span><span class='line'>
</span><span class='line'>[root@cdb1 staf]# staf local shutdown shutdown 
</span><span class='line'>[root@cdb1 staf]# ./startSTAFProc.sh 
</span><span class='line'>[root@cdb1 staf]# staf local service list 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>Name      Library    Executable                         
</span><span class='line'>--------- ---------- -----------------------------------
</span><span class='line'>...
</span><span class='line'>EVENT     JSTAF      /usr/local/staf/event/STAFEvent.jar
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>#帮助文档： http://staf.sourceforge.net/current/event.htm
</span></code></pre></td></tr></table></div></figure>


<h4>STAF Demo（<strong> 前提得安装上面的EVENT，并且STAFProc也得在图形界面Terminal启动！！ </strong>）</h4>

<ol>
<li>each machine must give the other machine a TRUST level of 5</li>
<li>samples\demo\STAFDemo.jar在CLASSPATH里面.</li>
<li>java STAFDemoController是图形界面程序！！</li>
<li>弹出的窗口【An Arbitrary Process:Handle X】的标题（界面没看到的话，可能是被遮住了）。</li>
</ol>


<p><strong> However, the STAFProcess window should be displayed on your remote machine。</strong></p>

<p>具体的代码解析查阅【8.2. STAF Demo Code - Leveraging STAF】这个章节。</p>

<h2>User&rsquo;s Guide</h2>

<ul>
<li><a href="http://staf.sourceforge.net/current/STAFUG.htm">http://staf.sourceforge.net/current/STAFUG.htm</a></li>
<li><a href="http://staf.sourceforge.net/current/STAFUG.htm#HDRJVMCFG">4.4.2 JSTAF service proxy library</a></li>
</ul>


<h2>STAX Getting Started</h2>

<p><a href="http://staf.sourceforge.net/current/staxgs.pdf">http://staf.sourceforge.net/current/staxgs.pdf</a></p>

<p>Verify that the CLASSPATH environment variable contains the JSTAF.jar file. JSTAF.jar contains the STAF Java APIs
to communicate with STAF from Java programs and is required to register STAF services written in Java.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cdb1 staf]# tar xf ~/STAXV3517.tar 
</span><span class='line'>[root@cdb1 staf]# vi bin/STAF.cfg 
</span><span class='line'>...
</span><span class='line'>SERVICE STAX LIBRARY JSTAF EXECUTE {STAF/Config/STAFRoot}/stax/STAX.jar OPTION J2=-Xmx2048m
</span><span class='line'>SERVICE EVENT LIBRARY JSTAF EXECUTE {STAF/Config/STAFRoot}/stax/STAFEvent.jar
</span><span class='line'>SET MAXQUEUESIZE 10000
</span></code></pre></td></tr></table></div></figure>


<p>If you do not want to include the JVM bin directory in your PATH, then you can use the
&ldquo;OPTION JVM=xxx&rdquo; to specify which Java executable to use for the services.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cdb1 staf]# staf local stax version 
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>3.5.17
</span><span class='line'>[root@cdb1 staf]# staf local stax version jython
</span><span class='line'>Response
</span><span class='line'>--------
</span><span class='line'>2.5.2-staf-v1
</span><span class='line'>[root@cdb1 staf]# 
</span></code></pre></td></tr></table></div></figure>


<p>Errors that occur when running the STAX service will be stored in its JVM log. This log is data/STAF/lang/java/jvm/STAFJVM1/JVMLog.1 in
your root STAF directory</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source /etc/profile
</span><span class='line'>cd stax
</span><span class='line'>java -jar STAXMon.jar
</span><span class='line'>
</span><span class='line'>&gt;&gt;&gt;&gt; You use script elements within your STAX jobs to define Python variables and execute Python code. However, also note that in most cases, all of
</span><span class='line'>the element content and element attributes in your STAX jobs will also be evaluated as Python code. 
</span><span class='line'>
</span><span class='line'>&lt;script&gt;testName = 'CoolTest1'&lt;/script&gt;
</span><span class='line'>&lt;testcase name="testName"&gt;
</span><span class='line'>&lt;testcase name="'%s Part A' % testName"&gt;
</span><span class='line'>&lt;testcase name="'%s Part A on machine %s' % (testName, machineName)"&gt;
</span><span class='line'>
</span><span class='line'>#DoesNothing.xml 
</span><span class='line'>&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
</span><span class='line'>&lt;!DOCTYPE stax SYSTEM "stax.dtd"&gt;
</span><span class='line'>
</span><span class='line'>&lt;stax&gt;
</span><span class='line'>
</span><span class='line'>  &lt;defaultcall function="main"/&gt;
</span><span class='line'>
</span><span class='line'>  &lt;function name="main"&gt;
</span><span class='line'>    &lt;nop/&gt;
</span><span class='line'>  &lt;/function&gt;
</span><span class='line'>
</span><span class='line'>&lt;/stax&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>#generate dtd for xml editor
</span><span class='line'>set STAF_QUIET_MODE=1 (or if on Unix: export STAF_QUIET_MODE=1)
</span><span class='line'>STAF local STAX GET DTD &gt; stax.dtd
</span><span class='line'>set STAF_QUIET_MODE= (or if on Unix: unset STAF_QUIET_MODE)
</span><span class='line'>
</span><span class='line'>#RunNotepadProcess.xml
</span><span class='line'>&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
</span><span class='line'>&lt;!DOCTYPE stax SYSTEM "stax.dtd"&gt;
</span><span class='line'>
</span><span class='line'>&lt;stax&gt;
</span><span class='line'>
</span><span class='line'>  &lt;defaultcall function="main"/&gt;
</span><span class='line'>
</span><span class='line'>  &lt;function name="main"&gt;
</span><span class='line'>
</span><span class='line'>    &lt;process&gt;
</span><span class='line'>      &lt;location&gt;'local'&lt;/location&gt;
</span><span class='line'>      &lt;command&gt;'notepad'&lt;/command&gt;
</span><span class='line'>    &lt;/process&gt;
</span><span class='line'>
</span><span class='line'>  &lt;/function&gt;
</span><span class='line'>
</span><span class='line'>&lt;/stax&gt;</span></code></pre></td></tr></table></div></figure>


<p>结束任务，打开的程序也会被kill掉！！！</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[连接树莓派]]></title>
    <link href="http://winseliu.com/blog/2017/10/05/respberrypi-connected-via/"/>
    <updated>2017-10-05T17:04:24+08:00</updated>
    <id>http://winseliu.com/blog/2017/10/05/respberrypi-connected-via</id>
    <content type="html"><![CDATA[<p>启动树莓派后，总得连上去操作才能告诉它做事情。最常用的就是通过SSH远程控制，前提是能连上网络、知道树莓派获取到的地址。下来把了解到的，以及自实践的连接方式做下小结。</p>

<h4>通过路由器</h4>

<p>网线、无线连接后，通过 <strong> 显示器 </strong> 、<strong> 路由管理界面 </strong> 获取树莓派的地址（在管理web界面有明确的respberrypi的字样）。</p>

<h4>通过USB</h4>

<ol>
<li>USB转COM</li>
</ol>


<p>USB连接电脑，连树莓派的GPIO对应的针。然后通过COM口协议与树莓派通信</p>

<ol>
<li>USB共享网络</li>
</ol>


<p>使用手机的USB共享网络。</p>

<p>USB连树莓派，Micro口连手机。手机上打开USB网络共享，树莓派中会建立一个usb0的网卡。这样就能通过这个网卡进行上网了（网上也有说同时打开wifi热点，没啥用啊，usb和wlan是两个不同的网段）。</p>

<p>手机上安装一个ssh的工具（juicessh等），先连上本地的shell，然后执行 <code>cat /proc/net/arp</code> 或者 <code>busybox arp -a</code> 查看与 rndis0 同一个网段的ip（一般就是连接到树莓派的地址了）。</p>

<p>在手机上安装一个IP扫描软件应该也行，但 <strong> 通过ARP是最简单最高效的方式了。</strong></p>

<p><img src="http://winseliu.com/images/blogs/raspberrypi-phone-usb-network.png" alt="" /></p>

<p>注意：busybox感觉像一个工具集，包含了很多linux的命令，并且有些命令参数比系统提供的更全，如 <code>tar -j</code> 。可以用 <code>busybox --help</code> 查看帮助。</p>

<h4>网线互联</h4>

<p>一跟网线直接连电脑和树莓派。</p>

<p>互传数据应该有用。当前感觉，这种方式没啥优势，有点鸡肋。上网比较麻烦：手动设置IP、域名解析、还要在电脑上面搞网卡绑定。</p>

<p>下面自动获取的方法（没试，应该是可以的吧）：</p>

<blockquote><p>网线直接把树莓派与电脑连接起来，电脑需要连wifi（如果不连接无法使用网络共享让树莓派获取到ip地址），在 设置->网络->wlan->网络与共享中心->wlan->属性->共享->允许​其它用户通过它来连接->确定。</p>

<p>稍等片刻树莓派应该就获取到一个ip地址了，此时打开命令提示符（我用的Xshell），运行arp -a命令，应该就可以看到​一个局域网段，如192.168.xx.1，通常以192.168开头，最后一位是1的那个接口，下面多出来的一条动态记录就是树莓派的。</p></blockquote>

<h2>参考：</h2>

<ul>
<li><a href="https://jingyan.baidu.com/article/676629977483b154d51b848e.html">使用Android手机作为树莓派的屏幕</a></li>
<li><a href="http://www.jianshu.com/p/f2e0a02c01d9">http://www.jianshu.com/p/f2e0a02c01d9</a></li>
<li><a href="http://blog.163.com/elliot_alderson/blog/static/26832905920161122104246919/">http://blog.163.com/elliot_alderson/blog/static/26832905920161122104246919/</a> 添加过ifcfg-usb0，但需要重启网卡才是设置IP地址，麻烦。</li>
<li><a href="http://blog.163.com/elliot_alderson/blog/static/268329059201611925543687/">树莓派安装kali linux （系统安装和初步配置）</a> 安装、gparted扩容</li>
</ul>


<h2>键盘输入、手机显示</h2>

<p>前提：安装screen。</p>

<ul>
<li>连接USB键盘，启动树莓派。</li>
<li>键盘盲打登录（输入：root回车centos回车screen -S pi）。</li>
<li>然后手机上ssh连接，进入pi的会话（screen -x pi）</li>
</ul>


<p>这样就能用键盘敲、手机看了！觉得挺好玩的。</p>

<h2>重新折腾树莓派</h2>

<ul>
<li>安装centos7: 密码root/centos</li>
</ul>


<p><a href="http://www.21ic.com/evm/trick/201605/675705.htm">http://www.21ic.com/evm/trick/201605/675705.htm</a></p>

<ul>
<li>扩大容量：</li>
</ul>


<p><a href="http://blog.csdn.net/qq_20480611/article/details/48657827">http://blog.csdn.net/qq_20480611/article/details/48657827</a></p>

<p>fdisk删掉分区然后重新加，重启后执行resize2fs</p>

<ul>
<li>安装wiringpi</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://git.drogon.net/wiringPi
</span><span class='line'>cd wiringPi
</span><span class='line'>./build
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>epel</li>
</ul>


<p><a href="https://hobo.house/2016/03/03/installing-centos-on-the-raspberry-pi-2/">https://hobo.house/2016/03/03/installing-centos-on-the-raspberry-pi-2/</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat &gt; /etc/yum.repos.d/epel-unsigned.repo &lt;&lt; EOF
</span><span class='line'>[epel]
</span><span class='line'>name=Epel rebuild for armhfp
</span><span class='line'>baseurl=https://armv7.dev.centos.org/repodir/epel-pass-1/
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'>
</span><span class='line'>EOF
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[两台主机的docker通过route互联互通]]></title>
    <link href="http://winseliu.com/blog/2017/09/20/docker-manual-make-connect-each-other/"/>
    <updated>2017-09-20T18:34:52+08:00</updated>
    <id>http://winseliu.com/blog/2017/09/20/docker-manual-make-connect-each-other</id>
    <content type="html"><![CDATA[<p>前面一直用k8s的flannel来建立主机间docker容器的互联，但是当仅有两台机器用来做测试的时刻，安装一个flannel也是挺纠结的：麻烦、还有未知的问题，起一个服务在那里总会有那么些担忧。</p>

<p>其实可以直接通过建立路由来实现两台机器间容器的互联互通：<a href="http://www.pangxie.space/docker/139">Docker多台宿主机间的容器互联-centos7（直接路由）</a></p>

<p>两台主机（centos7/docker-1.12.6）：</p>

<ul>
<li>192.168.191.140 kube-master</li>
<li>192.168.191.141 kube-worker1</li>
</ul>


<h2>安装/配置docker</h2>

<p>这里不多讲了，参考 <a href="http://winseliu.com/blog/2017/07/30/kubeadm-install-kubenetes-on-centos7/">Kubeadm部署kubernetes</a> 进行docker的安装。</p>

<h2>建立新网卡，修改docker配置使用新网卡</h2>

<ul>
<li>安装/更新依赖</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install net-tools bridge-utils -y</span></code></pre></td></tr></table></div></figure>


<ul>
<li>关防火墙、关selinux</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setenforce 0
</span><span class='line'>
</span><span class='line'>vi /etc/selinux/config
</span><span class='line'>SELINUX=disabled
</span><span class='line'>
</span><span class='line'>systemctl stop firewalld
</span><span class='line'>systemctl disable firewalld</span></code></pre></td></tr></table></div></figure>


<ul>
<li>设置ip转发</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 1 &gt; /proc/sys/net/ipv4/ip_forward
</span><span class='line'>
</span><span class='line'>vi /etc/sysctl.conf
</span><span class='line'>net.ipv4.ip_forward = 1  </span></code></pre></td></tr></table></div></figure>


<ul>
<li>删docker0，建kbr0</li>
</ul>


<p>先停docker！先停docker！先停docker！（好像docker会缓冲bridge的ip）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service docker stop
</span><span class='line'>brctl addbr kbr0
</span><span class='line'>ip link set dev docker0 down
</span><span class='line'>ip link del dev docker0</span></code></pre></td></tr></table></div></figure>


<p>下面的配置，两台机不同，如下：</p>

<table>
<thead>
<tr>
<th style="text-align:left;"> 192.168.191.140 kube-master                   </th>
<th style="text-align:left;"> 192.168.191.141 kube-worker1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> vi /etc/sysconfig/network-scripts/ifcfg-kbr0</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> DEVICE=kbr0                                   </td>
<td style="text-align:left;"> DEVICE=kbr0</td>
</tr>
<tr>
<td style="text-align:left;"> ONBOOT=yes                                    </td>
<td style="text-align:left;"> ONBOOT=yes</td>
</tr>
<tr>
<td style="text-align:left;"> BOOTPROTO=static                              </td>
<td style="text-align:left;"> BOOTPROTO=static</td>
</tr>
<tr>
<td style="text-align:left;"> IPADDR=172.17.3.1                             </td>
<td style="text-align:left;"> IPADDR=172.17.4.1</td>
</tr>
<tr>
<td style="text-align:left;"> NETMASK=255.255.255.0                         </td>
<td style="text-align:left;"> NETMASK=255.255.255.0</td>
</tr>
<tr>
<td style="text-align:left;"> GATEWAY=172.17.3.0                            </td>
<td style="text-align:left;"> GATEWAY=172.17.4.0</td>
</tr>
<tr>
<td style="text-align:left;"> USERCTL=no                                    </td>
<td style="text-align:left;"> USERCTL=no</td>
</tr>
<tr>
<td style="text-align:left;"> TYPE=Bridge                                   </td>
<td style="text-align:left;"> TYPE=Bridge</td>
</tr>
<tr>
<td style="text-align:left;"> IPV6INIT=no                                   </td>
<td style="text-align:left;"> IPV6INIT=no</td>
</tr>
<tr>
<td style="text-align:left;">&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</td>
<td style="text-align:left;">&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</td>
</tr>
<tr>
<td style="text-align:left;"> vi /etc/sysconfig/network-scripts/route-ens33 （ip对应的网卡名称）</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> 172.17.4.0/24 via 192.168.191.141 dev ens33   </td>
<td style="text-align:left;"> 172.17.3.0/24 via 192.168.191.140 dev ens33</td>
</tr>
<tr>
<td style="text-align:left;">&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</td>
<td style="text-align:left;">&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</td>
</tr>
</tbody>
</table>


<p>参考： <a href="https://www.centos.org/docs/5/html/5.2/Deployment_Guide/s1-networkscripts-static-routes.html">Configuring Static Routes</a></p>

<ul>
<li>修改docker配置</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /usr/lib/systemd/system/docker.service     
</span><span class='line'>ExecStart=/usr/bin/dockerd --bridge=kbr0 
</span><span class='line'>
</span><span class='line'>systemctl daemon-reload </span></code></pre></td></tr></table></div></figure>


<ul>
<li>重新启动</li>
</ul>


<p>先起网卡！先起网卡！先起网卡！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service network restart
</span><span class='line'>
</span><span class='line'>systemctl start docker</span></code></pre></td></tr></table></div></figure>


<h2>最终效果</h2>

<table>
<thead>
<tr>
<th style="text-align:left;"> 192.168.191.140 kube-master                                                   </th>
<th style="text-align:left;"> 192.168.191.141 kube-worker1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> [root@kube-master ~]# ifconfig                                                </td>
<td style="text-align:left;"> [root@kube-worker1 ~]# ifconfig</td>
</tr>
<tr>
<td style="text-align:left;"> ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500                   </td>
<td style="text-align:left;"> ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500</td>
</tr>
<tr>
<td style="text-align:left;">         inet 192.168.191.140  netmask 255.255.255.0  broadcast 192.168.191.255</td>
<td style="text-align:left;">         inet 192.168.191.141  netmask 255.255.255.0  broadcast 192.168.191.255</td>
</tr>
<tr>
<td style="text-align:left;">         inet6 fe80::1186:2fe5:9ee5:8790  prefixlen 64  scopeid 0x20<link>     </td>
<td style="text-align:left;">         inet6 fe80::3995:4490:e2e7:1d0f  prefixlen 64  scopeid 0x20<link></td>
</tr>
<tr>
<td style="text-align:left;">         ether 00:0c:29:40:2d:15  txqueuelen 1000  (Ethernet)                  </td>
<td style="text-align:left;">         ether 00:0c:29:2e:67:4d  txqueuelen 1000  (Ethernet)</td>
</tr>
<tr>
<td style="text-align:left;">         RX packets 18010  bytes 10754845 (10.2 MiB)                           </td>
<td style="text-align:left;">         RX packets 19871  bytes 12247126 (11.6 MiB)</td>
</tr>
<tr>
<td style="text-align:left;">         RX errors 0  dropped 0  overruns 0  frame 0                           </td>
<td style="text-align:left;">         RX errors 0  dropped 0  overruns 0  frame 0</td>
</tr>
<tr>
<td style="text-align:left;">         TX packets 4797  bytes 475332 (464.1 KiB)                             </td>
<td style="text-align:left;">         TX packets 5647  bytes 561624 (548.4 KiB)</td>
</tr>
<tr>
<td style="text-align:left;">         TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0            </td>
<td style="text-align:left;">         TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</td>
</tr>
<tr>
<td style="text-align:left;">                                                                               </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> kbr1: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500                            </td>
<td style="text-align:left;"> kbr0: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500</td>
</tr>
<tr>
<td style="text-align:left;">         inet 172.17.3.1  netmask 255.255.255.0  broadcast 172.17.3.255        </td>
<td style="text-align:left;">         inet 172.17.4.1  netmask 255.255.255.0  broadcast 172.17.4.255</td>
</tr>
<tr>
<td style="text-align:left;">         ether 00:00:00:00:00:00  txqueuelen 1000  (Ethernet)                  </td>
<td style="text-align:left;">         ether 00:00:00:00:00:00  txqueuelen 1000  (Ethernet)</td>
</tr>
<tr>
<td style="text-align:left;">         RX packets 179  bytes 13932 (13.6 KiB)                                </td>
<td style="text-align:left;">         RX packets 139  bytes 10492 (10.2 KiB)</td>
</tr>
<tr>
<td style="text-align:left;">         RX errors 0  dropped 0  overruns 0  frame 0                           </td>
<td style="text-align:left;">         RX errors 0  dropped 0  overruns 0  frame 0</td>
</tr>
<tr>
<td style="text-align:left;">         TX packets 43  bytes 3894 (3.8 KiB)                                   </td>
<td style="text-align:left;">         TX packets 36  bytes 3004 (2.9 KiB)</td>
</tr>
<tr>
<td style="text-align:left;">         TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0            </td>
<td style="text-align:left;">         TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</td>
</tr>
<tr>
<td style="text-align:left;">                                                                               </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> lo: flags=73&lt;UP,LOOPBACK,RUNNING>  mtu 65536                                  </td>
<td style="text-align:left;"> lo: flags=73&lt;UP,LOOPBACK,RUNNING>  mtu 65536</td>
</tr>
<tr>
<td style="text-align:left;">         inet 127.0.0.1  netmask 255.0.0.0                                     </td>
<td style="text-align:left;">         inet 127.0.0.1  netmask 255.0.0.0</td>
</tr>
<tr>
<td style="text-align:left;">         inet6 ::1  prefixlen 128  scopeid 0x10<host>                          </td>
<td style="text-align:left;">         inet6 ::1  prefixlen 128  scopeid 0x10<host></td>
</tr>
<tr>
<td style="text-align:left;">         loop  txqueuelen 1  (Local Loopback)                                  </td>
<td style="text-align:left;">         loop  txqueuelen 1  (Local Loopback)</td>
</tr>
<tr>
<td style="text-align:left;">         RX packets 140  bytes 11644 (11.3 KiB)                                </td>
<td style="text-align:left;">         RX packets 215  bytes 18260 (17.8 KiB)</td>
</tr>
<tr>
<td style="text-align:left;">         RX errors 0  dropped 0  overruns 0  frame 0                           </td>
<td style="text-align:left;">         RX errors 0  dropped 0  overruns 0  frame 0</td>
</tr>
<tr>
<td style="text-align:left;">         TX packets 140  bytes 11644 (11.3 KiB)                                </td>
<td style="text-align:left;">         TX packets 215  bytes 18260 (17.8 KiB)</td>
</tr>
<tr>
<td style="text-align:left;">         TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0            </td>
<td style="text-align:left;">         TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</td>
</tr>
<tr>
<td style="text-align:left;">                                                                               </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> [root@kube-master ~]# route -n                                                </td>
<td style="text-align:left;"> [root@kube-worker1 ~]# route -n</td>
</tr>
<tr>
<td style="text-align:left;"> Kernel IP routing table                                                       </td>
<td style="text-align:left;"> Kernel IP routing table</td>
</tr>
<tr>
<td style="text-align:left;"> Destination     Gateway         Genmask         Flags Metric Ref    Use Iface </td>
<td style="text-align:left;"> Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</td>
</tr>
<tr>
<td style="text-align:left;"> 0.0.0.0         192.168.191.2   0.0.0.0         UG    100    0        0 ens33 </td>
<td style="text-align:left;"> 0.0.0.0         192.168.191.2   0.0.0.0         UG    100    0        0 ens33</td>
</tr>
<tr>
<td style="text-align:left;"> 172.17.3.0      0.0.0.0         255.255.255.0   U     427    0        0 kbr1  </td>
<td style="text-align:left;"> 172.17.3.0      192.168.191.140 255.255.255.0   UG    100    0        0 ens33</td>
</tr>
<tr>
<td style="text-align:left;"> 172.17.4.0      192.168.191.141 255.255.255.0   UG    100    0        0 ens33 </td>
<td style="text-align:left;"> 172.17.4.0      0.0.0.0         255.255.255.0   U     425    0        0 kbr0</td>
</tr>
<tr>
<td style="text-align:left;"> 192.168.191.0   0.0.0.0         255.255.255.0   U     100    0        0 ens33 </td>
<td style="text-align:left;"> 192.168.191.0   0.0.0.0         255.255.255.0   U     100    0        0 ens33</td>
</tr>
<tr>
<td style="text-align:left;"> [root@kube-master ~]#                                                         </td>
<td style="text-align:left;"> [root@kube-worker1 ~]#</td>
</tr>
<tr>
<td style="text-align:left;"> [root@kube-master ~]# docker run -ti &ndash;rm busybox sh                          </td>
<td style="text-align:left;"> [root@kube-worker1 ~]# docker run -ti &ndash;rm busybox sh</td>
</tr>
<tr>
<td style="text-align:left;"> / # ifconfig                                                                  </td>
<td style="text-align:left;"> / # ifconfig</td>
</tr>
<tr>
<td style="text-align:left;"> eth0      Link encap:Ethernet  HWaddr 02:42:AC:11:03:02                       </td>
<td style="text-align:left;"> eth0      Link encap:Ethernet  HWaddr 02:42:AC:11:04:02</td>
</tr>
<tr>
<td style="text-align:left;">           inet addr:172.17.3.2  Bcast:0.0.0.0  Mask:255.255.255.0             </td>
<td style="text-align:left;">           inet addr:172.17.4.2  Bcast:0.0.0.0  Mask:255.255.255.0</td>
</tr>
<tr>
<td style="text-align:left;">           inet6 addr: fe80::42:acff:fe11:302/64 Scope:Link                    </td>
<td style="text-align:left;">           inet6 addr: fe80::42:acff:fe11:402/64 Scope:Link</td>
</tr>
<tr>
<td style="text-align:left;">           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1                  </td>
<td style="text-align:left;">           UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</td>
</tr>
<tr>
<td style="text-align:left;">           RX packets:23 errors:0 dropped:0 overruns:0 frame:0                 </td>
<td style="text-align:left;">           RX packets:16 errors:0 dropped:0 overruns:0 frame:0</td>
</tr>
<tr>
<td style="text-align:left;">           TX packets:15 errors:0 dropped:0 overruns:0 carrier:0               </td>
<td style="text-align:left;">           TX packets:8 errors:0 dropped:0 overruns:0 carrier:0</td>
</tr>
<tr>
<td style="text-align:left;">           collisions:0 txqueuelen:0                                           </td>
<td style="text-align:left;">           collisions:0 txqueuelen:0</td>
</tr>
<tr>
<td style="text-align:left;">           RX bytes:1870 (1.8 KiB)  TX bytes:1222 (1.1 KiB)                    </td>
<td style="text-align:left;">           RX bytes:1296 (1.2 KiB)  TX bytes:648 (648.0 B)</td>
</tr>
<tr>
<td style="text-align:left;">                                                                               </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> lo        Link encap:Local Loopback                                           </td>
<td style="text-align:left;"> lo        Link encap:Local Loopback</td>
</tr>
<tr>
<td style="text-align:left;">           inet addr:127.0.0.1  Mask:255.0.0.0                                 </td>
<td style="text-align:left;">           inet addr:127.0.0.1  Mask:255.0.0.0</td>
</tr>
<tr>
<td style="text-align:left;">           inet6 addr: ::1/128 Scope:Host                                      </td>
<td style="text-align:left;">           inet6 addr: ::1/128 Scope:Host</td>
</tr>
<tr>
<td style="text-align:left;">           UP LOOPBACK RUNNING  MTU:65536  Metric:1                            </td>
<td style="text-align:left;">           UP LOOPBACK RUNNING  MTU:65536  Metric:1</td>
</tr>
<tr>
<td style="text-align:left;">           RX packets:0 errors:0 dropped:0 overruns:0 frame:0                  </td>
<td style="text-align:left;">           RX packets:0 errors:0 dropped:0 overruns:0 frame:0</td>
</tr>
<tr>
<td style="text-align:left;">           TX packets:0 errors:0 dropped:0 overruns:0 carrier:0                </td>
<td style="text-align:left;">           TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</td>
</tr>
<tr>
<td style="text-align:left;">           collisions:0 txqueuelen:1                                           </td>
<td style="text-align:left;">           collisions:0 txqueuelen:1</td>
</tr>
<tr>
<td style="text-align:left;">           RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)                              </td>
<td style="text-align:left;">           RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</td>
</tr>
<tr>
<td style="text-align:left;"> / # ping 172.17.4.2                                                           </td>
<td></td>
</tr>
<tr>
<td style="text-align:left;"> PING 172.17.4.2 (172.17.4.2): 56 data bytes                                   </td>
<td style="text-align:left;"> / # ping 172.17.3.2</td>
</tr>
<tr>
<td style="text-align:left;"> 64 bytes from 172.17.4.2: seq=0 ttl=62 time=2.598 ms                          </td>
<td style="text-align:left;"> PING 172.17.3.2 (172.17.3.2): 56 data bytes</td>
</tr>
<tr>
<td style="text-align:left;"> 64 bytes from 172.17.4.2: seq=1 ttl=62 time=1.569 ms                          </td>
<td style="text-align:left;"> 64 bytes from 172.17.3.2: seq=0 ttl=62 time=1.421 ms</td>
</tr>
<tr>
<td style="text-align:left;"> 64 bytes from 172.17.4.2: seq=2 ttl=62 time=1.194 ms                          </td>
<td style="text-align:left;"> 64 bytes from 172.17.3.2: seq=1 ttl=62 time=1.446 ms</td>
</tr>
<tr>
<td style="text-align:left;"> ^C                                                                            </td>
<td style="text-align:left;"> ^C</td>
</tr>
<tr>
<td style="text-align:left;"> &mdash; 172.17.4.2 ping statistics &mdash;                                            </td>
<td style="text-align:left;"> &mdash; 172.17.3.2 ping statistics &mdash;</td>
</tr>
<tr>
<td style="text-align:left;"> 3 packets transmitted, 3 packets received, 0% packet loss                     </td>
<td style="text-align:left;"> 2 packets transmitted, 2 packets received, 0% packet loss</td>
</tr>
<tr>
<td style="text-align:left;"> round-trip min/avg/max = 1.194/1.787/2.598 ms                                 </td>
<td style="text-align:left;"> round-trip min/avg/max = 1.421/1.433/1.446 ms</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-</td>
<td style="text-align:left;">&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</td>
</tr>
</tbody>
</table>


<p>效果还不错，什么都没有安装配置下route两台机器的docker就互联互通了。二三台机器使用这种方式最省事的，并且理论上效率也是最高的。</p>

<h2>其他参考</h2>

<ul>
<li><a href="http://www.infoq.com/cn/articles/docker-network-and-pipework-open-source-explanation-practice">Docker网络详解及pipework源码解读与实践</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用U盘安装Centos7]]></title>
    <link href="http://winseliu.com/blog/2017/09/19/os-install-via-usb/"/>
    <updated>2017-09-19T22:26:30+08:00</updated>
    <id>http://winseliu.com/blog/2017/09/19/os-install-via-usb</id>
    <content type="html"><![CDATA[<p>使用U盘安装操作系统，原来一直用 unetbootin-windows 但这次不好使，U盘重新格式化也不行。遇到的几个问题：</p>

<ol>
<li>有光驱最好啊，没光驱才用U盘安装啊！</li>
<li>U盘是否能被识别？安装系统嘛，你的屈就电脑，它不识别你就只能换另一个咯。旧的服务器识别USB3.0有问题。</li>
<li>进BIOS看启动项是否有你的U盘？把U盘的顺序调整到HDD的前面。与第二项是一起的检测的。</li>
<li>做的系统是否正确？下载<a href="http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-Minimal-1708.iso">Minimal.iso</a>，用<a href="https://wiki.centos.org/zh/HowTos/InstallFromUSBkey">采用 Windows iso2usb</a> 把iso载入到U盘。</li>
</ol>


<p>注意1： 看到 ntldr is missing 这样的提示，就可以去再重写一遍U盘了！</p>

<p>注意2： U盘必须是FAT32的！！</p>

<p>安装系统的时刻，问题又来了：</p>

<ul>
<li>dracut_initqueue[599]: Warning: Could not boot</li>
</ul>


<p>找不到镜像。</p>

<p>处理： <strong> 等一段时间后会进行入到 Dracut shell </strong>, 查看下 /dev 下面有哪些磁盘设备。<strong> 最大/后的那个磁盘设备 </strong> 一般就是你的U盘。如我的是 /dev/sdc1 。</p>

<p>CTRL+ALT+DELETE 重新启动，进入CENTOS安装界面启动选项时，按TAB，替换为如下内容：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vmlinux initrd=initrd.img
</span><span class='line'>inst.stage2=hd:/dev/sdc1 quit</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://m.blog.csdn.net/w_z_z_1991/article/details/41909851">http://m.blog.csdn.net/w_z_z_1991/article/details/41909851</a></li>
<li><a href="http://www.jianshu.com/p/e3cd90c540c3">http://www.jianshu.com/p/e3cd90c540c3</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redmine部署以及插件安装]]></title>
    <link href="http://winseliu.com/blog/2017/09/18/redmine-deploy-and-install-plugins/"/>
    <updated>2017-09-18T23:46:24+08:00</updated>
    <id>http://winseliu.com/blog/2017/09/18/redmine-deploy-and-install-plugins</id>
    <content type="html"><![CDATA[<p>Redmine是类似JIRA的一个项目/BUG管理工具，使用ruby语言编写的。安装相对就麻烦一点，不熟嘛，一堆的东西要安装。有两种简单/傻瓜式的安装方式：</p>

<ul>
<li>bitnami-redmine，相当于一键安装；</li>
<li>docker + redmine，使用docker把所有的依赖都安装好，只需要配置remine即可。</li>
</ul>


<p>这里选择使用docker-compose来安装 <a href="https://github.com/sameersbn/docker-redmine">sameersbn/redmine:3.4.2</a></p>

<h2>部署</h2>

<p>先跑起来，然后再根据需求修改配置。搞得不好的话，重新安装也超级简单，是吧！</p>

<ul>
<li><a href="https://github.com/sameersbn/docker-redmine#quick-start">https://github.com/sameersbn/docker-redmine#quick-start</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir -p /srv/docker/redmine/{redmine,postgresql}
</span><span class='line'>
</span><span class='line'>wget https://raw.githubusercontent.com/sameersbn/docker-redmine/master/docker-compose.yml
</span><span class='line'>docker-compose up
</span></code></pre></td></tr></table></div></figure>


<p>启动后，浏览器访问 <a href="http://HOSTED_IP:10083">http://HOSTED_IP:10083</a> ，使用 admin/admin 登录。</p>

<ul>
<li>重新弄，初始化：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker-compose rm -f 或者 docker-compose down
</span><span class='line'>
</span><span class='line'>rm -rf /srv/docker/redmine/redmine/tmp/*
</span><span class='line'>rm -rf /srv/docker/redmine/postgresql/* 
</span><span class='line'>
</span><span class='line'>docker-compose up --build
</span></code></pre></td></tr></table></div></figure>


<h2>Theme主题</h2>

<ul>
<li><a href="https://github.com/sameersbn/docker-redmine#themes">https://github.com/sameersbn/docker-redmine#themes</a></li>
<li><a href="http://www.redmine.org/projects/redmine/wiki/Themes">http://www.redmine.org/projects/redmine/wiki/Themes</a></li>
<li><a href="https://www.redmineup.com/pages/themes/a1">https://www.redmineup.com/pages/themes/a1</a></li>
</ul>


<p>改头换面，下载主题后放到 /srv/docker/redmine/redmine/themes/ 目录下。然后 <strong> 重启容器 </strong>，再重新登录，修改 <strong> 管理 - 配置 - 显示 - 主题 - A1 </strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s redmine]# ll /srv/docker/redmine/redmine/themes/
</span><span class='line'>total 0
</span><span class='line'>drwxr-xr-x. 6 es es 69 Sep 18 23:38 a1
</span></code></pre></td></tr></table></div></figure>


<h2>Plugins</h2>

<p>有些插件不兼容3.4，注意版本的选择！一下是在3.4下面安装使用的插件：</p>

<ul>
<li><a href="http://www.redmine.org/projects/redmine/wiki/Plugins">http://www.redmine.org/projects/redmine/wiki/Plugins</a></li>
<li><a href="http://www.redmine.org/plugins/clipboard_image_paste">http://www.redmine.org/plugins/clipboard_image_paste</a></li>
<li><a href="https://github.com/peclik/clipboard_image_paste">https://github.com/peclik/clipboard_image_paste</a></li>
<li><a href="http://www.redmine.org/plugins/redmine_checklists">http://www.redmine.org/plugins/redmine_checklists</a></li>
<li><a href="http://www.redmine.org/plugins/redmine_agile">http://www.redmine.org/plugins/redmine_agile</a></li>
<li><a href="https://github.com/paginagmbh/redmine_lightbox2.git">https://github.com/paginagmbh/redmine_lightbox2.git</a></li>
<li><a href="https://github.com/paginagmbh/redmine_lightbox2">https://github.com/paginagmbh/redmine_lightbox2</a></li>
<li><a href="http://www.redmine.org/plugins/mega_calendar">http://www.redmine.org/plugins/mega_calendar</a></li>
<li><a href="https://github.com/berti92/mega_calendar/wiki/Installation">https://github.com/berti92/mega_calendar/wiki/Installation</a></li>
<li><a href="http://www.redmine.org/plugins/redmine_work_time">http://www.redmine.org/plugins/redmine_work_time</a></li>
<li><a href="http://www.redmine.org/plugins/redmine_issue_templates">http://www.redmine.org/plugins/redmine_issue_templates</a></li>
<li>Kanban</li>
<li><a href="http://www.redmine.org/plugins/redhopper">http://www.redmine.org/plugins/redhopper</a></li>
<li><a href="http://www.redmine.org/plugins/redhopper">http://www.redmine.org/plugins/redhopper</a></li>
<li><a href="http://www.redmine.org/plugins/deployer">http://www.redmine.org/plugins/deployer</a></li>
<li><a href="https://github.com/zapic0/deployer">https://github.com/zapic0/deployer</a></li>
<li><a href="http://www.redmine.org/plugins/redmine-ckeditor">http://www.redmine.org/plugins/redmine-ckeditor</a></li>
<li><a href="https://github.com/a-ono/redmine_ckeditor">https://github.com/a-ono/redmine_ckeditor</a></li>
<li><a href="http://www.redmine.org/plugins/apijs">http://www.redmine.org/plugins/apijs</a> 有一些依赖要安装，没用到的可以不安装。</li>
<li><a href="https://www.luigifab.info/redmine/en/apijs.php">https://www.luigifab.info/redmine/en/apijs.php</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s plugins]# sed -i '/haml/s/^/#/' redhopper/Gemfile           
</span><span class='line'>[root@k8s plugins]# mv apijs redmine_apijs
</span><span class='line'>
</span><span class='line'>[root@k8s redmine]# ll /srv/docker/redmine/redmine/plugins/
</span><span class='line'>total 0
</span><span class='line'>drwxr-xr-x.  8 es es 118 Sep 18 14:05 clipboard_image_paste
</span><span class='line'>drwxr-xr-x. 10 es es 212 Sep 18 19:18 deployer
</span><span class='line'>drwxr-xr-x.  7 es es 160 Sep 18 12:00 issuefy
</span><span class='line'>drwxr-xr-x.  4 es es  60 Sep 18 11:59 line_numbers
</span><span class='line'>drwxr-xr-x.  8 es es 182 Sep 17 18:05 mega_calendar
</span><span class='line'>drwxr-xr-x.  6 es es 158 Sep 18 12:00 open_flash_chart
</span><span class='line'>drwxrwxr-x.  8 es es 225 Sep 18 22:15 redhopper
</span><span class='line'>drwxr-xr-x.  9 es es 156 Sep  6 19:02 redmine_agile
</span><span class='line'>drwxr-xr-x.  7 es es 133 Sep 18 22:00 redmine_apijs
</span><span class='line'>drwxr-xr-x. 10 es es 119 Aug 30 21:46 redmine_checklists
</span><span class='line'>drwxr-xr-x.  9 es es 158 Sep 18 19:19 redmine_ckeditor
</span><span class='line'>drwxr-xr-x.  8 es es 221 Sep 18 12:01 redmine_code_review
</span><span class='line'>drwxr-xr-x.  8 es es 252 Sep 18 12:01 redmine_dashboard
</span><span class='line'>drwxr-xr-x.  3 es es  70 Sep 18 12:00 redmine_embedded_video
</span><span class='line'>drwxr-xr-x.  2 es es  78 Sep 18 12:00 redmine_gist
</span><span class='line'>drwxrwxr-x.  8 es es 129 Aug  5 10:52 redmine_issue_templates
</span><span class='line'>drwxr-xr-x.  8 es es 170 Sep 18 17:46 redmine_lightbox2
</span><span class='line'>drwxr-xr-x.  8 es es 160 Mar  5  2017 redmine_work_time</span></code></pre></td></tr></table></div></figure>


<p>不重启容器的话，可以登录到容器把 ~/data/plugins 拷贝到 ~/redmine/plugins 下面，然后执行下面的命令进行更新：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@f0481f5f8cda:/home/redmine/redmine# 
</span><span class='line'>bundle install --without development test
</span><span class='line'>bundle exec rake redmine:plugins:migrate RAILS_ENV=production
</span><span class='line'>
</span><span class='line'>supervisorctl restart unicorn
</span></code></pre></td></tr></table></div></figure>


<h2>其他的一些插件</h2>

<ul>
<li><a href="http://www.redmine.org/plugins/dmsf">http://www.redmine.org/plugins/dmsf</a></li>
<li><a href="https://github.com/danmunn/redmine_dmsf">https://github.com/danmunn/redmine_dmsf</a></li>
<li><a href="http://www.redmine.org/plugins/redmine_git_hosting">http://www.redmine.org/plugins/redmine_git_hosting</a> X</li>
<li><a href="http://www.redmine.org/plugins/redmine_upwork_plugin">http://www.redmine.org/plugins/redmine_upwork_plugin</a></li>
<li><a href="https://github.com/alexbevi/redmine_knowledgebase">https://github.com/alexbevi/redmine_knowledgebase</a></li>
<li><a href="https://github.com/danmunn/redmine_dmsf">https://github.com/danmunn/redmine_dmsf</a></li>
<li><a href="https://github.com/jbox-web/redmine_jenkins">https://github.com/jbox-web/redmine_jenkins</a></li>
<li><a href="https://github.com/masweetman/issue_charts">https://github.com/masweetman/issue_charts</a></li>
<li>3.3.x</li>
<li><a href="http://www.redmine.org/plugins/redmine_pivot_table">http://www.redmine.org/plugins/redmine_pivot_table</a></li>
<li><a href="https://www.redmine.org/plugins/advanced_roadmap_v2">https://www.redmine.org/plugins/advanced_roadmap_v2</a></li>
<li><a href="https://github.com/Coren/redmine_advanced_roadmap_v2">https://github.com/Coren/redmine_advanced_roadmap_v2</a></li>
<li><a href="https://github.com/Loriowar/redmine_issues_tree">https://github.com/Loriowar/redmine_issues_tree</a></li>
<li><a href="https://github.com/speedy32129/projects_show">https://github.com/speedy32129/projects_show</a></li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="https://github.com/bitnami/bitnami-docker-redmine">https://github.com/bitnami/bitnami-docker-redmine</a></li>
<li><a href="http://11398377.blog.51cto.com/11388377/1875686">http://11398377.blog.51cto.com/11388377/1875686</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Compose入门]]></title>
    <link href="http://winseliu.com/blog/2017/09/17/docker-compose-hello/"/>
    <updated>2017-09-17T08:48:25+08:00</updated>
    <id>http://winseliu.com/blog/2017/09/17/docker-compose-hello</id>
    <content type="html"><![CDATA[<p>使用Docker也一段时间了，一开始直接使用命令行 docker run 来启动的，后面使用 k8s 来管理，对于多机环境来说还是挺方便的。但是如果仅仅是单机上面跑docker容器，安装一套 k8s 的话也挺尴尬的。</p>

<p>docker提供了compose编排的功能，通过配置文件的方式来启动、管理（多）容器的运行。有点启动脚本的意思，当然也包含一些管理的元素，对容器LifeCycle的管理。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s composetest]# docker version
</span><span class='line'>Client:
</span><span class='line'> Version:      1.12.6
</span><span class='line'> API version:  1.24
</span><span class='line'> Go version:   go1.6.4
</span><span class='line'> Git commit:   78d1802
</span><span class='line'> Built:        Tue Jan 10 20:20:01 2017
</span><span class='line'> OS/Arch:      linux/amd64
</span><span class='line'>
</span><span class='line'>Server:
</span><span class='line'> Version:      1.12.6
</span><span class='line'> API version:  1.24
</span><span class='line'> Go version:   go1.6.4
</span><span class='line'> Git commit:   78d1802
</span><span class='line'> Built:        Tue Jan 10 20:20:01 2017
</span><span class='line'> OS/Arch:      linux/amd64
</span><span class='line'> 
</span><span class='line'>[root@k8s composetest]# docker-compose version
</span><span class='line'>docker-compose version 1.16.1, build 6d1ac21
</span><span class='line'>docker-py version: 2.5.1
</span><span class='line'>CPython version: 2.7.13
</span><span class='line'>OpenSSL version: OpenSSL 1.0.1t  3 May 2016
</span></code></pre></td></tr></table></div></figure>


<p>docker的版本需要和compose配置的版本适配： <a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a> ，docker-1.12的话，compose version不能高于 2.1。<a href="https://docs.docker.com/compose/compose-file/compose-file-v2/#build">Compose file version 2</a> 。</p>

<p>先安装官网的helloworld来运行一个例子：</p>

<ul>
<li><a href="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/</a></li>
<li><a href="https://docs.docker.com/compose/gettingstarted/#prerequisites">https://docs.docker.com/compose/gettingstarted/#prerequisites</a></li>
</ul>


<h2>安装：</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 浏览器下载docker-compose
</span><span class='line'>https://github.com/docker/compose/releases/download/1.16.1/docker-compose-Linux-x86_64
</span><span class='line'>
</span><span class='line'>[root@k8s opt]# cd /usr/local/bin/
</span><span class='line'>[root@k8s bin]# rz
</span><span class='line'>rz waiting to receive.
</span><span class='line'>Starting zmodem transfer.  Press Ctrl+C to cancel.
</span><span class='line'>Transferring docker-compose-Linux-x86_64 (1)...
</span><span class='line'>  100%    8648 KB    4324 KB/sec    00:00:02       0 Errors  
</span><span class='line'>
</span><span class='line'>[root@k8s bin]# mv docker-compose-Linux-x86_64 docker-compose
</span><span class='line'>[root@k8s bin]# chmod +x docker-compose 
</span></code></pre></td></tr></table></div></figure>


<h2>Hello World:</h2>

<p>官网是一个访问量统计的例子，通过python网站结合redis来实现。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s composetest]# ll
</span><span class='line'>total 16
</span><span class='line'>-rw-r--r--. 1 root root 303 Sep 17 08:09 app.py
</span><span class='line'>-rw-r--r--. 1 root root 112 Sep 17 08:39 docker-compose.yml
</span><span class='line'>-rw-r--r--. 1 root root 114 Sep 17 08:42 Dockerfile
</span><span class='line'>-rw-r--r--. 1 root root  13 Sep 17 08:09 requirements.txt
</span><span class='line'>
</span><span class='line'>[root@k8s composetest]# cat app.py 
</span><span class='line'>from flask import Flask
</span><span class='line'>from redis import Redis
</span><span class='line'>
</span><span class='line'>app = Flask(__name__)
</span><span class='line'>redis = Redis(host='redis', port=6379)
</span><span class='line'>
</span><span class='line'>@app.route('/')
</span><span class='line'>def hello():
</span><span class='line'>  count = redis.incr('hits')
</span><span class='line'>  return 'Hello World! I have been seen {} times.\n'.format(count)
</span><span class='line'>
</span><span class='line'>if __name__ == "__main__":
</span><span class='line'>  app.run(host="0.0.0.0", debug=True)
</span><span class='line'>
</span><span class='line'>[root@k8s composetest]# cat requirements.txt 
</span><span class='line'>flask
</span><span class='line'>redis
</span><span class='line'>
</span><span class='line'>[root@k8s composetest]# cat Dockerfile 
</span><span class='line'>FROM python:3.4-alpine
</span><span class='line'>
</span><span class='line'>ADD . /code
</span><span class='line'>WORKDIR /code
</span><span class='line'>
</span><span class='line'>RUN pip install -r requirements.txt
</span><span class='line'>
</span><span class='line'>CMD ["python", "app.py"]
</span><span class='line'>
</span><span class='line'>[root@k8s composetest]# cat docker-compose.yml 
</span><span class='line'>version: '2.1'
</span><span class='line'>services:
</span><span class='line'>  web:
</span><span class='line'>    build: .
</span><span class='line'>    ports:
</span><span class='line'>      - "5000:5000"
</span><span class='line'>  redis:
</span><span class='line'>    image: "redis:alpine"
</span></code></pre></td></tr></table></div></figure>


<p>依赖的镜像可以提前下载好，可以不修改docker配置的情况下来下载，参考<a href="https://raw.githubusercontent.com/winse/shell-not-just-on-work/master/docker-download-mirror.sh">docker-download-mirror.sh</a></p>

<p>写好配置后，运行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s composetest]# docker-compose up --build
</span><span class='line'>Building web
</span><span class='line'>Step 1 : FROM python:3.4-alpine
</span><span class='line'> ---&gt; 27a0e572c13a
</span><span class='line'>Step 2 : ADD . /code
</span><span class='line'> ---&gt; 84082044fb5e
</span><span class='line'>Removing intermediate container 7c4675b618da
</span><span class='line'>Step 3 : WORKDIR /code
</span><span class='line'> ---&gt; Running in a014af85b748
</span><span class='line'> ---&gt; 2ada42bd756c
</span><span class='line'>Removing intermediate container a014af85b748
</span><span class='line'>Step 4 : RUN pip install -r requirements.txt
</span><span class='line'> ---&gt; Running in 4be6f8f5c8b8
</span><span class='line'>Collecting flask (from -r requirements.txt (line 1))
</span><span class='line'>  Downloading Flask-0.12.2-py2.py3-none-any.whl (83kB)
</span><span class='line'>Collecting redis (from -r requirements.txt (line 2))
</span><span class='line'>  Downloading redis-2.10.6-py2.py3-none-any.whl (64kB)
</span><span class='line'>Collecting Jinja2&gt;=2.4 (from flask-&gt;-r requirements.txt (line 1))
</span><span class='line'>  Downloading Jinja2-2.9.6-py2.py3-none-any.whl (340kB)
</span><span class='line'>Collecting click&gt;=2.0 (from flask-&gt;-r requirements.txt (line 1))
</span><span class='line'>  Downloading click-6.7-py2.py3-none-any.whl (71kB)
</span><span class='line'>Collecting itsdangerous&gt;=0.21 (from flask-&gt;-r requirements.txt (line 1))
</span><span class='line'>  Downloading itsdangerous-0.24.tar.gz (46kB)
</span><span class='line'>Collecting Werkzeug&gt;=0.7 (from flask-&gt;-r requirements.txt (line 1))
</span><span class='line'>  Downloading Werkzeug-0.12.2-py2.py3-none-any.whl (312kB)
</span><span class='line'>Collecting MarkupSafe&gt;=0.23 (from Jinja2&gt;=2.4-&gt;flask-&gt;-r requirements.txt (line 1))
</span><span class='line'>  Downloading MarkupSafe-1.0.tar.gz
</span><span class='line'>Building wheels for collected packages: itsdangerous, MarkupSafe
</span><span class='line'>  Running setup.py bdist_wheel for itsdangerous: started
</span><span class='line'>  Running setup.py bdist_wheel for itsdangerous: finished with status 'done'
</span><span class='line'>  Stored in directory: /root/.cache/pip/wheels/fc/a8/66/24d655233c757e178d45dea2de22a04c6d92766abfb741129a
</span><span class='line'>  Running setup.py bdist_wheel for MarkupSafe: started
</span><span class='line'>  Running setup.py bdist_wheel for MarkupSafe: finished with status 'done'
</span><span class='line'>  Stored in directory: /root/.cache/pip/wheels/88/a7/30/e39a54a87bcbe25308fa3ca64e8ddc75d9b3e5afa21ee32d57
</span><span class='line'>Successfully built itsdangerous MarkupSafe
</span><span class='line'>Installing collected packages: MarkupSafe, Jinja2, click, itsdangerous, Werkzeug, flask, redis
</span><span class='line'>Successfully installed Jinja2-2.9.6 MarkupSafe-1.0 Werkzeug-0.12.2 click-6.7 flask-0.12.2 itsdangerous-0.24 redis-2.10.6
</span><span class='line'> ---&gt; ee3e476d4fad
</span><span class='line'>Removing intermediate container 4be6f8f5c8b8
</span><span class='line'>Step 5 : CMD python app.py
</span><span class='line'> ---&gt; Running in f2f9eefe782e
</span><span class='line'> ---&gt; 08e3065107b2
</span><span class='line'>Removing intermediate container f2f9eefe782e
</span><span class='line'>Successfully built 08e3065107b2
</span><span class='line'>Recreating composetest_web_1 ... 
</span><span class='line'>Recreating composetest_web_1
</span><span class='line'>Starting composetest_redis_1 ... 
</span><span class='line'>Recreating composetest_web_1 ... done
</span><span class='line'>Attaching to composetest_redis_1, composetest_web_1
</span><span class='line'>redis_1  | 1:C 17 Sep 00:43:45.012 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
</span><span class='line'>redis_1  | 1:C 17 Sep 00:43:45.013 # Redis version=4.0.1, bits=64, commit=00000000, modified=0, pid=1, just started
</span><span class='line'>redis_1  | 1:C 17 Sep 00:43:45.013 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
</span><span class='line'>redis_1  | 1:M 17 Sep 00:43:45.020 * Running mode=standalone, port=6379.
</span><span class='line'>redis_1  | 1:M 17 Sep 00:43:45.020 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
</span><span class='line'>redis_1  | 1:M 17 Sep 00:43:45.020 # Server initialized
</span><span class='line'>redis_1  | 1:M 17 Sep 00:43:45.020 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
</span><span class='line'>redis_1  | 1:M 17 Sep 00:43:45.020 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
</span><span class='line'>redis_1  | 1:M 17 Sep 00:43:45.020 * DB loaded from disk: 0.000 seconds
</span><span class='line'>redis_1  | 1:M 17 Sep 00:43:45.020 * Ready to accept connections
</span><span class='line'>web_1    |  * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
</span><span class='line'>web_1    |  * Restarting with stat
</span><span class='line'>web_1    |  * Debugger is active!
</span><span class='line'>web_1    |  * Debugger PIN: 175-303-648</span></code></pre></td></tr></table></div></figure>


<p>查看容器状态：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s opt]# curl http://0.0.0.0:5000/
</span><span class='line'>Hello World! I have been seen 1 times.
</span><span class='line'>[root@k8s opt]# curl http://0.0.0.0:5000/
</span><span class='line'>Hello World! I have been seen 2 times.
</span><span class='line'>
</span><span class='line'>[root@k8s composetest]# docker-compose ps 
</span><span class='line'>       Name                      Command               State           Ports         
</span><span class='line'>-------------------------------------------------------------------------------------
</span><span class='line'>composetest_redis_1   docker-entrypoint.sh redis ...   Up      6379/tcp              
</span><span class='line'>composetest_web_1     python app.py                    Up      0.0.0.0:5000-&gt;5000/tcp
</span><span class='line'>
</span><span class='line'>##
</span><span class='line'>docker-compose rm -f # Remove stopped containers
</span><span class='line'>docker-compose down  # Stop and remove containers, networks, images, and volumes
</span></code></pre></td></tr></table></div></figure>


<h2>其他</h2>

<p>后台运行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose up -d
</span><span class='line'>$ docker-compose ps</span></code></pre></td></tr></table></div></figure>


<p>在指定容器内执行命令：有点类似 docker exec/kubectl exec</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose run web env</span></code></pre></td></tr></table></div></figure>


<p><a href="https://docs.docker.com/compose/production/#deploying-changes">单独编译运行</a> 仅更改过内容的容器：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-compose build web
</span><span class='line'>$ docker-compose up --no-deps -d web</span></code></pre></td></tr></table></div></figure>


<p>配置<a href="https://docs.docker.com/compose/extends/#extending-services">复用/覆写</a>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
</span><span class='line'>
</span><span class='line'># A
</span><span class='line'>webapp:
</span><span class='line'>  build: .
</span><span class='line'>  ports:
</span><span class='line'>    - "8000:8000"
</span><span class='line'>  volumes:
</span><span class='line'>    - "/data"
</span><span class='line'>   
</span><span class='line'># EA   
</span><span class='line'>web:
</span><span class='line'>  extends:
</span><span class='line'>    file: common-services.yml
</span><span class='line'>    service: webapp
</span><span class='line'>    </span></code></pre></td></tr></table></div></figure>


<h2>学习</h2>

<ul>
<li><a href="https://yeasy.gitbooks.io/docker_practice/content/compose/commands.html">Compose 命令</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zookeeper ACL]]></title>
    <link href="http://winseliu.com/blog/2017/09/02/zookeeper-acl/"/>
    <updated>2017-09-02T23:14:55+08:00</updated>
    <id>http://winseliu.com/blog/2017/09/02/zookeeper-acl</id>
    <content type="html"><![CDATA[<p>集群又一次进行安检，SSH躲不过需要升级的，这次还加了hadoop security和zookeeper acl的bug。以前没太在意这些内容，既然安全检查出来了，还是需要处理的。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ZooKeeper 未授权访问【原理扫描】
</span><span class='line'>详细描述  ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。 
</span><span class='line'>ZooKeeper的目标就是封装好复杂易出错的关键服务，将简单易用的接口和性能高效、功能稳定的系统提供给用户。 
</span><span class='line'>在通常情况下，zookeeper允许未经授权的访问。
</span><span class='line'>解决办法  为ZooKeeper配置相应的访问权限。 
</span><span class='line'>
</span><span class='line'>方式一： 
</span><span class='line'>1）增加一个认证用户 
</span><span class='line'>addauth digest 用户名:密码明文 
</span><span class='line'>eg. addauth digest user1:password1 
</span><span class='line'>2）设置权限 
</span><span class='line'>setAcl /path auth:用户名:密码明文:权限 
</span><span class='line'>eg. setAcl /test auth:user1:password1:cdrwa 
</span><span class='line'>3）查看Acl设置 
</span><span class='line'>getAcl /path 
</span><span class='line'>
</span><span class='line'>方式二： 
</span><span class='line'>setAcl /path digest:用户名:密码密文:权限
</span><span class='line'>
</span><span class='line'>威胁分值  5.0
</span><span class='line'>危险插件  否
</span><span class='line'>发现日期  2015-02-10
</span></code></pre></td></tr></table></div></figure>


<h2>Zookeeper权限基本知识点、操作</h2>

<ul>
<li><a href="https://zookeeper.apache.org/doc/r3.3.3/zookeeperProgrammers.html#sc_ZooKeeperAccessControl">https://zookeeper.apache.org/doc/r3.3.3/zookeeperProgrammers.html#sc_ZooKeeperAccessControl</a></li>
<li><a href="https://my.oschina.net/guol/blog/1358538">https://my.oschina.net/guol/blog/1358538</a></li>
<li><a href="http://blog.csdn.net/xyang81/article/details/53147894">http://blog.csdn.net/xyang81/article/details/53147894</a></li>
<li><a href="https://ihong5.wordpress.com/2014/07/24/apache-zookeeper-setting-acl-in-zookeeper-client/">https://ihong5.wordpress.com/2014/07/24/apache-zookeeper-setting-acl-in-zookeeper-client/</a></li>
<li><a href="https://zookeeper.apache.org/doc/r3.3.3/zookeeperStarted.html">https://zookeeper.apache.org/doc/r3.3.3/zookeeperStarted.html</a></li>
</ul>


<p>Note also that an ACL pertains only to a specific znode. In particular it does not apply to children. ACL在znode上无继承性，也就是说子znode不会继承父znode的ACL权限.</p>

<ul>
<li>world has a single id, anyone, that represents anyone.</li>
<li>auth doesn&rsquo;t use any id, represents any authenticated user.</li>
<li>digest uses a username:password string to generate MD5 hash which is then used as an ACL ID identity. Authentication is done by sending the username:password in clear text. When used in the ACL the expression will be the username:base64 encoded SHA1 password digest.</li>
<li>ip uses the client host IP as an ACL ID identity. The ACL expression is of the form addr/bits(3.5+) where the most significant bits of addr are matched against the most significant bits of the client host IP.</li>
</ul>


<p>zookeeper的ACL格式为 schema:id:permissions 。模式就是上面列的几种，再加一个super。创建的节点默认权限为 world:anyone:rwadc 表示所有人都对这个节点有rwadc的权限。</p>

<ul>
<li>Create：允许对子节点Create 操作</li>
<li>Read：允许对本节点GetChildren 和GetData 操作</li>
<li>Write ：允许对本节点SetData 操作</li>
<li>Delete ：允许对子节点Delete 操作</li>
<li>Admin ：允许对本节点setAcl 操作</li>
</ul>


<h2>Auth授权</h2>

<p>不需要id，当前 &ldquo;登录&rdquo; 的所有users都有权限（sasl、kerberos这些授权方式不懂，囧)。虽然不需要id，但是格式还得按照 scheme:id:perm 的写法。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: localhost:2181(CONNECTED) 15] setAcl /c auth:rwadc  
</span><span class='line'>auth:rwadc does not have the form scheme:id:perm
</span><span class='line'>Acl is not valid : /c
</span><span class='line'>
</span><span class='line'>[zk: k8s(CONNECTED) 13] addauth digest a:a
</span><span class='line'>[zk: k8s(CONNECTED) 14] addauth digest b:b
</span><span class='line'>[zk: k8s(CONNECTED) 15] addauth digest c:c
</span><span class='line'>[zk: k8s(CONNECTED) 16] create /e e
</span><span class='line'>Created /e
</span><span class='line'>[zk: k8s(CONNECTED) 17] setAcl /e auth::cdrwa
</span><span class='line'>...省略节点输出信息
</span><span class='line'>
</span><span class='line'>[zk: k8s(CONNECTED) 18] getAcl /e
</span><span class='line'>'digest,'a:mDmPUap4qvYwm+PZOtJ/scGyHLY=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'b:+F8zPn3x1CLx3qpYHEaRwIheWcc=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'c:K7CO7OxIfBOQxczG+7FI9BdZ6/s=
</span><span class='line'>: cdrwa</span></code></pre></td></tr></table></div></figure>


<p>id随便写也可以，zookeeper都不记录的。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: localhost:2181(CONNECTED) 9] addauth digest hdfs:hdfs    
</span><span class='line'>[zk: localhost:2181(CONNECTED) 10] setAcl /c auth:x:x:rwadc
</span><span class='line'>...
</span><span class='line'>[zk: localhost:2181(CONNECTED) 11] getAcl /c               
</span><span class='line'>'digest,'user:tpUq/4Pn5A64fVZyQ0gOJ8ZWqkY=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'hdfs:0wpra2yK6RCUB9sbo0BkElpzcl8=
</span><span class='line'>: cdrwa</span></code></pre></td></tr></table></div></figure>


<p>也可以对根 / 授权，这样客户端就不能随便在根下面新建节点了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: localhost:2181(CONNECTED) 9] addauth digest user:password    
</span><span class='line'>[zk: localhost:2181(CONNECTED) 21] setAcl / auth::rawdc
</span><span class='line'>
</span><span class='line'>重新登录
</span><span class='line'>[zk: localhost:2181(CONNECTED) 0] ls /
</span><span class='line'>Authentication is not valid : /
</span><span class='line'>[zk: localhost:2181(CONNECTED) 1] getAcl /
</span><span class='line'>'digest,'user:tpUq/4Pn5A64fVZyQ0gOJ8ZWqkY=
</span><span class='line'>: cdrwa
</span></code></pre></td></tr></table></div></figure>


<p>还原</p>

<p>使用有权限的用户/实例，如果都忘了那就只能放绝招：使用超级管理员登录，重新设置权限为world即可。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: localhost:2181(CONNECTED) 26] setAcl / world:anyone:cdrwa</span></code></pre></td></tr></table></div></figure>


<h2>Digest</h2>

<p>直接用起来比 auth 简单，直接把密文交给zookeeper。首先得生成对应用户的密码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s zookeeper-3.4.10]# java -cp zookeeper-3.4.10.jar:lib/* org.apache.zookeeper.server.auth.DigestAuthenticationProvider user:password
</span><span class='line'>user:password-&gt;user:tpUq/4Pn5A64fVZyQ0gOJ8ZWqkY=
</span><span class='line'>
</span><span class='line'>[root@k8s zookeeper-3.4.10]# java -cp zookeeper-3.4.10.jar:lib/* org.apache.zookeeper.server.auth.DigestAuthenticationProvider es:es
</span><span class='line'>es:es-&gt;es:KiHfMOSWCTgPKpz78IL/6qO8AEE=</span></code></pre></td></tr></table></div></figure>


<p>scheme是digest的时候，id需要密文。通过Zookeeper的客户端编码方式添加认证（登录），digest对应的auth数据是明文。</p>

<p>ACL授权一样使用 setAcl ：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$$ A实例
</span><span class='line'>[zk: localhost:2181(CONNECTED) 17] setAcl /b digest:user:tpUq/4Pn5A64fVZyQ0gOJ8ZWqkY=:cdrwa
</span><span class='line'>和md5密码类似，数据库被盗了，如果是常用的密码会被猜出来
</span><span class='line'>[zk: localhost:2181(CONNECTED) 18] getAcl /b
</span><span class='line'>'digest,'user:tpUq/4Pn5A64fVZyQ0gOJ8ZWqkY=
</span><span class='line'>: cdrwa
</span><span class='line'>
</span><span class='line'>$$ B实例
</span><span class='line'>重新登录：
</span><span class='line'>[zk: k8s:2181(CONNECTED) 2] ls /b
</span><span class='line'>Authentication is not valid : /b
</span><span class='line'>
</span><span class='line'>$$ A实例
</span><span class='line'>[zk: localhost:2181(CONNECTED) 20] create /b/bb ''
</span><span class='line'>Authentication is not valid : /b/bb
</span><span class='line'>[zk: localhost:2181(CONNECTED) 21] addauth digest user:tpUq/4Pn5A64fVZyQ0gOJ8ZWqkY=
</span><span class='line'>[zk: localhost:2181(CONNECTED) 22] create /b/bb ''                                 
</span><span class='line'>Authentication is not valid : /b/bb
</span><span class='line'>
</span><span class='line'># 需要使用明文登录
</span><span class='line'>[zk: localhost:2181(CONNECTED) 23] addauth digest user:password
</span><span class='line'>[zk: localhost:2181(CONNECTED) 24] create /b/bb '' 
</span><span class='line'>Created /b/bb 
</span><span class='line'>
</span><span class='line'># 权限没有继承性
</span><span class='line'>[zk: localhost:2181(CONNECTED) 25] getAcl /b/bb
</span><span class='line'>'world,'anyone
</span><span class='line'>: cdrwa</span></code></pre></td></tr></table></div></figure>


<h1>IP</h1>

<p>ip的权限配置更简单些。逻辑就是匹配客户端的IP地址，在权限IP地址段范围内的才能访问。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$$ A实例
</span><span class='line'>[zk: localhost:2181(CONNECTED) 18] setAcl /i ip:127.0.0.1:cdrwa
</span><span class='line'>...
</span><span class='line'>[zk: localhost:2181(CONNECTED) 19] getAcl /i
</span><span class='line'>'ip,'127.0.0.1
</span><span class='line'>: cdrwa
</span><span class='line'>[zk: localhost:2181(CONNECTED) 24] get /i
</span><span class='line'>Authentication is not valid : /i
</span><span class='line'>
</span><span class='line'>咋回事呢，就是本地还没权限？有时可localhost不一定对应127.0.0.1的。。。
</span><span class='line'>
</span><span class='line'>$$ B实例
</span><span class='line'>[root@k8s zookeeper-3.4.10]# bin/zkCli.sh -server 127.0.0.1
</span><span class='line'>[zk: 127.0.0.1(CONNECTED) 0] get /i
</span><span class='line'>i
</span><span class='line'>...
</span><span class='line'>改成另一个网卡的ip地址
</span><span class='line'>[zk: 127.0.0.1(CONNECTED) 1] setAcl /i ip:192.168.191.138:cdrwa
</span><span class='line'>...
</span><span class='line'>[zk: 127.0.0.1(CONNECTED) 2] getAcl /i
</span><span class='line'>'ip,'192.168.191.138
</span><span class='line'>: cdrwa
</span><span class='line'>[zk: 127.0.0.1(CONNECTED) 3] get /i
</span><span class='line'>Authentication is not valid : /i
</span><span class='line'>
</span><span class='line'>$$ C实例
</span><span class='line'>用主机名(191.138)登录的实例
</span><span class='line'>[zk: k8s(CONNECTED) 19] get /i
</span><span class='line'>i</span></code></pre></td></tr></table></div></figure>


<h2>超级管理员</h2>

<p>如果权限设置错了，咋办？</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: k8s(CONNECTED) 21] setAcl /i ip:192.168.191.0/24:cdrwa                   
</span><span class='line'>Acl is not valid : /i
</span><span class='line'>
</span><span class='line'>[zk: k8s(CONNECTED) 25] setAcl /i ip:192.168.191.0:cdrwa
</span><span class='line'>
</span><span class='line'>[zk: k8s(CONNECTED) 26] getAcl /i
</span><span class='line'>'ip,'192.168.191.0
</span><span class='line'>: cdrwa
</span><span class='line'>[zk: k8s(CONNECTED) 27] get /i
</span><span class='line'>Authentication is not valid : /i</span></code></pre></td></tr></table></div></figure>


<p>除非把客户端的ip地址换成 192.168.191.0 否则就访问不了了。</p>

<p>此时需要超级管理员才行，不然真没办法折腾了。（不知道为啥）是可以删掉（特指我当前的环境啊），但是这样数据就没有了啊！！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: localhost:2181(CONNECTED) 26] getAcl /i
</span><span class='line'>'ip,'192.168.191.0
</span><span class='line'>: cdrwa
</span><span class='line'>[zk: localhost:2181(CONNECTED) 27] delete /i
</span><span class='line'>[zk: localhost:2181(CONNECTED) 28] ls /
</span><span class='line'>[a, b, c, zookeeper, d, e]
</span><span class='line'>[zk: localhost:2181(CONNECTED) 29] ls /i
</span><span class='line'>Node does not exist: /i</span></code></pre></td></tr></table></div></figure>


<p>如果数据很重要，重启后用超级管理员的方式找回密码还是很划的来的。</p>

<ul>
<li><a href="https://community.hortonworks.com/articles/29900/zookeeper-using-superdigest-to-gain-full-access-to.html">https://community.hortonworks.com/articles/29900/zookeeper-using-superdigest-to-gain-full-access-to.html</a></li>
</ul>


<p>用 DigestAuthenticationProvider 加密就不操作了，直接用 es:es 对应的 es:es->es:KiHfMOSWCTgPKpz78IL/6qO8AEE= 作为管理员的账号密码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export SERVER_JVMFLAGS=-Dzookeeper.DigestAuthenticationProvider.superDigest=es:KiHfMOSWCTgPKpz78IL/6qO8AEE=
</span><span class='line'>
</span><span class='line'>[root@k8s zookeeper-3.4.10]# bin/zkServer.sh stop
</span><span class='line'>[root@k8s zookeeper-3.4.10]# bin/zkServer.sh start
</span><span class='line'>ZooKeeper JMX enabled by default
</span><span class='line'>Using config: /opt/zookeeper-3.4.10/bin/../conf/zoo.cfg
</span><span class='line'>Starting zookeeper ... STARTED
</span><span class='line'>
</span><span class='line'>$$ A实例
</span><span class='line'>[root@k8s zookeeper-3.4.10]# bin/zkCli.sh 
</span><span class='line'>[zk: localhost:2181(CONNECTED) 0] get /i
</span><span class='line'>Authentication is not valid : /i
</span><span class='line'>[zk: localhost:2181(CONNECTED) 1] getAcl /i
</span><span class='line'>'ip,'192.168.191.0
</span><span class='line'>: cdrwa
</span><span class='line'>[zk: localhost:2181(CONNECTED) 2] addauth digest es:es
</span><span class='line'>[zk: localhost:2181(CONNECTED) 3] get /i
</span><span class='line'>i
</span><span class='line'>...
</span><span class='line'>[zk: localhost:2181(CONNECTED) 4] setAcl /i world:anyone:cdrwa
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>$$ B实例
</span><span class='line'>[zk: localhost:2181(CONNECTED) 0] get /i
</span><span class='line'>i
</span><span class='line'>[zk: localhost:2181(CONNECTED) 1] getAcl /i
</span><span class='line'>'world,'anyone
</span><span class='line'>: cdrwa
</span></code></pre></td></tr></table></div></figure>


<h2>实践&mdash;好玩</h2>

<p>权限可以直接在创建的时刻指定：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>create /mynode content digest:user:tpUq/4Pn5A64fVZyQ0gOJ8ZWqkY=:cdrwa</span></code></pre></td></tr></table></div></figure>


<p>也可以一次性设置N个权限：</p>

<p>注：以下操作都是超级管理员登录的窗口，所以不存在权限的问题。想怎么改就怎么改</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setAcl /i ip:192.168.191.0:cdrwa,ip:127.0.0.1:cdrwa,ip:192.168.191.138:cdrwa
</span><span class='line'>
</span><span class='line'>getAcl /i
</span><span class='line'>'ip,'192.168.191.0
</span><span class='line'>: cdrwa
</span><span class='line'>'ip,'127.0.0.1
</span><span class='line'>: cdrwa
</span><span class='line'>'ip,'192.168.191.138
</span><span class='line'>: cdrwa
</span></code></pre></td></tr></table></div></figure>


<p>但是，使用ip、digest、word重设权限后，会覆盖旧的：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: localhost:2181(CONNECTED) 7] setAcl /i ip:0.0.0.0:cdrwa
</span><span class='line'>[zk: localhost:2181(CONNECTED) 8] getAcl /i
</span><span class='line'>'ip,'0.0.0.0
</span><span class='line'>: cdrwa
</span><span class='line'>
</span><span class='line'>[zk: localhost:2181(CONNECTED) 15] setAcl /i world:anyone:cdraw
</span><span class='line'>[zk: localhost:2181(CONNECTED) 16] getAcl /i
</span><span class='line'>'world,'anyone
</span><span class='line'>: cdrwa
</span></code></pre></td></tr></table></div></figure>


<p>3.4的版本不支持ip段（3.5应该是ok的）： <a href="https://github.com/apache/zookeeper/blob/release-3.4.10/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java#L114">IPAuthenticationProvider</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public boolean isValid(String id) {
</span><span class='line'>    return addr2Bytes(id) != null;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>可以找对应版本的源码（远程）调试下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s zookeeper-3.4.10]# export SERVER_JVMFLAGS="-Dzookeeper.DigestAuthenticationProvider.superDigest=es:KiHfMOSWCTgPKpz78IL/6qO8AEE= -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
</span><span class='line'>[root@k8s zookeeper-3.4.10]# bin/zkServer.sh start
</span></code></pre></td></tr></table></div></figure>


<p>auth的权限比较有意思：自家兄弟添加、排除异己；permission按最新的算</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[zk: localhost:2181(CONNECTED) 21] setAcl /i auth::cdrwa,ip:0.0.0.0:cd
</span><span class='line'>...
</span><span class='line'>[zk: localhost:2181(CONNECTED) 22] getAcl /i
</span><span class='line'>'ip,'0.0.0.0
</span><span class='line'>: cd
</span><span class='line'>'digest,'es:KiHfMOSWCTgPKpz78IL/6qO8AEE=
</span><span class='line'>: cdrwa
</span><span class='line'>
</span><span class='line'># auth add
</span><span class='line'>[zk: localhost:2181(CONNECTED) 27] addauth digest m:m
</span><span class='line'>[zk: localhost:2181(CONNECTED) 28] addauth digest n:n
</span><span class='line'>[zk: localhost:2181(CONNECTED) 29] setAcl /i auth::cdrwa
</span><span class='line'>...
</span><span class='line'>[zk: localhost:2181(CONNECTED) 30] getAcl /i
</span><span class='line'>'digest,'es:KiHfMOSWCTgPKpz78IL/6qO8AEE=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'m:WZiIgWqJgd8EQVBh55Bslf/7JRc=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'n:TZ3f1UF7B75EF5g6qWR0VmEvb/s=
</span><span class='line'>: cdrwa
</span><span class='line'>
</span><span class='line'># perm
</span><span class='line'>[zk: localhost:2181(CONNECTED) 31] addauth digest z:z
</span><span class='line'>[zk: localhost:2181(CONNECTED) 32] addauth digest l:l
</span><span class='line'>[zk: localhost:2181(CONNECTED) 33] setAcl /i auth:z:z:cd
</span><span class='line'>...
</span><span class='line'>[zk: localhost:2181(CONNECTED) 34] getAcl /i
</span><span class='line'>'digest,'es:KiHfMOSWCTgPKpz78IL/6qO8AEE=
</span><span class='line'>: cd
</span><span class='line'>'digest,'m:WZiIgWqJgd8EQVBh55Bslf/7JRc=
</span><span class='line'>: cd
</span><span class='line'>'digest,'n:TZ3f1UF7B75EF5g6qWR0VmEvb/s=
</span><span class='line'>: cd
</span><span class='line'>'digest,'z:cOgtYxFOAwKiTCMigcN2j2fFI3c=
</span><span class='line'>: cd
</span><span class='line'>'digest,'l:gdlgatwJdq7uG8kFfIjcIZj0tnQ=
</span><span class='line'>: cd
</span><span class='line'>
</span><span class='line'>可以看到全部变成cd了
</span><span class='line'>
</span><span class='line'>[zk: localhost:2181(CONNECTED) 35] setAcl /i auth:z:z:cdraw
</span><span class='line'>...
</span><span class='line'>[zk: localhost:2181(CONNECTED) 36] getAcl /i               
</span><span class='line'>'digest,'es:KiHfMOSWCTgPKpz78IL/6qO8AEE=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'m:WZiIgWqJgd8EQVBh55Bslf/7JRc=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'n:TZ3f1UF7B75EF5g6qWR0VmEvb/s=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'z:cOgtYxFOAwKiTCMigcN2j2fFI3c=
</span><span class='line'>: cdrwa
</span><span class='line'>'digest,'l:gdlgatwJdq7uG8kFfIjcIZj0tnQ=
</span><span class='line'>: cdrwa
</span><span class='line'>
</span><span class='line'>全部变成cdrwa
</span></code></pre></td></tr></table></div></figure>


<p>我觉得用 auth 设置权限是最保险的，不会搞错了出现自己都访问不了的情况。</p>

<h2>后记</h2>

<p>ok，到此基本的知识点算大概了解了。还有自定义实现授权的provider，这有点高级了有兴趣的自己去看官方文档了。</p>

<p>但是因为权限没有继承关系，像一些开源项目用到zookeeper的话，怎么进行加密呢？所有子目录都一个个的加？或者自定义根路径（chroot）让别人猜不到？</p>

<p>还有像zookeeper自己的目录 /zookeeper ，怎么进行权限管理呢？</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[命令行调用Jenkins2.63打包]]></title>
    <link href="http://winseliu.com/blog/2017/08/31/jenkins-build-via-shell/"/>
    <updated>2017-08-31T01:26:40+08:00</updated>
    <id>http://winseliu.com/blog/2017/08/31/jenkins-build-via-shell</id>
    <content type="html"><![CDATA[<p>Jenkins给集成打包带来了很多的便捷，让不懂开发的同事也能轻松的打包。但是对于开发和运维来说，可能还需要在打包之外做一些事情，以及批量的处理N个打包。</p>

<p>对于研发来说，重复是最难忍受的。Jenkins可以直接通过api来调用查看和处理各种请求。</p>

<p>网络上资料其实挺多的。也有直接一个脚本直接搞定部署的。知其然知其所以然，还是需要自己下功夫理解人家的脚本这样才能更好的用（先不说自己写了）。主要的就是三个步骤：</p>

<ol>
<li>怎么登陆: <a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-Remoteaccess">JenkinsScriptConsole-Remoteaccess</a> .|. <a href="https://wiki.jenkins.io/display/JENKINS/Remote+access+API#RemoteaccessAPI-CSRFProtection">RemoteaccessAPI-CSRFProtection</a></li>
<li>执行build：<a href="http://www.inanzzz.com/index.php/post/jnrg/running-jenkins-build-via-command-line">Running jenkins jobs via command line</a> .|. <a href="https://www.nczonline.net/blog/2015/10/triggering-jenkins-builds-by-url/">Triggering Jenkins builds by URL</a></li>
<li>检查结果：<a href="https://gist.githubusercontent.com/julianchurchill/8780920/raw/ae3ab0c120857b0fe69fe3718d720cb4ef94c4b8/checkJenkins.sh">checkJenkins.sh</a></li>
</ol>


<h2>crumb</h2>

<p>首先来看看crumb是啥</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@iZ9416vn227Z opt]# curl -X POST $JENKINS_PROJ_AUTH_URL/build
</span><span class='line'>&lt;html&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"/&gt;
</span><span class='line'>&lt;title&gt;Error 403 No valid crumb was included in the request&lt;/title&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;&lt;h2&gt;HTTP ERROR 403&lt;/h2&gt;
</span><span class='line'>&lt;p&gt;Problem accessing /job/helloworld/build. Reason:
</span><span class='line'>&lt;pre&gt;    No valid crumb was included in the request&lt;/pre&gt;&lt;/p&gt;&lt;hr&gt;&lt;a href="http://eclipse.org/jetty"&gt;Powered by Jetty:// 9.4.z-SNAPSHOT&lt;/a&gt;&lt;hr/&gt;
</span><span class='line'>
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<p>这里<a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-RemoteaccesswithCSRFprotectionenabled">CSRF</a> 相当于jenkins做的一个权限控制，有两种方式处理：</p>

<p>方法一：取消控制</p>

<ul>
<li><a href="http://www.zhyea.com/2016/10/14/resolve-no-valid-crumb-was-included-in-the-request-error.html">no valid crumb was included in the request解决</a></li>
<li><a href="https://github.com/ghale/gradle-jenkins-plugin/issues/78#issuecomment-215783175">No valid crumb was included in the request</a></li>
</ul>


<p>在菜单 系统管理 –> Configure Global Security 中调整设置: 取消 防止跨站点请求伪造(Prevent Cross Site Request Forgery exploits) 的勾选。 如果还坚持要启用“防止跨站点请求伪造”，就需要先动态获取crumb。</p>

<p>方法二：获取token</p>

<ul>
<li><a href="https://stackoverflow.com/questions/16738441/how-to-request-for-crumb-issuer-for-jenkins">How to request for Crumb issuer for jenkins</a></li>
<li><a href="http://russellsimpkins.blogspot.jp/2014/10/calling-jenkins-job-with-bash-script.html">Calling a jenkins job with a bash script</a></li>
<li><a href="https://support.cloudbees.com/hc/en-us/articles/218889337-How-to-build-a-job-using-the-REST-API-and-cURL-">https://support.cloudbees.com/hc/en-us/articles/218889337-How-to-build-a-job-using-the-REST-API-and-cURL-</a></li>
</ul>


<p>通过URL: crumbIssuer/api/json 获取token的键值，然后把它附加到build请求的HEADER。</p>

<h2>命令行通过URL请求jenkins进行编译</h2>

<ul>
<li><a href="http://blog.csdn.net/xian312854159/article/details/41118245">使用shell脚本curl调用jenkins进行构建并判断是否构建成功 </a></li>
<li><a href="https://wiki.jenkins.io/display/JENKINS/Remote+access+API">Remote access API</a></li>
<li><a href="https://wiki.jenkins.io/display/JENKINS/Authenticating+scripted+clients">https://wiki.jenkins.io/display/JENKINS/Authenticating+scripted+clients</a></li>
<li><a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console">https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>JENKINS_ID="admin:PASSWORD"
</span><span class='line'>JENKINS_PROJ_AUTH_URL=http://$JENKINS_ID@localhost:18080/job/helloworld
</span><span class='line'>JENKINS_PROJ_URL=http://localhost:18080/job/helloworld
</span><span class='line'>
</span><span class='line'>curl $JENKINS_PROJ_AUTH_URL/lastBuild/api/json
</span><span class='line'>
</span><span class='line'>#Get the current configuration and save it locally
</span><span class='line'>curl -X GET $JENKINS_PROJ_URL/config.xml
</span><span class='line'>
</span><span class='line'>curl 'http://'$JENKINS_ID'@localhost:18080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
</span><span class='line'>Jenkins-Crumb:a4296173a91d900c11af07d932559fcd
</span><span class='line'>
</span><span class='line'>curl -X POST -H "Jenkins-Crumb:a4296173a91d900c11af07d932559fcd"  $JENKINS_PROJ_AUTH_URL/build
</span><span class='line'>
</span><span class='line'>curl -s $JENKINS_PROJ_AUTH_URL/lastBuild/api/json | jq .
</span><span class='line'>
</span><span class='line'># --- TODO ---
</span><span class='line'>
</span><span class='line'>progress（排队中）|pending（构建中），每三秒去重新获取结果进行判断  
</span><span class='line'>while grep -qE "In progress|pending" build.tmp2;  
</span><span class='line'>
</span><span class='line'>if grep -qE "Success" build.tmp2 ;then  
</span><span class='line'>elif grep -qE "Unstable" build.tmp2 ;then  
</span><span class='line'>elif grep -qE "Failed|Aborted" build.tmp2 ;then  
</span><span class='line'>echo "#Open Link: ${jobPage}${newbuild}/console see details"  
</span></code></pre></td></tr></table></div></figure>


<p>BuildName</p>

<ul>
<li><a href="https://wiki.jenkins.io/display/JENKINS/Build+Name+Setter+Plugin">https://wiki.jenkins.io/display/JENKINS/Build+Name+Setter+Plugin</a></li>
<li><a href="https://stackoverflow.com/questions/42172320/how-to-set-the-jenkins-build-name-based-on-some-conditions">https://stackoverflow.com/questions/42172320/how-to-set-the-jenkins-build-name-based-on-some-conditions</a></li>
<li><a href="https://stackoverflow.com/questions/30111298/how-to-use-build-name-setter-plugin">https://stackoverflow.com/questions/30111298/how-to-use-build-name-setter-plugin</a></li>
</ul>


<p>jenkins的使用案例</p>

<ul>
<li><a href="http://debugtalk.com/post/iOS-Android-Packing-with-Jenkins-details/">http://debugtalk.com/post/iOS-Android-Packing-with-Jenkins-details/</a></li>
</ul>


<h2>参考</h2>

<p>API使用</p>

<ul>
<li><a href="https://gist.githubusercontent.com/julianchurchill/8780920/raw/ae3ab0c120857b0fe69fe3718d720cb4ef94c4b8/checkJenkins.sh">https://gist.githubusercontent.com/julianchurchill/8780920/raw/ae3ab0c120857b0fe69fe3718d720cb4ef94c4b8/checkJenkins.sh</a></li>
<li><a href="https://www.nczonline.net/blog/2015/10/triggering-jenkins-builds-by-url/">Triggering Jenkins builds by URL</a></li>
</ul>


<p>登录/权限问题</p>

<ul>
<li><a href="https://stackoverflow.com/questions/10698419/how-can-a-jenkins-user-authentication-details-be-passed-to-a-script-which-uses">https://stackoverflow.com/questions/10698419/how-can-a-jenkins-user-authentication-details-be-passed-to-a-script-which-uses</a></li>
<li><a href="http://www.scmgalaxy.com/tutorials/ways-to-login-jenkins-using-command-line">http://www.scmgalaxy.com/tutorials/ways-to-login-jenkins-using-command-line</a></li>
<li><a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-Remoteaccess">https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console#JenkinsScriptConsole-Remoteaccess</a></li>
<li><a href="http://russellsimpkins.blogspot.jp/2014/10/calling-jenkins-job-with-bash-script.html">Calling a jenkins job with a bash script</a></li>
<li><a href="https://issues.jenkins-ci.org/browse/JENKINS-42200">No valid crumb was included in the request in kubernetes</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant创建自定义的BOX]]></title>
    <link href="http://winseliu.com/blog/2017/08/23/vagrant-create-your-own-box/"/>
    <updated>2017-08-23T07:04:17+08:00</updated>
    <id>http://winseliu.com/blog/2017/08/23/vagrant-create-your-own-box</id>
    <content type="html"><![CDATA[<p>在《奔跑吧Ansible》中接触了Vagrant+VirtualBox，但是感觉一般般，也没觉得很特别的：就自己安装虚拟机差不多嘛。</p>

<p>后面在网上了解了一些关于这两工具，很多人用来搭建开发环境，脑子瞬间被击中了&mdash;还可以这么玩。这样系统重装的时刻就不用那么纠结和犹豫了，很多软件都安装在VirtualBox里面，重装后，直接启动虚拟机，就一切的开发环境的软件就都回来了。还有集群的搭建也挺方便的：由于Vagrant是命令行的方式结合配置来启动了，非常方便。</p>

<p>官方网站 <a href="http://www.vagrantbox.es/">Vagrantbox.es</a> <a href="https://app.vagrantup.com/boxes/search">Discover Vagrant Boxes</a> 有提供一些镜像，如Centos6:</p>

<ul>
<li><a href="https://app.vagrantup.com/centos/boxes/6">https://app.vagrantup.com/centos/boxes/6</a></li>
<li><a href="https://app.vagrantup.com/matchy/boxes/centos6-i386">https://app.vagrantup.com/matchy/boxes/centos6-i386</a> 。</li>
</ul>


<p>但是网络提供的不总能满足需要。所以有时还得亲自下手从零开始创建自己的Box。制作Vagrant的Box需要遵循一些要求/规范，官网有提供文档和说明：</p>

<ul>
<li><a href="https://www.vagrantup.com/docs/boxes/base.html">https://www.vagrantup.com/docs/boxes/base.html</a></li>
<li><a href="https://www.vagrantup.com/docs/virtualbox/boxes.html">https://www.vagrantup.com/docs/virtualbox/boxes.html</a></li>
<li><a href="https://unifreak.github.io/tutorial/Making-my-first-vagrant-box">制作自己第一个 vagrant box</a></li>
<li><a href="http://xuclv.blog.51cto.com/5503169/1239351">如何制作一个vagrant的base box</a></li>
</ul>


<p>为啥用vagrant：<a href="https://www.oschina.net/translate/get-vagrant-up-and-running-in-no-time">https://www.oschina.net/translate/get-vagrant-up-and-running-in-no-time</a></p>

<blockquote><p>在本地开发爽。用Vagrant快，简单，并可帮助你同时管理多个开发环境。</p>

<p>想象一下，你正在和据说15人的团队开发一个应用程序。这个程序真是狂棒！它使用Laravel的PHP框架，Redis和Memcached，ImageMagick和GD的PHP模块，curl，MySQL和PostgreSQL， 甚至MongoDB。 另外，Laravel明确依赖PHP版本5.3.7或更高版本，以及mcrypt的PHP扩展。</p>

<p>理想情况下，你会希望团队所有的15人在开发这个应用程序时，都是相同的开发环境。 但是不是所有的开发团队，都有系统管理的专家或者培养一个系统管理。获得相同设置的开发环境可能是一个非常艰巨的任务。 最重要的是，有些人使用的是Mac，而其他人则使用Linux或Windows。在它之前，开发人员会纠结在无尽的配置中，用电脑扔墙而筋疲力尽。</p></blockquote>

<p>其实，步骤不多也不是很复杂，但是总会遇到一些特定环境的问题。下来是我制作的过程（Vagrant1.9+VirutalBox5.1+Centos6.9_i686）。</p>

<p>还有其他的优点：</p>

<ul>
<li>还有配置化后，就可以可以进行版本管理。</li>
<li>分享。</li>
</ul>


<h2>下载安装系统</h2>

<ul>
<li>下载安装 VirtualBox ：<a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a></li>
<li>下载安装 Vagrant ：<a href="http://www.vagrantup.com/">http://www.vagrantup.com/</a></li>
<li>操作系统 <a href="http://mirrors.zju.edu.cn/centos/6.9/isos/i386/">bin-DVD1.iso</a></li>
</ul>


<p>不要安装LiveDVD的版本会把桌面也安装了，系统大几个G，其实用不到图形界面。用DVD的安装没有mininal的系统。</p>

<h2>系统网络</h2>

<p>安装VirutalBox5.1完后，Windows宿主机多了一个 VirtualBox Host-Only Ethernet Adapter 本地网卡，可以先在VirtualBox菜单 [管理-全局设定-网络] 里删除Host-Only Network网卡。</p>

<p>在安装之前需要先了解VirtualBox的网卡的配置，它的选项/含义和VmWare不太一致，需要单独学习了解下：</p>

<ul>
<li>未指定： 相当于虚拟机没有插上网线的情况，此时与宿主机也连不通。</li>
<li>网络地址转换(NAT)：通过NAT转换仅通过HOST主机访问网络，但是访问不到虚拟机（单向的）。需要通过端口转发功能HOST主机才能连接到虚拟机。单机上网最简单的方式。</li>
<li>NAT网络</li>
<li>桥接网卡：虚拟机桥接到宿主机的一块网卡，直接与外部交换数据包，像是不经过宿主机一样。虚拟机能够设置一个独立的IP，所有网络功能完全和在网络中的真实机器一样(通过路由器来自动分配IP地址)。</li>
<li>内部网络：只虚拟机互通的网络。可以相互访问，前提是在设置网络时，两台虚拟机设置同一网络名称。</li>
<li>仅主机(Host-Only)网络：内部网络和桥接模式的混合，需要一个虚拟的网卡来配合。此时虚拟机可以和宿主机及宿主机所在的局域网通信，无法与外网通信。看F1帮助文档里面的，感觉和内部网络差不多，由于HOST主机 多了个网卡可以和HOST通信（通过Host Only网卡的IP），但虚拟机需要上网的话还需要再多配置一个桥接网络。</li>
<li>通用驱动</li>
</ul>


<p>网上的一些资料：</p>

<ul>
<li><a href="http://www.live-in.org/archives/789.html">http://www.live-in.org/archives/789.html</a></li>
<li><a href="https://liuliqiang.info/post/29/">https://liuliqiang.info/post/29/</a> 非常详细</li>
<li><a href="https://www.douban.com/group/topic/15558388/">https://www.douban.com/group/topic/15558388/</a> 和上一篇一样不知道谁抄谁，都看过就列在这里了</li>
<li><a href="https://serverfault.com/questions/225155/virtualbox-how-to-set-up-networking-so-both-host-and-guest-can-access-internet">VirtualBox: How to set up networking so both host and guest can access internet and talk to each other</a> NAT / host only;   use a Bridge Adapter 桥接</li>
<li><a href="https://superuser.com/questions/521072/cant-ping-guest-os-in-virtualbox-but-guests-can-ping-host">Can&rsquo;t ping guest OS in VirtualBox, but guests can ping host</a></li>
</ul>


<h2>配置</h2>

<p>安装系统后默认eth0的网卡是没有启用的。修改网络配置然后重启网络。</p>

<p>如果网卡启动失败，用 ifconfig -a 看看设备是不是eth0。</p>

<p>接下来就是连接系统，然后配置Vagrant了。</p>

<ul>
<li><a href="https://unifreak.github.io/tutorial/Making-my-first-vagrant-box">制作自己第一个 vagrant box</a></li>
<li><a href="http://xuclv.blog.51cto.com/5503169/1239351">如何制作一个vagrant的base box</a></li>
</ul>


<p>为了后面的配置更加顺利，需要先把网络调通。在虚拟机的黑窗口操作是非常不方便的，添加端口转发然后本地用Putty/git-ssh等工具登录系统操作 <a href="https://stackoverflow.com/questions/9885108/ssh-to-vagrant-box-in-windows">SSH to Vagrant box in Windows?</a> 。</p>

<p>接下来按照官网的说明进行配置：</p>

<ul>
<li><a href="https://www.vagrantup.com/docs/boxes/base.html#quot-vagrant-quot-user">https://www.vagrantup.com/docs/boxes/base.html#quot-vagrant-quot-user</a></li>
<li><a href="https://www.vagrantup.com/docs/virtualbox/boxes.html#to-install-via-the-command-line-">https://www.vagrantup.com/docs/virtualbox/boxes.html#to-install-via-the-command-line-</a></li>
<li><a href="https://www.vagrantup.com/docs/virtualbox/boxes.html#virtual-machine">https://www.vagrantup.com/docs/virtualbox/boxes.html#virtual-machine</a></li>
<li><a href="https://www.vagrantup.com/docs/boxes/base.html#testing-the-box">https://www.vagrantup.com/docs/boxes/base.html#testing-the-box</a></li>
</ul>


<p>步骤如下：</p>

<ol>
<li>增加帐号密码均为 vagrant ，root密码也是 vagrant</li>
<li>配置sudo</li>
<li>配置无密钥登录使用密钥进行登录，同时把insecure的 <a href="https://github.com/mitchellh/vagrant/tree/master/keys">vagrant的公钥</a> 写入authorized_key</li>
<li>安装tools</li>
<li>清理yum缓冲，tmp目录下的内容，以及其他的一些临时文件</li>
<li>删掉、禁用虚拟机多余的设备</li>
<li>第一个网卡设置为NAT（用于vagrant的端口转发，并且这网卡要boot启动啊！） <a href="https://www.vagrantup.com/docs/virtualbox/boxes.html#virtual-machine">boxes.html#virtual-machine</a></li>
<li>打包，进入到虚拟机存储的目录(可以通过【设置-高级】的备份位置确定），然后执行 <code>vagrant package --base centos6_i386</code></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# passwd
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# useradd vagrant
</span><span class='line'>[root@localhost ~]# passwd vagrant
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# echo 'vagrant ALL=(ALL) NOPASSWD: ALL' &gt;/etc/sudoers
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# su - vagrant
</span><span class='line'>[vagrant@localhost ~]$ mkdir .ssh && chmod 700 .ssh && cd .ssh
</span><span class='line'>[vagrant@localhost .ssh]$ curl https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub -o authorized_keys 
</span><span class='line'>[vagrant@localhost .ssh]$ chmod 600 authorized_keys 
</span></code></pre></td></tr></table></div></figure>


<p>这里单独把安装tools执行的命令抽取出来：</p>

<ul>
<li><a href="https://superuser.com/questions/412527/modprobe-vboxguest-failed">https://superuser.com/questions/412527/modprobe-vboxguest-failed</a> 关键</li>
<li><a href="https://www.if-not-true-then-false.com/2010/install-virtualbox-guest-additions-on-fedora-centos-red-hat-rhel/comment-page-5/#comment-121648">https://www.if-not-true-then-false.com/2010/install-virtualbox-guest-additions-on-fedora-centos-red-hat-rhel/comment-page-5/#comment-121648</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># wget http://download.virtualbox.org/virtualbox/5.1.26/VBoxGuestAdditions_5.1.26.iso
</span><span class='line'>curl -o VBoxGuestAdditions_5.1.26.iso http://download.virtualbox.org/virtualbox/5.1.26/VBoxGuestAdditions_5.1.26.iso
</span><span class='line'>mkdir /media/VBoxGuestAdditions
</span><span class='line'>mount -o loop,ro VBoxGuestAdditions_5.1.26.iso /media/VBoxGuestAdditions
</span></code></pre></td></tr></table></div></figure>


<p>事情总归不会一帆风顺的，依赖需要进行处理，如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# sh /media/VBoxGuestAdditions/VBoxLinuxAdditions.run 
</span><span class='line'>Verifying archive integrity... All good.
</span><span class='line'>Uncompressing VirtualBox 5.1.26 Guest Additions for Linux...........
</span><span class='line'>VirtualBox Guest Additions installer
</span><span class='line'>Copying additional installer modules ...
</span><span class='line'>Installing additional modules ...
</span><span class='line'>vboxadd.sh: Starting the VirtualBox Guest Additions.
</span><span class='line'>Failed to set up service vboxadd, please check the log file
</span><span class='line'>/var/log/VBoxGuestAdditions.log for details.
</span><span class='line'>[root@localhost ~]# cat /var/log/VBoxGuestAdditions.log
</span><span class='line'>
</span><span class='line'>vboxadd.sh: failed: Look at /var/log/vboxadd-install.log to find out what went wrong.
</span><span class='line'>vboxadd.sh: failed: Look at /var/log/vboxadd-install.log to find out what went wrong.
</span><span class='line'>vboxadd.sh: failed: modprobe vboxguest failed.
</span><span class='line'>[root@localhost ~]# cat /var/log/vboxadd-install.log
</span><span class='line'>/tmp/vbox.0/Makefile.include.header:112: *** Error: unable to find the sources of your current Linux kernel. Specify KERN_DIR=&lt;directory&gt; and run Make again.  Stop.
</span><span class='line'>Creating user for the Guest Additions.
</span><span class='line'>Creating udev rule for the Guest Additions kernel module.
</span><span class='line'>
</span><span class='line'># 处理
</span><span class='line'>[root@localhost ~]# yum install gcc make patch glibc-headers glibc-devel kernel-headers -y 
</span><span class='line'>[root@localhost ~]# yum install kernel-devel # / yum install kernel-devel-2.6.32-696.el6.i686  
</span><span class='line'>[root@localhost ~]# export KERN_DIR=/usr/src/kernels/2.6.32-696.6.3.el6.i686  &lt;- 根据情况改
</span><span class='line'>[root@localhost ~]# sh /media/VBoxGuestAdditions/VBoxLinuxAdditions.run 
</span><span class='line'>Verifying archive integrity... All good.
</span><span class='line'>Uncompressing VirtualBox 5.1.26 Guest Additions for Linux...........
</span><span class='line'>VirtualBox Guest Additions installer
</span><span class='line'>Removing installed version 5.1.26 of VirtualBox Guest Additions...
</span><span class='line'>vboxadd.sh: Stopping VirtualBox Additions.
</span><span class='line'>Copying additional installer modules ...
</span><span class='line'>Installing additional modules ...
</span><span class='line'>vboxadd.sh: Starting the VirtualBox Guest Additions.
</span><span class='line'>
</span><span class='line'>Could not find the X.Org or XFree86 Window System, skipping.
</span></code></pre></td></tr></table></div></figure>


<p>安装配置(jdk/tomcat/mysql/pgsql/redis/&hellip;)好后，打包前清理缓冲：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum clean all
</span><span class='line'>history -c
</span><span class='line'>rm -rf ~/.bash_history
</span><span class='line'>rm -rf /tmp/* /var/log/* /var/cache/*</span></code></pre></td></tr></table></div></figure>


<p>然后打开windows的命令行，进入到虚拟机磁盘文件目录打包：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Users\XXXX\VirtualBox VMs\centos6_i386&gt;vagrant package --base centos6_i386
</span><span class='line'>2017/08/24 07:18:04 launcher: detected 32bit Windows installation
</span><span class='line'>==&gt; centos6_i386: Clearing any previously set forwarded ports...
</span><span class='line'>==&gt; centos6_i386: Exporting VM...
</span><span class='line'>==&gt; centos6_i386: Compressing package to: C:/Users/XXXX/VirtualBox VMs/centos6_i386/package.box
</span></code></pre></td></tr></table></div></figure>


<h2>搭建开发环境</h2>

<ul>
<li><a href="https://blog.smdcn.net/article/1308.html">使用Vagrant在Windows下部署开发环境</a> 非常好的一篇文章</li>
<li><a href="https://blog.codecentric.de/en/2012/02/automated-virtual-test-environments-with-vagrant-and-puppet/">Automated virtual test-environments with Vagrant and Puppet</a></li>
<li><a href="https://favoorr.github.io/2017/01/06/import-vagrant-box-manually/">手工下载和导入 vagrant 镜像</a> 现在下载很快啊，尽管如此也是能学习一种新的备用方法。</li>
</ul>


<h2>实际操作命令</h2>

<h2>重装系统后再绑定</h2>

<p>重新安装后，vagrant和virtualbox在C盘用户目录的文件没有保存。再次启动发现vagrant是去重新启动一个新的虚拟机。</p>

<p>虚拟机嘛，总还是台机器，不会和对待docker那样操作。很多的文件、配置等等还是存储在虚拟机里面的。现在vagrant和virtualbox脱钩了。我们要做的就是把他们再绑定起来:</p>

<ul>
<li>首先启动直接双击box，启动虚拟机。会在用户目录.VirtualBox下面产生/修改VirtualBox.xml，打开文件找到当前虚拟机MachineEntry对应的uuid。</li>
<li>打开原vagrant的目录下 .vagrant\machines\default\virtualbox 的id文件。内容替换为virtualbox的最新的id。</li>
<li>上面的步骤已经把两者关联起来了，但是无密钥登录不行了。需要重新把github上的内容写入到虚拟机用户vagrant的authorzied_key里面。</li>
</ul>


<p>至此，就可以用 vagrant up 启动虚拟机了。还原绑定成功。</p>

<h2>其他</h2>

<ul>
<li><a href="https://github.com/guigarage/vagrant-binding">java invoke vagrant</a></li>
</ul>


<p>vagrant + virtualbox + nginx cache</p>

<ul>
<li><a href="https://stackoverflow.com/questions/9479117/vagrant-virtualbox-apache2-strange-cache-behaviour">https://stackoverflow.com/questions/9479117/vagrant-virtualbox-apache2-strange-cache-behaviour</a></li>
<li><a href="https://github.com/mitchellh/vagrant/issues/351#issuecomment-1339640">https://github.com/mitchellh/vagrant/issues/351#issuecomment-1339640</a></li>
</ul>


<p>vagrant + java deveploe env</p>

<ul>
<li><a href="https://github.com/rob-murray/vagrant-javadev-box/blob/master/Vagrantfile">https://github.com/rob-murray/vagrant-javadev-box/blob/master/Vagrantfile</a> 案例</li>
<li><a href="https://github.com/rob-murray/vagrant-javadev-box/blob/master/puppet/manifests/base.pp">https://github.com/rob-murray/vagrant-javadev-box/blob/master/puppet/manifests/base.pp</a></li>
<li><a href="https://github.com/spanneberg/vagrant-puppet-demo/blob/master/files/my.cnf">https://github.com/spanneberg/vagrant-puppet-demo/blob/master/files/my.cnf</a></li>
<li><a href="https://blog.codecentric.de/en/2012/02/automated-virtual-test-environments-with-vagrant-and-puppet/">https://blog.codecentric.de/en/2012/02/automated-virtual-test-environments-with-vagrant-and-puppet/</a></li>
</ul>


<p>git</p>

<ul>
<li><a href="https://stackoverflow.com/questions/34252265/how-to-start-mingw-console-gitbash-from-command-line-on-windows">https://stackoverflow.com/questions/34252265/how-to-start-mingw-console-gitbash-from-command-line-on-windows</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kubeadm部署k8s(资源已有)]]></title>
    <link href="http://winseliu.com/blog/2017/08/13/kubeadm-install-k8s-on-centos7-with-resources/"/>
    <updated>2017-08-13T08:05:33+08:00</updated>
    <id>http://winseliu.com/blog/2017/08/13/kubeadm-install-k8s-on-centos7-with-resources</id>
    <content type="html"><![CDATA[<p>上一篇安装的文章这种代理，这种问题显的有点乱。在本机虚拟机安装调通后，今天把测试环境也升级了一下。安装需要的rpm和docker images可以通过百度网盘下载：<a href="http://pan.baidu.com/s/1hrRs5MW">http://pan.baidu.com/s/1hrRs5MW</a> 。</p>

<p>时间同步，主机名，/etc/hosts，防火墙，selinux, 无密钥登录，安装docker-1.12.6 这些都已经配置好了的。</p>

<ul>
<li>机器：cu[1-5]</li>
<li>主节点： cu3</li>
<li>跳板机： cu2（有外网IP）</li>
</ul>


<h2>首先做YUM本地仓库，把镜像导入到node节点</h2>

<p>首先在一台主机上部署YUM本地仓库</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu2 ~]# cd /var/www/html/kubernetes/
</span><span class='line'>[root@cu2 kubernetes]# createrepo .
</span><span class='line'>[root@cu2 kubernetes]# ll
</span><span class='line'>total 42500
</span><span class='line'>-rw-r--r-- 1 hadoop hadoop  8974214 Aug 10 15:22 1a6f5f73f43077a50d877df505481e5a3d765c979b89fda16b8b9622b9ebd9a4-kubeadm-1.7.2-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 hadoop hadoop 17372710 Aug 10 15:22 1e508e26f2b02971a7ff5f034b48a6077d613e0b222e0ec973351117b4ff45ea-kubelet-1.7.2-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 hadoop hadoop  9361006 Aug 10 15:22 dc8329515fc3245404fea51839241b58774e577d7736f99f21276e764c309db5-kubectl-1.7.2-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 hadoop hadoop  7800562 Aug 10 15:22 e7a4403227dd24036f3b0615663a371c4e07a95be5fee53505e647fd8ae58aa6-kubernetes-cni-0.5.1-0.x86_64.rpm
</span><span class='line'>drwxr-xr-x 2 root   root       4096 Aug 10 15:58 repodata
</span></code></pre></td></tr></table></div></figure>


<p>（所有node）导入新镜像</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>在cu2上操作，导入docker镜像
</span><span class='line'>
</span><span class='line'>docker load &lt;/home/hadoop/kubeadm.tar
</span><span class='line'>ssh cu1 docker load &lt;/home/hadoop/kubeadm.tar 
</span><span class='line'>ssh cu3 docker load &lt;/home/hadoop/kubeadm.tar
</span><span class='line'>ssh cu4 docker load &lt;/home/hadoop/kubeadm.tar
</span><span class='line'>ssh cu5 docker load &lt;/home/hadoop/kubeadm.tar
</span><span class='line'>
</span><span class='line'>Loaded image: gcr.io/google_containers/etcd-amd64:3.0.17
</span><span class='line'>Loaded image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.3
</span><span class='line'>Loaded image: gcr.io/google_containers/kube-controller-manager-amd64:v1.7.2
</span><span class='line'>Loaded image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.4
</span><span class='line'>Loaded image: gcr.io/google_containers/heapster-amd64:v1.3.0
</span><span class='line'>Loaded image: gcr.io/google_containers/kube-scheduler-amd64:v1.7.2
</span><span class='line'>Loaded image: gcr.io/google_containers/heapster-grafana-amd64:v4.4.1
</span><span class='line'>Loaded image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.4
</span><span class='line'>Loaded image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.4
</span><span class='line'>Loaded image: centos:centos6
</span><span class='line'>Loaded image: gcr.io/google_containers/heapster-influxdb-amd64:v1.1.1
</span><span class='line'>Loaded image: gcr.io/google_containers/pause-amd64:3.0
</span><span class='line'>Loaded image: nginx:latest
</span><span class='line'>Loaded image: gcr.io/google_containers/kube-apiserver-amd64:v1.7.2
</span><span class='line'>Loaded image: gcr.io/google_containers/kube-proxy-amd64:v1.7.2
</span><span class='line'>Loaded image: quay.io/coreos/flannel:v0.8.0-amd64
</span></code></pre></td></tr></table></div></figure>


<p>YUM仓库配置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>在cu2上操作
</span><span class='line'>
</span><span class='line'>cat &gt; /etc/yum.repos.d/dta.repo  &lt;&lt;EOF
</span><span class='line'>[K8S]
</span><span class='line'>name=K8S Local
</span><span class='line'>baseurl=http://cu2:801/kubernetes
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>for h in cu{1,3:5} ; do scp /etc/yum.repos.d/dta.repo $h:/etc/yum.repos.d/ ; done
</span></code></pre></td></tr></table></div></figure>


<h2>安装kubeadm、kubelet</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pdsh -w cu[1-5] "yum clean all; yum install -y kubelet kubeadm; systemctl enable kubelet; systemctl start kubelet "
</span></code></pre></td></tr></table></div></figure>


<p>问题1</p>

<p>启动完以后，查看 /var/log/messages 日志有如下错误：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Aug 12 23:33:38 cu5 kubelet: error: failed to run Kubelet: invalid kubeconfig: stat /etc/kubernetes/kubelet.conf: no such file or directory</span></code></pre></td></tr></table></div></figure>


<p>不用理会啊，继续执行后面的配置（kubeadm才开始配置）。</p>

<h2>使用kubeadm部署集群</h2>

<h4>master节点</h4>

<p>初始化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 ~]# kubeadm init --skip-preflight-checks --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.7.2 </span></code></pre></td></tr></table></div></figure>


<p>启动后会卡在了 <strong> Created API client, waiting for the control plane to become ready </strong> ， 不要关闭当前的窗口。新开一个窗口，查看并定位解决错误：</p>

<p>问题2</p>

<p>新打开一个窗口，查看 /var/log/messages 有如下错误：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Aug 12 23:40:10 cu3 kubelet: error: failed to run Kubelet: failed to create kubelet: misconfiguration: kubelet cgroup driver: "systemd" is different from docker cgroup driver: "cgroupfs"</span></code></pre></td></tr></table></div></figure>


<p>docker和kubelet的cgroup driver不一样，修改kubelet的配置。把docker启动参数 masq 一起改了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 ~]# sed -i 's/KUBELET_CGROUP_ARGS=--cgroup-driver=systemd/KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
</span><span class='line'>[root@cu3 ~]# sed -i 's#/usr/bin/dockerd.*#/usr/bin/dockerd --ip-masq=false#' /usr/lib/systemd/system/docker.service
</span><span class='line'>
</span><span class='line'>[root@cu3 ~]# systemctl daemon-reload; systemctl restart docker kubelet 
</span></code></pre></td></tr></table></div></figure>


<p>多开几个窗口来解决问题，不会影响kubeadm运行的。就是说，由于其他的问题导致kubeadm中间卡住，只要你解决了问题，kubeadm就会继续配置直到成功。</p>

<p>初始化完后，窗口完整日志如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 ~]# kubeadm init --skip-preflight-checks --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.7.2 
</span><span class='line'>[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.
</span><span class='line'>[init] Using Kubernetes version: v1.7.2
</span><span class='line'>[init] Using Authorization modes: [Node RBAC]
</span><span class='line'>[preflight] Skipping pre-flight checks
</span><span class='line'>[kubeadm] WARNING: starting in 1.8, tokens expire after 24 hours by default (if you require a non-expiring token use --token-ttl 0)
</span><span class='line'>[certificates] Generated CA certificate and key.
</span><span class='line'>[certificates] Generated API server certificate and key.
</span><span class='line'>[certificates] API Server serving cert is signed for DNS names [cu3 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.0.148]
</span><span class='line'>[certificates] Generated API server kubelet client certificate and key.
</span><span class='line'>[certificates] Generated service account token signing key and public key.
</span><span class='line'>[certificates] Generated front-proxy CA certificate and key.
</span><span class='line'>[certificates] Generated front-proxy client certificate and key.
</span><span class='line'>[certificates] Valid certificates and keys now exist in "/etc/kubernetes/pki"
</span><span class='line'>[kubeconfig] Wrote KubeConfig file to disk: "/etc/kubernetes/controller-manager.conf"
</span><span class='line'>[kubeconfig] Wrote KubeConfig file to disk: "/etc/kubernetes/scheduler.conf"
</span><span class='line'>[kubeconfig] Wrote KubeConfig file to disk: "/etc/kubernetes/admin.conf"
</span><span class='line'>[kubeconfig] Wrote KubeConfig file to disk: "/etc/kubernetes/kubelet.conf"
</span><span class='line'>[apiclient] Created API client, waiting for the control plane to become ready
</span><span class='line'> [apiclient] All control plane components are healthy after 494.001036 seconds
</span><span class='line'>[token] Using token: ad430d.beff5be4b98dceec
</span><span class='line'>[apiconfig] Created RBAC rules
</span><span class='line'>[addons] Applied essential addon: kube-proxy
</span><span class='line'>[addons] Applied essential addon: kube-dns
</span><span class='line'>
</span><span class='line'>Your Kubernetes master has initialized successfully!
</span><span class='line'>
</span><span class='line'>To start using your cluster, you need to run (as a regular user):
</span><span class='line'>
</span><span class='line'>  mkdir -p $HOME/.kube
</span><span class='line'>  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
</span><span class='line'>  sudo chown $(id -u):$(id -g) $HOME/.kube/config
</span><span class='line'>
</span><span class='line'>You should now deploy a pod network to the cluster.
</span><span class='line'>Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
</span><span class='line'>  http://kubernetes.io/docs/admin/addons/
</span><span class='line'>
</span><span class='line'>You can now join any number of machines by running the following on each node
</span><span class='line'>as root:
</span><span class='line'>
</span><span class='line'>  kubeadm join --token ad430d.beff5be4b98dceec 192.168.0.148:6443
</span></code></pre></td></tr></table></div></figure>


<p>然后按照上面的提示，把客户端kubectl要用的配置准备好：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 ~]#   mkdir -p $HOME/.kube
</span><span class='line'>[root@cu3 ~]#   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
</span><span class='line'>[root@cu3 ~]#   sudo chown $(id -u):$(id -g) $HOME/.kube/config
</span></code></pre></td></tr></table></div></figure>


<p>到这里K8S的基础服务controller，apiserver，scheduler是起来了，但是dns还是有问题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 kubeadm]# kubectl get pods --all-namespaces
</span><span class='line'>NAMESPACE     NAME                          READY     STATUS    RESTARTS   AGE
</span><span class='line'>kube-system   etcd-cu3                      1/1       Running   0          6m
</span><span class='line'>kube-system   kube-apiserver-cu3            1/1       Running   0          5m
</span><span class='line'>kube-system   kube-controller-manager-cu3   1/1       Running   0          6m
</span><span class='line'>kube-system   kube-dns-2425271678-wwnkp     0/3       Pending   0          6m
</span><span class='line'>kube-system   kube-proxy-ptnlx              1/1       Running   0          6m
</span><span class='line'>kube-system   kube-scheduler-cu3            1/1       Running   0          6m
</span></code></pre></td></tr></table></div></figure>


<p>dns的容器是使用bridge网络，需要配置网络才能跑起来。有如下错误日志：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Aug 12 23:54:04 cu3 kubelet: W0812 23:54:04.800316   12886 cni.go:189] Unable to update cni config: No networks found in /etc/cni/net.d
</span><span class='line'>Aug 12 23:54:04 cu3 kubelet: E0812 23:54:04.800472   12886 kubelet.go:2136] Container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized</span></code></pre></td></tr></table></div></figure>


<p>下载 <a href="https://github.com/winse/docker-hadoop/tree/master/kube-deploy/kubeadm">https://github.com/winse/docker-hadoop/tree/master/kube-deploy/kubeadm</a> 目录下的 flannel 配置：</p>

<p>在官网的基础上 cni-conf.json 增加了： <code>"ipMasq": false,</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 配置网络
</span><span class='line'>[root@cu3 kubeadm]# kubectl apply -f kube-flannel.yml 
</span><span class='line'>kubectl apply -f kube-flannel-rbac.yml 
</span><span class='line'>serviceaccount "flannel" created
</span><span class='line'>configmap "kube-flannel-cfg" created
</span><span class='line'>daemonset "kube-flannel-ds" created
</span><span class='line'>[root@cu3 kubeadm]# kubectl apply -f kube-flannel-rbac.yml 
</span><span class='line'>clusterrole "flannel" created
</span><span class='line'>clusterrolebinding "flannel" created
</span><span class='line'>
</span><span class='line'># 等待一段时间后，dns的pods也启动好了
</span><span class='line'>[root@cu3 kubeadm]# kubectl get pods --all-namespaces
</span><span class='line'>NAMESPACE     NAME                          READY     STATUS    RESTARTS   AGE
</span><span class='line'>kube-system   etcd-cu3                      1/1       Running   0          7m
</span><span class='line'>kube-system   kube-apiserver-cu3            1/1       Running   0          7m
</span><span class='line'>kube-system   kube-controller-manager-cu3   1/1       Running   0          7m
</span><span class='line'>kube-system   kube-dns-2425271678-wwnkp     3/3       Running   0          8m
</span><span class='line'>kube-system   kube-flannel-ds-dbvkj         2/2       Running   0          38s
</span><span class='line'>kube-system   kube-proxy-ptnlx              1/1       Running   0          8m
</span><span class='line'>kube-system   kube-scheduler-cu3            1/1       Running   0          7m</span></code></pre></td></tr></table></div></figure>


<h4>node节点部署</h4>

<p>配置kubelet、docker</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sed -i 's/KUBELET_CGROUP_ARGS=--cgroup-driver=systemd/KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
</span><span class='line'>sed -i 's#/usr/bin/dockerd.*#/usr/bin/dockerd --ip-masq=false#' /usr/lib/systemd/system/docker.service 
</span><span class='line'>
</span><span class='line'>systemctl daemon-reload; systemctl restart docker kubelet </span></code></pre></td></tr></table></div></figure>


<p>注意：加了 ip-masq=false 后，docker0就不能上外网了。也就是单独起的docker容器不能上外网！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ExecStart=/usr/bin/dockerd --ip-masq=false</span></code></pre></td></tr></table></div></figure>


<p>加入集群</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubeadm join --token ad430d.beff5be4b98dceec 192.168.0.148:6443 --skip-preflight-checks
</span><span class='line'>
</span><span class='line'>[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.
</span><span class='line'>[preflight] Skipping pre-flight checks
</span><span class='line'>[discovery] Trying to connect to API Server "192.168.0.148:6443"
</span><span class='line'>[discovery] Created cluster-info discovery client, requesting info from "https://192.168.0.148:6443"
</span><span class='line'>[discovery] Cluster info signature and contents are valid, will use API Server "https://192.168.0.148:6443"
</span><span class='line'>[discovery] Successfully established connection with API Server "192.168.0.148:6443"
</span><span class='line'>[bootstrap] Detected server version: v1.7.2
</span><span class='line'>[bootstrap] The server supports the Certificates API (certificates.k8s.io/v1beta1)
</span><span class='line'>[csr] Created API client to obtain unique certificate for this node, generating keys and certificate signing request
</span><span class='line'>[csr] Received signed certificate from the API server, generating KubeConfig...
</span><span class='line'>[kubeconfig] Wrote KubeConfig file to disk: "/etc/kubernetes/kubelet.conf"
</span><span class='line'>
</span><span class='line'>Node join complete:
</span><span class='line'>* Certificate signing request sent to master and response
</span><span class='line'>  received.
</span><span class='line'>* Kubelet informed of new secure connection details.
</span><span class='line'>
</span><span class='line'>Run 'kubectl get nodes' on the master to see this machine join.</span></code></pre></td></tr></table></div></figure>


<p>CU2是跳板机，把kubectl的config配置拷贝过来，然后就可以在CU2上面运行命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu2 kube-deploy]# kubectl get nodes
</span><span class='line'>NAME      STATUS     AGE         VERSION
</span><span class='line'>cu2       NotReady   &lt;invalid&gt;   v1.7.2
</span><span class='line'>cu3       Ready      25m         v1.7.2
</span><span class='line'>
</span><span class='line'>[root@cu2 kube-deploy]# kubectl proxy 
</span><span class='line'>Starting to serve on 127.0.0.1:8001</span></code></pre></td></tr></table></div></figure>


<p>我代理做在这台机器啊 <a href="http://localhost:8001/ui">http://localhost:8001/ui</a>。。。咔咔</p>

<p>5台机器都添加后：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 ~]# kubectl get nodes 
</span><span class='line'>NAME      STATUS    AGE       VERSION
</span><span class='line'>cu1       Ready     32s       v1.7.2
</span><span class='line'>cu2       Ready     3m        v1.7.2
</span><span class='line'>cu3       Ready     29m       v1.7.2
</span><span class='line'>cu4       Ready     26s       v1.7.2
</span><span class='line'>cu5       Ready     20s       v1.7.2</span></code></pre></td></tr></table></div></figure>


<p>节点防火墙(由于是云主机，增加防火墙)：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=trusted --add-source=192.168.0.0/16 --permanent 
</span><span class='line'>firewall-cmd --zone=trusted --add-source=10.0.0.0/8 --permanent 
</span><span class='line'>firewall-cmd --complete-reload</span></code></pre></td></tr></table></div></figure>


<h2>SOURCE IP测试</h2>

<p>Sourceip的问题应该不存在。。。看了iptables-save的信息，没有cni0/cbr0的相关的数据</p>

<p>还是再来测一遍：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl run centos --image=cu.eshore.cn/library/java:jdk8 --command -- vi 
</span><span class='line'>kubectl scale --replicas=4 deployment/centos
</span><span class='line'>
</span><span class='line'>[root@cu2 kube-deploy]# pods
</span><span class='line'>NAMESPACE     NAME                                    READY     STATUS    RESTARTS   AGE         IP              NODE
</span><span class='line'>default       centos-3954723268-62tpc                 1/1       Running   0          &lt;invalid&gt;   10.244.2.2      cu1
</span><span class='line'>default       centos-3954723268-6cmf9                 1/1       Running   0          &lt;invalid&gt;   10.244.1.2      cu2
</span><span class='line'>default       centos-3954723268-blfc4                 1/1       Running   0          &lt;invalid&gt;   10.244.3.2      cu4
</span><span class='line'>default       centos-3954723268-tb1rn                 1/1       Running   0          &lt;invalid&gt;   10.244.4.2      cu5
</span><span class='line'>default       nexus-djr9c                             1/1       Running   0          2m          192.168.0.37    cu1
</span><span class='line'>
</span><span class='line'># ping互通没问题 TEST
</span><span class='line'>
</span><span class='line'>[root@cu2 hadoop]# ./pod_bash centos-3954723268-62tpc default
</span><span class='line'>[root@centos-3024873821-4490r /]# ping 10.244.4.2 -c 1
</span><span class='line'>
</span><span class='line'># 源IP没问题 TEST
</span><span class='line'>
</span><span class='line'>[root@centos-3954723268-62tpc opt]# yum install epel-release -y  
</span><span class='line'>[root@centos-3954723268-62tpc opt]# yum install -y nginx 
</span><span class='line'>[root@centos-3954723268-62tpc opt]# service nginx start
</span><span class='line'>
</span><span class='line'>[root@centos-3954723268-blfc4 opt]# curl 10.244.2.2
</span><span class='line'>[root@centos-3954723268-tb1rn opt]# curl 10.244.2.2
</span><span class='line'>
</span><span class='line'>[root@centos-3954723268-62tpc opt]# less /var/log/nginx/access.log 
</span></code></pre></td></tr></table></div></figure>


<h4>DNS</h4>

<p>奇了怪了，这次重新安装DNS是没问题的，heaspter安装一次通过。</p>

<p>在cu3起的pods上执行 <code>nslookup kubernetes.default</code> 也是通的！</p>

<h4>监控</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># heaspter
</span><span class='line'>[root@cu2 kubeadm]# kubectl apply -f heapster/influxdb/
</span><span class='line'>deployment "monitoring-grafana" created
</span><span class='line'>service "monitoring-grafana" created
</span><span class='line'>serviceaccount "heapster" created
</span><span class='line'>deployment "heapster" created
</span><span class='line'>service "heapster" created
</span><span class='line'>deployment "monitoring-influxdb" created
</span><span class='line'>service "monitoring-influxdb" created
</span><span class='line'>[root@cu2 kubeadm]# kubectl apply -f heapster/rbac/
</span><span class='line'>clusterrolebinding "heapster" created
</span><span class='line'>
</span><span class='line'># dashboard
</span><span class='line'>[root@cu2 kubeadm]# kubectl apply -f kubernetes-dashboard.yaml 
</span><span class='line'>serviceaccount "kubernetes-dashboard" created
</span><span class='line'>clusterrolebinding "kubernetes-dashboard" created
</span><span class='line'>deployment "kubernetes-dashboard" created
</span><span class='line'>service "kubernetes-dashboard" created
</span><span class='line'>
</span><span class='line'>[root@cu2 kubeadm]# kubectl get service --all-namespaces
</span><span class='line'>NAMESPACE     NAME                   CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE
</span><span class='line'>default       kubernetes             10.96.0.1       &lt;none&gt;        443/TCP         18m
</span><span class='line'>kube-system   kube-dns               10.96.0.10      &lt;none&gt;        53/UDP,53/TCP   18m
</span><span class='line'>kube-system   kubernetes-dashboard   10.104.165.81   &lt;none&gt;        80/TCP          5m</span></code></pre></td></tr></table></div></figure>


<p>等一小段时间，查看所有的服务：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu2 kubeadm]# kubectl get services --all-namespaces
</span><span class='line'>NAMESPACE     NAME                   CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE
</span><span class='line'>default       kubernetes             10.96.0.1        &lt;none&gt;        443/TCP         2h
</span><span class='line'>kube-system   heapster               10.102.176.168   &lt;none&gt;        80/TCP          3m
</span><span class='line'>kube-system   kube-dns               10.96.0.10       &lt;none&gt;        53/UDP,53/TCP   2h
</span><span class='line'>kube-system   kubernetes-dashboard   10.110.2.118     &lt;none&gt;        80/TCP          2m
</span><span class='line'>kube-system   monitoring-grafana     10.106.251.155   &lt;none&gt;        80/TCP          3m
</span><span class='line'>kube-system   monitoring-influxdb    10.100.168.147   &lt;none&gt;        8086/TCP        3m</span></code></pre></td></tr></table></div></figure>


<p>直接访问 10.106.251.155 或者查看 monitoring的pod 日志，查看heaspter的状态。dashboard上面出图要等一小段时间才行。</p>

<p>如果通过 monitoring-grafana 的IP访问能看到CLUSTER和POD的监控图，但是dashboard上的图就是出不来，可以重新部署dashboard：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl delete -f kubernetes-dashboard.yaml 
</span><span class='line'>kubectl create -f kubernetes-dashboard.yaml </span></code></pre></td></tr></table></div></figure>


<p>到此整个K8S就在测试环境上重新运行起来了。harbor就不安装了，平时没怎么用，也就5台机器直接save然后load工作量也不多。</p>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/kubernetes/kubernetes/issues/40969">https://github.com/kubernetes/kubernetes/issues/40969</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI4MTQyMDAxMA==&amp;mid=2247483665&amp;idx=1&amp;sn=d8b61666fe0a0965336d15250e2648cb&amp;scene=0">http://mp.weixin.qq.com/s?__biz=MzI4MTQyMDAxMA==&amp;mid=2247483665&amp;idx=1&amp;sn=d8b61666fe0a0965336d15250e2648cb&amp;scene=0</a></li>
<li><a href="http://cizixs.com/2017/05/23/container-network-cni">http://cizixs.com/2017/05/23/container-network-cni</a></li>
<li><a href="https://github.com/containernetworking/cni/blob/master/SPEC.md#network-configuration">https://github.com/containernetworking/cni/blob/master/SPEC.md#network-configuration</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[保护/加密JAVA代码]]></title>
    <link href="http://winseliu.com/blog/2017/08/10/java-bytecode-security/"/>
    <updated>2017-08-10T02:10:39+08:00</updated>
    <id>http://winseliu.com/blog/2017/08/10/java-bytecode-security</id>
    <content type="html"><![CDATA[<p>由于Java代码生成的是中间过程字节码，javap以及一些反编译的工具基本能看代码的大概，对于提供给客户的代码需要做一些处理：混淆或者加密。下面分几块把在实际操作过程中参考的内容罗列出来，希望对看到本文并感兴趣的你有所帮助。</p>

<h2>自定义ClassLoader</h2>

<p>混淆+ClassLoader</p>

<ul>
<li><a href="http://www.voidcn.com/blog/zmx729618/article/p-4375840.html">java源代码加密+使用proguard混淆java web项目代码+自定义Classloader</a> 思路不错</li>
</ul>


<p>自定义ClassLoader并用Java实现解密</p>

<ul>
<li><a href="http://www.aspphp.online/bianchen/java/gyjava/201701/112687.html">利用DES加密的算法保護Java源代碼</a> 为啥要加密，以及一般的保护措施（混淆、加密盘、自定义classloader）。实现有点low，用Java写的加密人家调试下就全部请求怎么弄的了。</li>
<li><a href="https://www.ibm.com/developerworks/cn/java/l-secureclass/index.html">运用加密技术保护Java源代码</a> Java实现加解密通过自定义classloader。2001年的文章啊，牛逼</li>
<li><a href="http://blog.csdn.net/dianacody/article/details/38585209">Java代码加密与反编译（二）：用加密算法DES修改classLoader实现对.class文件加密</a> 有点实践了上一篇ibm文章的意思。</li>
</ul>


<p>自定义ClassLoader（jvmti）用C++实现解密</p>

<ul>
<li><a href="https://wenku.baidu.com/view/587af93767ec102de2bd892c.html">ClassLoader加密技术改进研究pdf</a> 理论派。classloader的实现用C++写（loadClass用JNI实现），但是还是需要对原有代码进行一定的修改</li>
<li><a href="https://www.ibm.com/developerworks/cn/java/l-protectjava/index.html">如何有效的保护 JAVA 程序</a> 这种ClassLoader加密实现有点复杂了，还改java.c的loadClass？2002年的文章啊：解决了 ClassLoader 本身的安全性，其不失为一个比较好安全方案。</li>
<li><a href="http://www.alonemonkey.com/2016/05/25/encrypt-jar-class/]%20%E9%9D%9E%E5%B8%B8%E6%9C%89%E4%BB%B7%E5%80%BC%E7%9A%84%E4%B8%80%E7%AF%87%E3%80%82%E8%AE%B2%E4%BA%86%E8%87%AA%E5%AE%9A%E4%B9%89classloader%E5%92%8Cjvmti%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E8%BF%98%E6%8F%90%E4%BE%9B%E4%BA%86%E6%BA%90%E7%A0%81%E5%B7%A5%E7%A8%8B[JarEncrypt](https://github.com/AloneMonkey/JarEncrypt">jar包加密保护解决方案</a>，参考。</li>
<li><a href="http://www.codeceo.com/article/jvmti-jni-java.html">通过JVMTI和JNI对JAVA加密</a> 用jvmti来实现加解密，牛逼的一篇文章啊！一步步按他的操作可以实现，还附有源码，参考。</li>
</ul>


<p>其他一些</p>

<ul>
<li><a href="http://cjnetwork.iteye.com/blog/851544#bc1819690">java源程序加密解决方案(基于Classloader解密)</a> 本身是一篇很棒的文章，多重加密保障ClassLoader安全。又有大神的回复：java的class加密都可以通过dumpclass来还原出来，囧</li>
<li><a href="http://rednaxelafx.iteye.com/blog/727938">如何dump出一个Java进程里的类对应的Class文件？</a> 大神的sun.jvm.hotspot.tools.jcore.ClassDump文章，只要知道类名就无敌了啊</li>
</ul>


<h2>JNI</h2>

<p>javah</p>

<ul>
<li><a href="http://www.tricoder.net/blog/?p=197">Calling native functions from Java with JNI and Maven</a> maven搭建native的环境，整体的结构很值得学习</li>
<li><a href="http://www.mojohaus.org/maven-native/native-maven-plugin/javah-mojo.html">http://www.mojohaus.org/maven-native/native-maven-plugin/javah-mojo.html</a> maven native插件</li>
<li><a href="https://stackoverflow.com/questions/25138413/java-jni-maven-native-maven-plugin-how-to-set-shared-library-final-name">https://stackoverflow.com/questions/25138413/java-jni-maven-native-maven-plugin-how-to-set-shared-library-final-name</a> 从生成.h到最后打包一条龙，值得学习。</li>
</ul>


<p>环境部署及入门</p>

<ul>
<li><a href="http://blog.csdn.net/ididcan/article/details/6828982">JNI简单实现Java调用C++/C的HelloWorld</a> 搭开发环境的时刻，可以按照步骤一步步来</li>
<li><a href="http://blog.csdn.net/wwj_748/article/details/28136061">JNI_最简单的Java调用C/C++代码</a> 直接VS建空项目，不错。思路清晰。中文入门不二之选！</li>
<li><a href="http://www.javamex.com/tutorials/jni/getting_started.shtml">Getting started with JNI</a> 需要小翻个墙啊，有介绍Additional Include Directories的方式配置java的头文件。</li>
<li><a href="https://www.ibm.com/developerworks/java/tutorials/j-jni/j-jni.html">Java programming with JNI</a> 了解JNI没有比这篇更好的文章了，即介绍了java调c++，又介绍了c++调用java。</li>
<li><a href="http://tinggo.iteye.com/blog/1185551">VS项目配置详解</a> VS预定义头：DEBUG，RELEASE的一些头可以定义在配置里面。有点像makefile里面决定打什么版本。</li>
</ul>


<p>配jni.h的 附加目录 的时刻，需要选择 配置 和 平台 的配置！！需要对应好！ jni的.h文件需要放到c++的项目下面去，引用外部的好像找不到，有问题。</p>

<p>java与c++类型之间的转换</p>

<ul>
<li><a href="https://stackoverflow.com/questions/8439233/how-to-convert-jbytearray-to-native-char-in-jni">How to convert jbyteArray to native char* in jni?</a></li>
<li><a href="https://stackoverflow.com/questions/12854333/jni-in-c-to-read-file-to-jbytearray">JNI in C++ to read file to jbyteArray</a></li>
</ul>


<p>JNI调用C++的加密算法</p>

<ul>
<li><a href="http://blog.csdn.net/wtbee/article/details/11658017">Java实现DES对称加密算法（附Android下3DES的JNI源码）</a> 有简单介绍DES的只是。中间换成过他的DES的实现，但是感觉怪怪的，有点不太靠谱。后面换成OPENSSL了。</li>
<li><a href="http://www.cnblogs.com/kolin/p/4256614.html">JNI调用c++实现AES加密解密</a> android的，用的应该也是OPENSSL。可以参考过程</li>
</ul>


<h2>OPENSSL</h2>

<ul>
<li><a href="http://www.qmailer.net/archives/183.html">OpenSSL编程-对称加密及DES/3DES简介</a> 简单的介绍</li>
<li><a href="http://blog.csdn.net/duanxingheng/article/details/11655037">OPENSSL库的使用-DES篇</a> 看看算法还可以。算法介绍，有对OPENSSL DES库的介绍和使用</li>
<li><a href="https://www.madboa.com/geek/openssl/">OpenSSL Command-Line</a></li>
<li><a href="http://www.cnblogs.com/gordon0918/p/5317701.html">openssl 对称加密算法enc命令详解</a> 命令行的使用</li>
<li><a href="https://www.slideshare.net/guanzhi/crypto-with-openssl">https://www.slideshare.net/guanzhi/crypto-with-openssl</a></li>
<li><a href="http://www.linuxjournal.com/article/4822">An Introduction to OpenSSL Programming</a> 2001年的太老了，留个纪念。</li>
</ul>


<p>WINDOWS安装/编译安装OPENSSL然后在VS里面应用：</p>

<ul>
<li><a href="https://stackoverflow.com/questions/11383942/how-to-use-openssl-with-visual-studio">https://stackoverflow.com/questions/11383942/how-to-use-openssl-with-visual-studio</a></li>
<li><a href="https://stackoverflow.com/questions/17127824/using-openssl-in-visual-studio-2012">https://stackoverflow.com/questions/17127824/using-openssl-in-visual-studio-2012</a></li>
<li><a href="https://stackoverflow.com/questions/32156336/how-to-include-openssl-in-visual-studio-expres-2012-windows-7-x64">https://stackoverflow.com/questions/32156336/how-to-include-openssl-in-visual-studio-expres-2012-windows-7-x64</a></li>
<li><a href="http://slproweb.com/products/Win32OpenSSL.html">http://slproweb.com/products/Win32OpenSSL.html</a></li>
</ul>


<p>NuGet安装OpenSSL on VS2015-1.0.2版本：（我用的这种方式）</p>

<ul>
<li><a href="https://stackoverflow.com/questions/40431034/openssl-nuget-package-not-installing-in-vs-2015">https://stackoverflow.com/questions/40431034/openssl-nuget-package-not-installing-in-vs-2015</a> VS2015 安装openssl v1.0.2 才有v140的include。 v1.0.2.1安装不了，参考。</li>
</ul>


<p>GCC</p>

<ul>
<li><a href="https://stackoverflow.com/questions/1894013/how-to-use-openssl-in-gcc">How to use OpenSSL in GCC?</a> 加依赖: -L/usr/lib -lssl -lcrypto -o server</li>
</ul>


<p>DES</p>

<ul>
<li><a href="https://my.oschina.net/mawx/blog/85424">https://my.oschina.net/mawx/blog/85424</a> Java DESede用C++ Openssl实现 参考下他的链接</li>
<li><a href="http://www.open-open.com/solution/view/1320502797546">http://www.open-open.com/solution/view/1320502797546</a> Java与C++通过DES、blowfish互相加解密</li>
<li><a href="http://blog.fpmurphy.com/2010/04/openssl-des-api.html#sthash.MA71jwqK.dpbs">http://blog.fpmurphy.com/2010/04/openssl-des-api.html#sthash.MA71jwqK.dpbs</a> OpenSSL DES APIs</li>
</ul>


<p>AES</p>

<ul>
<li><a href="https://www.lovelucy.info/openssl-aes-encryption.html">AES加密和解密——使用openssl编程</a> 参考他的makefile。AES用的是OPENSSL，写的中规中矩</li>
<li><a href="http://www.cnblogs.com/luop/p/4334160.html">密码算法详解——AES</a></li>
<li><a href="http://www.ssdfans.com/?p=238">AES加密算法图解</a> flash动画很赞</li>
<li><a href="http://yuanshuilee.blog.163.com/blog/static/21769727520140942826137/">openssl之aes加密（AES_cbc_encrypt 与 AES_encrypt 的编程案例）</a> 很棒的一篇，参考。</li>
<li><a href="https://blog.poxiao.me/p/advanced-encryption-standard-and-block-cipher-mode/">https://blog.poxiao.me/p/advanced-encryption-standard-and-block-cipher-mode/</a> 高级加密标准AES的工作模式（ECB、CBC、CFB、OFB），还有接口的介绍，非常好的一篇文章</li>
</ul>


<p>AES CBC 相互加解密 Java/PHP/C++ java和c++加解密，互通</p>

<ul>
<li><a href="https://actom.me/blog/aes-cbc-%E7%9B%B8%E4%BA%92%E5%8A%A0%E8%A7%A3%E5%AF%86-javaphpc.html">AES CBC 相互加解密 Java/PHP/C++</a> 非常牛逼的一篇，参考。</li>
<li><a href="http://blog.sina.com.cn/s/blog_48d4cf2d0101eqdf.html">http://blog.sina.com.cn/s/blog_48d4cf2d0101eqdf.html</a> Java和C/C++进行DES/AES密文传输</li>
<li><a href="https://stackoverflow.com/questions/39128103/how-do-i-decrypt-a-java-des-encrypted-message-using-openssl">https://stackoverflow.com/questions/39128103/how-do-i-decrypt-a-java-des-encrypted-message-using-openssl</a></li>
<li><a href="https://stackoverflow.com/questions/9038298/java-desede-encrypt-openssl-equivalent">https://stackoverflow.com/questions/9038298/java-desede-encrypt-openssl-equivalent</a></li>
<li><a href="http://www.cnblogs.com/WonKerr/archive/2009/11/11/DES_C_JAVA.html">http://www.cnblogs.com/WonKerr/archive/2009/11/11/DES_C_JAVA.html</a> DES 算法的 C++ 与 JAVA 互相加解密</li>
<li><a href="http://juliusdavies.ca/commons-ssl/pbe.html">OpenSSL&rsquo;s &ldquo;enc&rdquo; in Java (PBE / Password Based Encryption)</a></li>
<li><a href="http://openssl.6102.n7.nabble.com/Compatibility-between-Java-crypto-and-open-ssl-td13992.html">http://openssl.6102.n7.nabble.com/Compatibility-between-Java-crypto-and-open-ssl-td13992.html</a></li>
<li><p><a href="https://ruby-china.org/topics/26490">https://ruby-china.org/topics/26490</a></p></li>
<li><p><a href="https://shanetully.com/2012/06/openssl-rsa-aes-and-c/">OpenSSL, RSA, AES and C++</a> 好鬼长复杂没怎么看，搜AES找到了。</p></li>
</ul>


<h4>OPENSSL MD5： VS + GCC + JAVA + 命令行</h4>

<ul>
<li><a href="http://www.askyb.com/cpp/openssl-md5-hashing-example-in-cpp/">OpenSSL MD5 Hashing Example in C++</a></li>
<li><a href="https://stackoverflow.com/questions/4583967/how-to-encode-md5-sum-into-base64-in-bash">https://stackoverflow.com/questions/4583967/how-to-encode-md5-sum-into-base64-in-bash</a> LINUX命令行</li>
<li><a href="https://askubuntu.com/questions/53846/how-to-get-the-md5-hash-of-a-string-directly-in-the-terminal">https://askubuntu.com/questions/53846/how-to-get-the-md5-hash-of-a-string-directly-in-the-terminal</a> md5sum</li>
<li><a href="https://superuser.com/questions/72765/can-you-use-openssl-to-generate-an-md5-or-sha-hash-on-a-directory-of-files">https://superuser.com/questions/72765/can-you-use-openssl-to-generate-an-md5-or-sha-hash-on-a-directory-of-files</a> 循环算一个目录下文件的MD5</li>
<li><a href="https://www.codeproject.com/Articles/1016357/OpenSSL-Tour-for-Win-Developer#DESCBC">https://www.codeproject.com/Articles/1016357/OpenSSL-Tour-for-Win-Developer#DESCBC</a> OPENSSL各种算法的使用</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># SHA256, used in chef cookbooks
</span><span class='line'>openssl dgst -sha256 path/to/myfile
</span><span class='line'># MD5
</span><span class='line'>openssl dgst -md5 path/to/myfile
</span><span class='line'>echo -n 'text to be encrypted' | md5sum -
</span><span class='line'>$ echo -n 123456 | md5sum | awk '{print $1}'
</span><span class='line'>$ echo -n Welcome | md5sum
</span><span class='line'>
</span><span class='line'>[root@cu2 ~]# gcc -Wall -lcrypto -lssl opensslmd5.cpp -o md5
</span><span class='line'>[root@cu2 ~]# ./md5
</span><span class='line'>md5 digest: 56ab24c15b72a457069c5ea42fcfc640
</span></code></pre></td></tr></table></div></figure>


<p>makefile</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CC=g++
</span><span class='line'>CFLAGS=-Wall -g -O2
</span><span class='line'>LIBS=-lcrypto
</span><span class='line'>
</span><span class='line'>all: aes
</span><span class='line'>
</span><span class='line'>aes: aes.cc
</span><span class='line'>    $(CC) $(CFLAGS) aes.cc -o $@ $(LIBS)
</span><span class='line'>
</span><span class='line'>clean:
</span><span class='line'>    @rm -f aes
</span></code></pre></td></tr></table></div></figure>


<h4>OPENSSL命令行</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl des3 -nosalt -k abc123 -in file.txt -out file.des3 #不加盐，key为abc123来加密
</span><span class='line'>openssl des3 -d -nosalt -in file.des3 -out f.txt -k abc123#解密
</span><span class='line'>
</span><span class='line'>默认是-salt，加盐的，如果不加盐，则根据pass生成的key和iv不变，例：
</span><span class='line'>
</span><span class='line'>You can get openssl to base64-encode the message by using the -a
</span><span class='line'>stefano:~$ openssl aes-256-cbc -in attack-plan.txt -a
</span><span class='line'>
</span><span class='line'>[root@cu2 ~]# echo -n DES | openssl aes-128-cbc -a -salt -k abcdefghijklmnop
</span><span class='line'>[root@cu2 ~]# echo -n DES | openssl aes-128-cbc -k abcdefghijklmnop |  openssl aes-128-cbc -d -k abcdefghijklmnop
</span></code></pre></td></tr></table></div></figure>


<h2>其他</h2>

<p>SHELL二进制编码：</p>

<ul>
<li><a href="https://stackoverflow.com/questions/6292645/convert-binary-data-to-hex-in-shell-script">https://stackoverflow.com/questions/6292645/convert-binary-data-to-hex-in-shell-script</a> hexdump</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>el@defiant ~ $ printf '%x\n' 26
</span><span class='line'>el@defiant ~ $ echo $((0xAA))
</span><span class='line'>printf -v result1 "%x" "$decimal1"
</span><span class='line'>% xxd -l 16 -p /dev/random
</span><span class='line'>193f6c54814f0576bc27d51ab39081dc
</span><span class='line'>$ echo -n $'\x12\x34' | xxd -p
</span><span class='line'>
</span><span class='line'>$ echo -n $'\x12\x34' | hexdump -e '"%x"'
</span><span class='line'>
</span><span class='line'>od -vt x1|awk '{$1="";print}'
</span><span class='line'>echo "obase=16; 34" | bc
</span></code></pre></td></tr></table></div></figure>


<p>c++命令行不直接关闭。。。最后用断点的方式替代了，没找到好的方法！！</p>

<p>文件读写</p>

<ul>
<li><a href="http://blog.csdn.net/lightlater/article/details/6364931">C++读写二进制文件</a></li>
<li><a href="http://blog.csdn.net/guyue6670/article/details/6681037">fopen中w w+ wb区别</a> 人家代码写的是w+，加密class后多了0D。后面问了搞C的同事才知道二进制要用wb，C就是一堆坑啊！</li>
</ul>


<p>g++</p>

<ul>
<li><a href="https://stackoverflow.com/questions/4828228/sprintf-s-was-not-declared-in-this-scope">https://stackoverflow.com/questions/4828228/sprintf-s-was-not-declared-in-this-scope</a> snprintf</li>
</ul>


<p>git</p>

<ul>
<li><a href="https://git-scm.com/docs/git-archive">https://git-scm.com/docs/git-archive</a> GIT打包</li>
</ul>


<h2>重要的参考文章再列一遍</h2>

<ul>
<li><a href="http://blog.csdn.net/wwj_748/article/details/28136061">JNI_最简单的Java调用C/C++代码</a></li>
<li><a href="http://www.alonemonkey.com/2016/05/25/encrypt-jar-class/">jar包加密保护解决方案</a> 源码<a href="https://github.com/AloneMonkey/JarEncrypt">JarEncrypt</a></li>
<li><a href="http://www.codeceo.com/article/jvmti-jni-java.html">通过JVMTI和JNI对JAVA加密</a></li>
<li><a href="https://stackoverflow.com/questions/40431034/openssl-nuget-package-not-installing-in-vs-2015">https://stackoverflow.com/questions/40431034/openssl-nuget-package-not-installing-in-vs-2015</a></li>
<li><a href="https://actom.me/blog/aes-cbc-%E7%9B%B8%E4%BA%92%E5%8A%A0%E8%A7%A3%E5%AF%86-javaphpc.html">AES CBC 相互加解密 Java/PHP/C++</a></li>
</ul>


<p>TODO 编译打包</p>

<ul>
<li><a href="http://www.tricoder.net/blog/?p=197">http://www.tricoder.net/blog/?p=197</a></li>
<li><a href="https://stackoverflow.com/questions/25138413/java-jni-maven-native-maven-plugin-how-to-set-shared-library-final-name">https://stackoverflow.com/questions/25138413/java-jni-maven-native-maven-plugin-how-to-set-shared-library-final-name</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NFS on Centos7]]></title>
    <link href="http://winseliu.com/blog/2017/08/05/nfs-on-centos7/"/>
    <updated>2017-08-05T16:38:56+08:00</updated>
    <id>http://winseliu.com/blog/2017/08/05/nfs-on-centos7</id>
    <content type="html"><![CDATA[<h2>参考</h2>

<ul>
<li><a href="https://www.howtoforge.com/nfs-server-and-client-on-centos-7">https://www.howtoforge.com/nfs-server-and-client-on-centos-7</a></li>
<li><a href="http://blog.huatai.me/2014/10/14/CentOS-7-NFS-Server-and-Client-Setup/">http://blog.huatai.me/2014/10/14/CentOS-7-NFS-Server-and-Client-Setup/</a></li>
</ul>


<h2>指令</h2>

<p>安装</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 data]# yum install nfs-utils -y 
</span><span class='line'>[root@cu3 data]# chmod -R 777 /data/k8s-dta
</span><span class='line'>
</span><span class='line'>systemctl enable rpcbind
</span><span class='line'>systemctl enable nfs-server
</span><span class='line'>systemctl enable nfs-lock
</span><span class='line'>systemctl enable nfs-idmap
</span><span class='line'>
</span><span class='line'>systemctl start rpcbind
</span><span class='line'>systemctl start nfs-server
</span><span class='line'>systemctl start nfs-lock
</span><span class='line'>systemctl start nfs-idmap</span></code></pre></td></tr></table></div></figure>


<p>配置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu3 data]# vi /etc/exports
</span><span class='line'>/data/k8s-dta 192.168.0.0/24(rw,sync,no_root_squash,no_all_squash)
</span></code></pre></td></tr></table></div></figure>


<p>说明：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/data/k8s-dta – 共享目录
</span><span class='line'>192.168.0.0/24 – 允许访问NFS的客户端IP地址段
</span><span class='line'>rw – 允许对共享目录进行读写
</span><span class='line'>sync – 实时同步共享目录
</span><span class='line'>no_root_squash – 允许root访问
</span><span class='line'>no_all_squash - 允许用户授权
</span><span class='line'>no_subtree_check - 如果卷的一部分被输出，从客户端发出请求文件的一个常规的调用子目录检查验证卷的相应部分。如果是整个卷输出，禁止这个检查可以加速传输。
</span><span class='line'>no_subtree_check - If only part of a volume is exported, a routine called subtree checking verifies that a file that is requested from the client is in the appropriate part of the volume. If the entire volume is exported, disabling this check will speed up transfers. Setting Up an NFS Server
</span></code></pre></td></tr></table></div></figure>


<p>然后重启服务，并开放防火墙（或者关闭）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl restart nfs-server
</span><span class='line'>
</span><span class='line'>firewall-cmd --permanent --zone=public --add-service=ssh
</span><span class='line'>firewall-cmd --permanent --zone=public --add-service=nfs
</span><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<h2>客户端配置</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@cu2 opt]# yum install -y nfs-utils
</span><span class='line'>
</span><span class='line'>[root@cu2 opt]# mount cu3:/data/k8s-dta dta
</span><span class='line'>[root@cu2 opt]# touch dta/abc
</span><span class='line'>[root@cu2 opt]# ll dta
</span><span class='line'>total 0
</span><span class='line'>-rw-r--r-- 1 root root 0 Aug  3  2017 abc
</span><span class='line'>
</span><span class='line'>[root@cu3 data]# ll k8s-dta/
</span><span class='line'>total 0
</span><span class='line'>-rw-r--r-- 1 root root 0 Aug  3 15:19 abc</span></code></pre></td></tr></table></div></figure>


<h2>后记</h2>

<p>建好NFS服务后，可以把它作为k8s容器的存储，这样就不怕丢数据了。</p>

<ul>
<li><a href="https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#writing-to-stable-storage">https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#writing-to-stable-storage</a></li>
<li><a href="https://kubernetes.io/docs/concepts/storage/volumes/#nfs">https://kubernetes.io/docs/concepts/storage/volumes/#nfs</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/tree/master/examples/volumes/nfs">https://github.com/kubernetes/kubernetes/tree/master/examples/volumes/nfs</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Encfs加密文件系统]]></title>
    <link href="http://winseliu.com/blog/2017/08/05/encfs-secure-filesystem/"/>
    <updated>2017-08-05T10:55:57+08:00</updated>
    <id>http://winseliu.com/blog/2017/08/05/encfs-secure-filesystem</id>
    <content type="html"><![CDATA[<p>为了数据安全，最近领导给了个链接让去了解了解 <a href="https://www.ibm.com/developerworks/cn/linux/l-cn-ecryptfs/">eCryptfs</a> 。通过yum和自己手动编译安装后都运行失败，系统的<a href="http://centosfaq.org/centos/about-ecryptfs-utils/#comment-110110">Centos7内核不支持ecryptfs模块</a> 。</p>

<p>通过一个介绍ecryptfs的<a href="https://linux.cn/article-4470-1.html">关联的链接</a> 了解到 <a href="http://www.arg0.net/encfs">encfs</a> 也是做 ecryptfs 类似的事情。然后就去下载安装，最后发现windows下面也可以用（惊喜）。</p>

<p>epel下面已经发布了 encfs 的rpm包。现在只要是仓库有的包就不自己编译（进行过N次升级的洗礼，最终发现yum、rpm才是最终归宿啊）。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s ~]# yum install fuse 
</span><span class='line'>[root@k8s ~]# yum install encfs
</span><span class='line'>
</span><span class='line'>挂载、创建
</span><span class='line'>[root@k8s shm]# encfs /dev/shm/.test /dev/shm/test
</span><span class='line'>The directory "/dev/shm/.test/" does not exist. Should it be created? (y,n) y
</span><span class='line'>The directory "/dev/shm/test/" does not exist. Should it be created? (y,n) y
</span><span class='line'>Creating new encrypted volume.
</span><span class='line'>Please choose from one of the following options:
</span><span class='line'> enter "x" for expert configuration mode,
</span><span class='line'> enter "p" for pre-configured paranoia mode,
</span><span class='line'> anything else, or an empty line will select standard mode.
</span><span class='line'>?&gt;
</span><span class='line'>
</span><span class='line'>Standard configuration selected.
</span><span class='line'>
</span><span class='line'>Configuration finished.  The filesystem to be created has
</span><span class='line'>the following properties:
</span><span class='line'>Filesystem cipher: "ssl/aes", version 3:0:2
</span><span class='line'>Filename encoding: "nameio/block", version 4:0:2
</span><span class='line'>Key Size: 192 bits
</span><span class='line'>Block Size: 1024 bytes
</span><span class='line'>Each file contains 8 byte header with unique IV data.
</span><span class='line'>Filenames encoded using IV chaining mode.
</span><span class='line'>File holes passed through to ciphertext.
</span><span class='line'>
</span><span class='line'>Now you will need to enter a password for your filesystem.
</span><span class='line'>You will need to remember this password, as there is absolutely
</span><span class='line'>no recovery mechanism.  However, the password can be changed
</span><span class='line'>later using encfsctl.
</span><span class='line'>
</span><span class='line'>New Encfs Password: 123456
</span><span class='line'>Verify Encfs Password:
</span><span class='line'>
</span><span class='line'>[root@k8s shm]# echo $(hostname) &gt; test/hostname.txt
</span><span class='line'>[root@k8s shm]# ll -R -a
</span><span class='line'>.:
</span><span class='line'>total 0
</span><span class='line'>drwxrwxrwt.  4 root root   80 Aug  4 22:04 .
</span><span class='line'>drwxr-xr-x. 20 root root 3260 Aug  4 21:16 ..
</span><span class='line'>drwx------.  2 root root   80 Aug  4 22:06 test
</span><span class='line'>drwx------.  2 root root   80 Aug  4 22:06 .test
</span><span class='line'>
</span><span class='line'>./test:
</span><span class='line'>total 4
</span><span class='line'>drwx------. 2 root root 80 Aug  4 22:06 .
</span><span class='line'>drwxrwxrwt. 4 root root 80 Aug  4 22:04 ..
</span><span class='line'>-rw-r--r--. 1 root root  4 Aug  4 22:06 hostname.txt
</span><span class='line'>
</span><span class='line'>./.test:
</span><span class='line'>total 8
</span><span class='line'>drwx------. 2 root root   80 Aug  4 22:06 .
</span><span class='line'>drwxrwxrwt. 4 root root   80 Aug  4 22:04 ..
</span><span class='line'>-rw-r--r--. 1 root root 1263 Aug  4 22:04 .encfs6.xml
</span><span class='line'>-rw-r--r--. 1 root root   12 Aug  4 22:06 pAqhW671kQSK4kPLJM-TF6sp
</span><span class='line'>
</span><span class='line'>卸载
</span><span class='line'>[root@k8s shm]# fusermount -u test
</span><span class='line'>[root@k8s shm]# ll -R -a
</span><span class='line'>.:
</span><span class='line'>total 0
</span><span class='line'>drwxrwxrwt.  4 root root   80 Aug  4 22:04 .
</span><span class='line'>drwxr-xr-x. 20 root root 3260 Aug  4 21:16 ..
</span><span class='line'>drwx------.  2 root root   40 Aug  4 22:04 test
</span><span class='line'>drwx------.  2 root root   80 Aug  4 22:06 .test
</span><span class='line'>
</span><span class='line'>./test:
</span><span class='line'>total 0
</span><span class='line'>drwx------. 2 root root 40 Aug  4 22:04 .
</span><span class='line'>drwxrwxrwt. 4 root root 80 Aug  4 22:04 ..
</span><span class='line'>
</span><span class='line'>./.test:
</span><span class='line'>total 8
</span><span class='line'>drwx------. 2 root root   80 Aug  4 22:06 .
</span><span class='line'>drwxrwxrwt. 4 root root   80 Aug  4 22:04 ..
</span><span class='line'>-rw-r--r--. 1 root root 1263 Aug  4 22:04 .encfs6.xml
</span><span class='line'>-rw-r--r--. 1 root root   12 Aug  4 22:06 pAqhW671kQSK4kPLJM-TF6sp
</span></code></pre></td></tr></table></div></figure>


<p>注意: 最好将 .encfs6.xml 备份起來, 这个文件损坏或丢失将无法还原加密的文件。</p>

<p>把加密的文件备份到云盘，然后本地挂载就能看到原始内容了。安全的云盘就这么简单的实现了，咔咔。。。</p>

<p>在windows安装 <a href="https://encfsmp.sourceforge.io/download.html">EncFSMP</a> 就可以和在Linux上面一样操作encfs文件系统了。</p>

<blockquote><p>EncFS从原理不同TrueCrypt的容器 ，它存储在一个单一的大文件的加密文件。 相反，EncFS为您添加的每个文件创建单独的文件。 它更好地与云存储服务，每次更改时重新上传整个TrueCrypt容器。</p></blockquote>

<h2>参考链接</h2>

<ul>
<li><a href="http://www.arg0.net/encfs">http://www.arg0.net/encfs</a></li>
<li><a href="https://linux.cn/article-4470-1.html">https://linux.cn/article-4470-1.html</a> 通过这篇文章查看到了encfs</li>
<li><a href="https://github.com/vgough/encfs/blob/master/INSTALL.md">https://github.com/vgough/encfs/blob/master/INSTALL.md</a> 编译安装</li>
<li><a href="http://www.vonwei.com/post/introduceToEncFS.html">http://www.vonwei.com/post/introduceToEncFS.html</a> 中文简单介绍和入门。手动编译，命令的参数也有介绍，还有介绍加密目录的 .encfs6.xml</li>
<li><a href="https://github.com/vgough/encfs/blob/master/encfs/encfs.pod#examples">https://github.com/vgough/encfs/blob/master/encfs/encfs.pod#examples</a></li>
<li><a href="https://github.com/vgough/encfs/blob/master/encfs/encfsctl.pod">https://github.com/vgough/encfs/blob/master/encfs/encfsctl.pod</a></li>
<li><p><a href="https://www.howtoip.com/how-to-encrypt-cloud-storage-on-linux-and-windows-with-encfs/">https://www.howtoip.com/how-to-encrypt-cloud-storage-on-linux-and-windows-with-encfs/</a>  非常棒的教程，linux和windows都介绍了</p></li>
<li><p><a href="http://www.jianshu.com/p/073957902fa9">http://www.jianshu.com/p/073957902fa9</a> 手动编译，以后可能用得到。最后的启动自动加载磁盘可以借鉴。</p></li>
<li><a href="https://github.com/vgough/encfs/issues/66">https://github.com/vgough/encfs/issues/66</a>  encfs on cygwin</li>
<li><a href="https://superuser.com/questions/179150/reading-an-encfs-volume-from-windows">https://superuser.com/questions/179150/reading-an-encfs-volume-from-windows</a></li>
<li><a href="https://encfsmp.sourceforge.io/download.html">https://encfsmp.sourceforge.io/download.html</a> for windows</li>
<li><a href="https://github.com/dokan-dev/dokany">https://github.com/dokan-dev/dokany</a> fuse on windows</li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
