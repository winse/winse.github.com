<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Winse Blog]]></title>
  <link href="http://winse.github.io/atom.xml" rel="self"/>
  <link href="http://winse.github.io/"/>
  <updated>2022-03-20T19:31:22+08:00</updated>
  <id>http://winse.github.io/</id>
  <author>
    <name><![CDATA[Winse Liu]]></name>
    <email><![CDATA[winseliu@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[K8s安装指南 - 使用kubeadm]]></title>
    <link href="http://winse.github.io/blog/2022/03/18/k8s-guide-use-kubeadm/"/>
    <updated>2022-03-18T11:58:48+08:00</updated>
    <id>http://winse.github.io/blog/2022/03/18/k8s-guide-use-kubeadm</id>
    <content type="html"><![CDATA[<p>本文是在 Amazon Linux 2 系统上安装部署的，和centos7.3基本相似。</p>

<p>和k8s软件依赖需要访问google的，已经在前面一篇文章中下载好，本文中会直接使用。依赖的软件可以在百度网盘下载：</p>

<pre><code>链接：https://pan.baidu.com/s/1P3ABqKGt1JhNkg-9yB22yQ 
提取码：k7af
</code></pre>

<h2>安装 amazon-linux-2 操作系统</h2>

<ul>
<li><a href="https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/amazon-linux-2-virtual-machine.html#amazon-linux-2-virtual-machine-download">步骤 2：下载 Amazon Linux 2 VM 映像</a></li>
<li>下载 <a href="https://cdn.amazonlinux.com/os-images/2.0.20220218.3/">https://cdn.amazonlinux.com/os-images/2.0.20220218.3/</a></li>
</ul>


<p>这里下载vmware使用的镜像 <code>amzn2-vmware_esx-2.0.20220218.3-x86_64.xfs.gpt.ova</code> 和初始化配置 <code>Seed.iso</code> 。</p>

<p>这里简单说下，其实ova已经是可以直接用的，文档中讲的很多内容是辅助系统定制初始化的。user-data用于创建用户和修改文件内容，meta-data配置主机名和网络ip设置。为了本地开发测试，我们直接用默认提供 <code>Seed.iso</code> 即可，登录使用 <code>ec2-user:amazon</code> 。</p>

<p>然后双击 ova 文件，就可以导入创建一个虚拟机出来了。</p>

<ul>
<li>修改网络适配器为NAT模式；</li>
<li>添加CD/DVD设备，选择 <code>Seed.iso</code> ISO映射文件；</li>
<li>开机登录系统后，打开sshd的密码登录。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo ifup eth0
</span><span class='line'>$ ip a
</span><span class='line'>
</span><span class='line'>$ sudo vi /etc/ssh/sshd_config
</span><span class='line'>#PasswordAuthentication no
</span><span class='line'>
</span><span class='line'>$ sudo service sshd reload 
</span></code></pre></td></tr></table></div></figure>


<h2>安装docker</h2>

<p>k8s需要容器运行时软件，我们先安装好docker。</p>

<ul>
<li><a href="https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker">https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker</a></li>
</ul>


<p>aws linux 2有它自己的docker源，使用docker官网文档的方式依赖有些找不到。直接按照aws官方文档中提供的方式安装。</p>

<h3>坑</h3>

<p>一开始是按照docker官网在centos的方式安装的，但yum repo的变量不对上，改了releasever后，然后依赖的版本找不到。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://docs.docker.com/engine/install/centos/
</span><span class='line'>[ec2-user@amazonlinux ~]$ cat /etc/issue
</span><span class='line'>\S
</span><span class='line'>Kernel \r on an \m
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ yum-debug-dump
</span><span class='line'>Loaded plugins: langpacks, priorities, update-motd
</span><span class='line'>Output written to: /home/ec2-user/yum_debug_dump-amazonlinux.onprem-2022-03-17_02:16:37.txt.gz
</span><span class='line'>[ec2-user@amazonlinux ~]$ less /home/ec2-user/yum_debug_dump-amazonlinux.onprem-2022-03-17_02:16:37.txt.gz
</span><span class='line'>[ec2-user@amazonlinux ~]$ 
</span><span class='line'>
</span><span class='line'>$releasever的值,这个表示当前系统的发行版本，可以通过rpm -qi centos-release命令查看，结果如下：
</span><span class='line'>$basearch是我们的系统硬件架构(CPU指令集),使用命令arch得到
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo sed -i 's/$releasever/7/g' /etc/yum.repos.d/docker-ce.repo 
</span><span class='line'>
</span><span class='line'>## 缺少依赖
</span></code></pre></td></tr></table></div></figure>


<h3>正式安装docker</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo yum update -y
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo amazon-linux-extras install docker
</span><span class='line'>Installing docker
</span><span class='line'>Loaded plugins: langpacks, priorities, update-motd
</span><span class='line'>Cleaning repos: amzn2-core amzn2extra-docker
</span><span class='line'>12 metadata files removed
</span><span class='line'>4 sqlite files removed
</span><span class='line'>0 metadata files removed
</span><span class='line'>Loaded plugins: langpacks, priorities, update-motd
</span><span class='line'>amzn2-core                                                                                                                                        | 3.7 kB  00:00:00     
</span><span class='line'>amzn2extra-docker                                                                                                                                 | 3.0 kB  00:00:00     
</span><span class='line'>(1/5): amzn2-core/2/x86_64/group_gz                                                                                                               | 2.5 kB  00:00:00     
</span><span class='line'>(2/5): amzn2extra-docker/2/x86_64/updateinfo                                                                                                      | 5.9 kB  00:00:00     
</span><span class='line'>(3/5): amzn2-core/2/x86_64/updateinfo                                                                                                             | 452 kB  00:00:01     
</span><span class='line'>(4/5): amzn2extra-docker/2/x86_64/primary_db                                                                                                      |  86 kB  00:00:00     
</span><span class='line'>(5/5): amzn2-core/2/x86_64/primary_db                                                                                                             |  60 MB  00:01:42     
</span><span class='line'>Resolving Dependencies
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package docker.x86_64 0:20.10.7-5.amzn2 will be installed
</span><span class='line'>--&gt; Processing Dependency: runc &gt;= 1.0.0 for package: docker-20.10.7-5.amzn2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libcgroup &gt;= 0.40.rc1-5.15 for package: docker-20.10.7-5.amzn2.x86_64
</span><span class='line'>--&gt; Processing Dependency: containerd &gt;= 1.3.2 for package: docker-20.10.7-5.amzn2.x86_64
</span><span class='line'>--&gt; Processing Dependency: pigz for package: docker-20.10.7-5.amzn2.x86_64
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package containerd.x86_64 0:1.4.6-8.amzn2 will be installed
</span><span class='line'>---&gt; Package libcgroup.x86_64 0:0.41-21.amzn2 will be installed
</span><span class='line'>---&gt; Package pigz.x86_64 0:2.3.4-1.amzn2.0.1 will be installed
</span><span class='line'>---&gt; Package runc.x86_64 0:1.0.0-2.amzn2 will be installed
</span><span class='line'>--&gt; Finished Dependency Resolution
</span><span class='line'>
</span><span class='line'>Dependencies Resolved
</span><span class='line'>
</span><span class='line'>=========================================================================================================================================================================
</span><span class='line'> Package                               Arch                              Version                                      Repository                                    Size
</span><span class='line'>=========================================================================================================================================================================
</span><span class='line'>Installing:
</span><span class='line'> docker                                x86_64                            20.10.7-5.amzn2                              amzn2extra-docker                             42 M
</span><span class='line'>Installing for dependencies:
</span><span class='line'> containerd                            x86_64                            1.4.6-8.amzn2                                amzn2extra-docker                             24 M
</span><span class='line'> libcgroup                             x86_64                            0.41-21.amzn2                                amzn2-core                                    66 k
</span><span class='line'> pigz                                  x86_64                            2.3.4-1.amzn2.0.1                            amzn2-core                                    81 k
</span><span class='line'> runc                                  x86_64                            1.0.0-2.amzn2                                amzn2extra-docker                            3.3 M
</span><span class='line'>
</span><span class='line'>Transaction Summary
</span><span class='line'>=========================================================================================================================================================================
</span><span class='line'>Install  1 Package (+4 Dependent packages)
</span><span class='line'>
</span><span class='line'>Total download size: 69 M
</span><span class='line'>Installed size: 285 M
</span><span class='line'>Is this ok [y/d/N]: y
</span><span class='line'>Downloading packages:
</span><span class='line'>(1/5): pigz-2.3.4-1.amzn2.0.1.x86_64.rpm                                                                                                          |  81 kB  00:00:00     
</span><span class='line'>(2/5): libcgroup-0.41-21.amzn2.x86_64.rpm                                                                                                         |  66 kB  00:00:00     
</span><span class='line'>(3/5): containerd-1.4.6-8.amzn2.x86_64.rpm                                                                                                        |  24 MB  00:01:14     
</span><span class='line'>(4/5): runc-1.0.0-2.amzn2.x86_64.rpm                                                                                                              | 3.3 MB  00:00:10     
</span><span class='line'>(5/5): docker-20.10.7-5.amzn2.x86_64.rpm                                                                                                          |  42 MB  00:01:50     
</span><span class='line'>-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
</span><span class='line'>Total                                                                                                                                    641 kB/s |  69 MB  00:01:50     
</span><span class='line'>Running transaction check
</span><span class='line'>Running transaction test
</span><span class='line'>Transaction test succeeded
</span><span class='line'>Running transaction
</span><span class='line'>  Installing : runc-1.0.0-2.amzn2.x86_64                                                                                                                             1/5 
</span><span class='line'>  Installing : containerd-1.4.6-8.amzn2.x86_64                                                                                                                       2/5 
</span><span class='line'>  Installing : libcgroup-0.41-21.amzn2.x86_64                                                                                                                        3/5 
</span><span class='line'>  Installing : pigz-2.3.4-1.amzn2.0.1.x86_64                                                                                                                         4/5 
</span><span class='line'>  Installing : docker-20.10.7-5.amzn2.x86_64                                                                                                                         5/5 
</span><span class='line'>  Verifying  : docker-20.10.7-5.amzn2.x86_64                                                                                                                         1/5 
</span><span class='line'>  Verifying  : containerd-1.4.6-8.amzn2.x86_64                                                                                                                       2/5 
</span><span class='line'>  Verifying  : runc-1.0.0-2.amzn2.x86_64                                                                                                                             3/5 
</span><span class='line'>  Verifying  : pigz-2.3.4-1.amzn2.0.1.x86_64                                                                                                                         4/5 
</span><span class='line'>  Verifying  : libcgroup-0.41-21.amzn2.x86_64                                                                                                                        5/5 
</span><span class='line'>
</span><span class='line'>Installed:
</span><span class='line'>  docker.x86_64 0:20.10.7-5.amzn2                                                                                                                                        
</span><span class='line'>
</span><span class='line'>Dependency Installed:
</span><span class='line'>  containerd.x86_64 0:1.4.6-8.amzn2           libcgroup.x86_64 0:0.41-21.amzn2           pigz.x86_64 0:2.3.4-1.amzn2.0.1           runc.x86_64 0:1.0.0-2.amzn2          
</span><span class='line'>
</span><span class='line'>Complete!
</span><span class='line'>  0  ansible2                 available    \
</span><span class='line'>        [ =2.4.2  =2.4.6  =2.8  =stable ]
</span><span class='line'>  2  httpd_modules            available    [ =1.0  =stable ]
</span><span class='line'>  3  memcached1.5             available    \
</span><span class='line'>        [ =1.5.1  =1.5.16  =1.5.17 ]
</span><span class='line'>  5  postgresql9.6            available    \
</span><span class='line'>        [ =9.6.6  =9.6.8  =stable ]
</span><span class='line'>  6  postgresql10             available    [ =10  =stable ]
</span><span class='line'>  9  R3.4                     available    [ =3.4.3  =stable ]
</span><span class='line'> 10  rust1                    available    \
</span><span class='line'>        [ =1.22.1  =1.26.0  =1.26.1  =1.27.2  =1.31.0  =1.38.0
</span><span class='line'>          =stable ]
</span><span class='line'> 11  vim                      available    [ =8.0  =stable ]
</span><span class='line'> 18  libreoffice              available    \
</span><span class='line'>        [ =5.0.6.2_15  =5.3.6.1  =stable ]
</span><span class='line'> 19  gimp                     available    [ =2.8.22 ]
</span><span class='line'> 20  docker=latest            enabled      \
</span><span class='line'>        [ =17.12.1  =18.03.1  =18.06.1  =18.09.9  =stable ]
</span><span class='line'> 21  mate-desktop1.x          available    \
</span><span class='line'>        [ =1.19.0  =1.20.0  =stable ]
</span><span class='line'> 22  GraphicsMagick1.3        available    \
</span><span class='line'>        [ =1.3.29  =1.3.32  =1.3.34  =stable ]
</span><span class='line'> 23  tomcat8.5                available    \
</span><span class='line'>        [ =8.5.31  =8.5.32  =8.5.38  =8.5.40  =8.5.42  =8.5.50
</span><span class='line'>          =stable ]
</span><span class='line'> 24  epel                     available    [ =7.11  =stable ]
</span><span class='line'> 25  testing                  available    [ =1.0  =stable ]
</span><span class='line'> 26  ecs                      available    [ =stable ]
</span><span class='line'> 27  corretto8                available    \
</span><span class='line'>        [ =1.8.0_192  =1.8.0_202  =1.8.0_212  =1.8.0_222  =1.8.0_232
</span><span class='line'>          =1.8.0_242  =stable ]
</span><span class='line'> 28  firecracker              available    [ =0.11  =stable ]
</span><span class='line'> 29  golang1.11               available    \
</span><span class='line'>        [ =1.11.3  =1.11.11  =1.11.13  =stable ]
</span><span class='line'> 30  squid4                   available    [ =4  =stable ]
</span><span class='line'> 32  lustre2.10               available    \
</span><span class='line'>        [ =2.10.5  =2.10.8  =stable ]
</span><span class='line'> 33  java-openjdk11           available    [ =11  =stable ]
</span><span class='line'> 34  lynis                    available    [ =stable ]
</span><span class='line'> 35  kernel-ng                available    [ =stable ]
</span><span class='line'> 36  BCC                      available    [ =0.x  =stable ]
</span><span class='line'> 37  mono                     available    [ =5.x  =stable ]
</span><span class='line'> 38  nginx1                   available    [ =stable ]
</span><span class='line'> 39  ruby2.6                  available    [ =2.6  =stable ]
</span><span class='line'> 40  mock                     available    [ =stable ]
</span><span class='line'> 41  postgresql11             available    [ =11  =stable ]
</span><span class='line'> 42  php7.4                   available    [ =stable ]
</span><span class='line'> 43  livepatch                available    [ =stable ]
</span><span class='line'> 44  python3.8                available    [ =stable ]
</span><span class='line'> 45  haproxy2                 available    [ =stable ]
</span><span class='line'> 46  collectd                 available    [ =stable ]
</span><span class='line'> 47  aws-nitro-enclaves-cli   available    [ =stable ]
</span><span class='line'> 48  R4                       available    [ =stable ]
</span><span class='line'> 49  kernel-5.4               available    [ =stable ]
</span><span class='line'> 50  selinux-ng               available    [ =stable ]
</span><span class='line'> 51  php8.0                   available    [ =stable ]
</span><span class='line'> 52  tomcat9                  available    [ =stable ]
</span><span class='line'> 53  unbound1.13              available    [ =stable ]
</span><span class='line'> 54  mariadb10.5              available    [ =stable ]
</span><span class='line'> 55  kernel-5.10              available    [ =stable ]
</span><span class='line'> 56  redis6                   available    [ =stable ]
</span><span class='line'> 57  ruby3.0                  available    [ =stable ]
</span><span class='line'> 58  postgresql12             available    [ =stable ]
</span><span class='line'> 59  postgresql13             available    [ =stable ]
</span><span class='line'> 60  mock2                    available    [ =stable ]
</span><span class='line'> 61  dnsmasq2.85              available    [ =stable ]
</span><span class='line'>[ec2-user@amazonlinux ~]$ 
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo service docker start
</span><span class='line'>Redirecting to /bin/systemctl start docker.service
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo systemctl enable docker
</span><span class='line'>Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo usermod -a -G docker ec2-user
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ docker info
</span><span class='line'>Client:
</span><span class='line'> Context:    default
</span><span class='line'> Debug Mode: false
</span><span class='line'>
</span><span class='line'>Server:
</span><span class='line'>ERROR: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/info": dial unix /var/run/docker.sock: connect: permission denied
</span><span class='line'>errors pretty printing info
</span><span class='line'>[ec2-user@amazonlinux ~]$ exit
</span><span class='line'>退出后再次连接：
</span><span class='line'>[ec2-user@amazonlinux ~]$ docker info 
</span><span class='line'>Client:
</span><span class='line'> Context:    default
</span><span class='line'> Debug Mode: false
</span><span class='line'>
</span><span class='line'>Server:
</span><span class='line'> Containers: 0
</span><span class='line'>  Running: 0
</span><span class='line'>  Paused: 0
</span><span class='line'>  Stopped: 0
</span><span class='line'> Images: 0
</span><span class='line'> Server Version: 20.10.7
</span><span class='line'> Storage Driver: overlay2
</span><span class='line'>  Backing Filesystem: xfs
</span><span class='line'>  Supports d_type: true
</span><span class='line'>  Native Overlay Diff: true
</span><span class='line'>  userxattr: false
</span><span class='line'> Logging Driver: json-file
</span><span class='line'> Cgroup Driver: cgroupfs
</span><span class='line'> Cgroup Version: 1
</span><span class='line'> Plugins:
</span><span class='line'>  Volume: local
</span><span class='line'>  Network: bridge host ipvlan macvlan null overlay
</span><span class='line'>  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
</span><span class='line'> Swarm: inactive
</span><span class='line'> Runtimes: io.containerd.runc.v2 io.containerd.runtime.v1.linux runc
</span><span class='line'> Default Runtime: runc
</span><span class='line'> Init Binary: docker-init
</span><span class='line'> containerd version: d71fcd7d8303cbf684402823e425e9dd2e99285d
</span><span class='line'> runc version: 84113eef6fc27af1b01b3181f31bbaf708715301
</span><span class='line'> init version: de40ad0
</span><span class='line'> Security Options:
</span><span class='line'>  seccomp
</span><span class='line'>   Profile: default
</span><span class='line'> Kernel Version: 4.14.268-205.500.amzn2.x86_64
</span><span class='line'> Operating System: Amazon Linux 2
</span><span class='line'> OSType: linux
</span><span class='line'> Architecture: x86_64
</span><span class='line'> CPUs: 2
</span><span class='line'> Total Memory: 3.828GiB
</span><span class='line'> Name: amazonlinux.onprem
</span><span class='line'> ID: GENW:47BV:UJR2:247P:CPFE:PHSO:RA6Z:H4RK:HYEE:LXN3:XDIZ:SI6Q
</span><span class='line'> Docker Root Dir: /var/lib/docker
</span><span class='line'> Debug Mode: false
</span><span class='line'> Registry: https://index.docker.io/v1/
</span><span class='line'> Labels:
</span><span class='line'> Experimental: false
</span><span class='line'> Insecure Registries:
</span><span class='line'>  127.0.0.0/8
</span><span class='line'> Live Restore Enabled: false
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo yum install telnet -y
</span></code></pre></td></tr></table></div></figure>


<h2>准备工作</h2>

<ul>
<li><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#%E5%87%86%E5%A4%87%E5%BC%80%E5%A7%8B">准备开始</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## 确保每个节点上 MAC 地址和 product_uuid 的唯一性
</span><span class='line'>[ec2-user@amazonlinux ~]$ ip link
</span><span class='line'>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
</span><span class='line'>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span><span class='line'>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
</span><span class='line'>    link/ether 00:0c:29:a4:a6:fc brd ff:ff:ff:ff:ff:ff
</span><span class='line'>[ec2-user@amazonlinux ~]$ ifconfig -a
</span><span class='line'>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500
</span><span class='line'>        inet 192.168.191.131  netmask 255.255.255.0  broadcast 192.168.191.255
</span><span class='line'>        inet6 fe80::20c:29ff:fea4:a6fc  prefixlen 64  scopeid 0x20&lt;link&gt;
</span><span class='line'>        ether 00:0c:29:a4:a6:fc  txqueuelen 1000  (Ethernet)
</span><span class='line'>        RX packets 1737  bytes 288390 (281.6 KiB)
</span><span class='line'>        RX errors 0  dropped 0  overruns 0  frame 0
</span><span class='line'>        TX packets 1704  bytes 139101 (135.8 KiB)
</span><span class='line'>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</span><span class='line'>
</span><span class='line'>lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536
</span><span class='line'>        inet 127.0.0.1  netmask 255.0.0.0
</span><span class='line'>        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;
</span><span class='line'>        loop  txqueuelen 1000  (Local Loopback)
</span><span class='line'>        RX packets 625  bytes 57768 (56.4 KiB)
</span><span class='line'>        RX errors 0  dropped 0  overruns 0  frame 0
</span><span class='line'>        TX packets 625  bytes 57768 (56.4 KiB)
</span><span class='line'>        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo cat /sys/class/dmi/id/product_uuid
</span><span class='line'>564DD81E-DEBE-B06D-CF35-D7E3DDA4A6FC
</span><span class='line'>
</span><span class='line'>## 检查网络适配器
</span><span class='line'># 只有一个网卡，跳过
</span><span class='line'>
</span><span class='line'>## 允许 iptables 检查桥接流量
</span><span class='line'>[ec2-user@amazonlinux ~]$ lsmod | grep br_netfilter
</span><span class='line'>[ec2-user@amazonlinux ~]$ 
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo modprobe br_netfilter
</span><span class='line'>[ec2-user@amazonlinux ~]$ lsmod | grep br_netfilter 
</span><span class='line'>br_netfilter           24576  0
</span><span class='line'>bridge                172032  1 br_netfilter
</span><span class='line'>[ec2-user@amazonlinux ~]$ 
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/k8s.conf
</span><span class='line'>br_netfilter
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf
</span><span class='line'>net.bridge.bridge-nf-call-ip6tables = 1
</span><span class='line'>net.bridge.bridge-nf-call-iptables = 1
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo sysctl --system
</span><span class='line'>* Applying /etc/sysctl.d/00-defaults.conf ...
</span><span class='line'>kernel.printk = 8 4 1 7
</span><span class='line'>kernel.panic = 30
</span><span class='line'>net.ipv4.neigh.default.gc_thresh1 = 0
</span><span class='line'>net.ipv6.neigh.default.gc_thresh1 = 0
</span><span class='line'>net.ipv4.neigh.default.gc_thresh2 = 15360
</span><span class='line'>net.ipv6.neigh.default.gc_thresh2 = 15360
</span><span class='line'>net.ipv4.neigh.default.gc_thresh3 = 16384
</span><span class='line'>net.ipv6.neigh.default.gc_thresh3 = 16384
</span><span class='line'>* Applying /usr/lib/sysctl.d/00-system.conf ...
</span><span class='line'>net.bridge.bridge-nf-call-ip6tables = 0
</span><span class='line'>net.bridge.bridge-nf-call-iptables = 0
</span><span class='line'>net.bridge.bridge-nf-call-arptables = 0
</span><span class='line'>* Applying /usr/lib/sysctl.d/10-default-yama-scope.conf ...
</span><span class='line'>kernel.yama.ptrace_scope = 0
</span><span class='line'>* Applying /usr/lib/sysctl.d/50-default.conf ...
</span><span class='line'>kernel.sysrq = 16
</span><span class='line'>kernel.core_uses_pid = 1
</span><span class='line'>kernel.kptr_restrict = 1
</span><span class='line'>net.ipv4.conf.default.rp_filter = 1
</span><span class='line'>net.ipv4.conf.all.rp_filter = 1
</span><span class='line'>net.ipv4.conf.default.accept_source_route = 0
</span><span class='line'>net.ipv4.conf.all.accept_source_route = 0
</span><span class='line'>net.ipv4.conf.default.promote_secondaries = 1
</span><span class='line'>net.ipv4.conf.all.promote_secondaries = 1
</span><span class='line'>fs.protected_hardlinks = 1
</span><span class='line'>fs.protected_symlinks = 1
</span><span class='line'>* Applying /etc/sysctl.d/99-amazon.conf ...
</span><span class='line'>kernel.sched_autogroup_enabled = 0
</span><span class='line'>* Applying /etc/sysctl.d/99-sysctl.conf ...
</span><span class='line'>* Applying /etc/sysctl.d/k8s.conf ...
</span><span class='line'>net.bridge.bridge-nf-call-ip6tables = 1
</span><span class='line'>net.bridge.bridge-nf-call-iptables = 1
</span><span class='line'>* Applying /etc/sysctl.conf ...
</span><span class='line'>
</span><span class='line'>## SELINUX
</span><span class='line'>sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config 
</span><span class='line'>setenforce 0
</span><span class='line'>
</span><span class='line'>## Docker
</span><span class='line'>cat &lt;&lt;EOF | sudo tee /etc/docker/daemon.json
</span><span class='line'>{
</span><span class='line'>  "exec-opts": ["native.cgroupdriver=systemd"],
</span><span class='line'>  "log-driver": "json-file",
</span><span class='line'>  "log-opts": {
</span><span class='line'>    "max-size": "100m"
</span><span class='line'>  },
</span><span class='line'>  "storage-driver": "overlay2"
</span><span class='line'>}
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>sudo systemctl enable docker
</span><span class='line'>sudo systemctl daemon-reload
</span><span class='line'>sudo systemctl restart docker
</span></code></pre></td></tr></table></div></figure>


<p>修改时区</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rm -rf /etc/localtime 
</span><span class='line'>sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime </span></code></pre></td></tr></table></div></figure>


<h2>主节点安装kubeadm并加载docker镜像</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## 修改主机名
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo hostnamectl --static set-hostname k8s 
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo hostname k8s 
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ rz
</span><span class='line'>rz waiting to receive.
</span><span class='line'>Starting zmodem transfer.  Press Ctrl+C to cancel.
</span><span class='line'>Transferring ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64.rpm...
</span><span class='line'>  100%    9253 KB    9253 KB/sec    00:00:01       0 Errors  
</span><span class='line'>Transferring d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64.rpm...
</span><span class='line'>  100%   21041 KB    21041 KB/sec    00:00:01       0 Errors  
</span><span class='line'>Transferring 4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64.rpm...
</span><span class='line'>  100%    7228 KB    7228 KB/sec    00:00:01       0 Errors  
</span><span class='line'>Transferring db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64.rpm...
</span><span class='line'>  100%   19030 KB    19030 KB/sec    00:00:01       0 Errors  
</span><span class='line'>Transferring 96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64.rpm...
</span><span class='line'>  100%    9689 KB    9689 KB/sec    00:00:01       0 Errors  
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ sudo yum install -y *.rpm
</span><span class='line'>Loaded plugins: langpacks, priorities, update-motd
</span><span class='line'>Examining 4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64.rpm: cri-tools-1.23.0-0.x86_64
</span><span class='line'>Marking 4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64.rpm to be installed
</span><span class='line'>Examining 96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64.rpm: kubectl-1.23.5-0.x86_64
</span><span class='line'>Marking 96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64.rpm to be installed
</span><span class='line'>Examining ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64.rpm: kubeadm-1.23.5-0.x86_64
</span><span class='line'>Marking ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64.rpm to be installed
</span><span class='line'>Examining d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64.rpm: kubelet-1.23.5-0.x86_64
</span><span class='line'>Marking d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64.rpm to be installed
</span><span class='line'>Examining db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64.rpm: kubernetes-cni-0.8.7-0.x86_64
</span><span class='line'>Marking db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64.rpm to be installed
</span><span class='line'>Resolving Dependencies
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package cri-tools.x86_64 0:1.23.0-0 will be installed
</span><span class='line'>---&gt; Package kubeadm.x86_64 0:1.23.5-0 will be installed
</span><span class='line'>---&gt; Package kubectl.x86_64 0:1.23.5-0 will be installed
</span><span class='line'>---&gt; Package kubelet.x86_64 0:1.23.5-0 will be installed
</span><span class='line'>--&gt; Processing Dependency: conntrack for package: kubelet-1.23.5-0.x86_64
</span><span class='line'>--&gt; Processing Dependency: ebtables for package: kubelet-1.23.5-0.x86_64
</span><span class='line'>--&gt; Processing Dependency: socat for package: kubelet-1.23.5-0.x86_64
</span><span class='line'>---&gt; Package kubernetes-cni.x86_64 0:0.8.7-0 will be installed
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package conntrack-tools.x86_64 0:1.4.4-5.amzn2.2 will be installed
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cttimeout.so.1(LIBNETFILTER_CTTIMEOUT_1.1)(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cttimeout.so.1(LIBNETFILTER_CTTIMEOUT_1.0)(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cthelper.so.0(LIBNETFILTER_CTHELPER_1.0)(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_queue.so.1()(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cttimeout.so.1()(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cthelper.so.0()(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>---&gt; Package ebtables.x86_64 0:2.0.10-16.amzn2.0.1 will be installed
</span><span class='line'>---&gt; Package socat.x86_64 0:1.7.3.2-2.amzn2.0.1 will be installed
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package libnetfilter_cthelper.x86_64 0:1.0.0-10.amzn2.1 will be installed
</span><span class='line'>---&gt; Package libnetfilter_cttimeout.x86_64 0:1.0.0-6.amzn2.1 will be installed
</span><span class='line'>---&gt; Package libnetfilter_queue.x86_64 0:1.0.2-2.amzn2.0.2 will be installed
</span><span class='line'>--&gt; Finished Dependency Resolution
</span><span class='line'>
</span><span class='line'>Dependencies Resolved
</span><span class='line'>
</span><span class='line'>======================================================================================================================================================
</span><span class='line'> Package                Arch   Version             Repository                                                                                    Size
</span><span class='line'>======================================================================================================================================================
</span><span class='line'>Installing:
</span><span class='line'> cri-tools              x86_64 1.23.0-0            /4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64   34 M
</span><span class='line'> kubeadm                x86_64 1.23.5-0            /ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64     43 M
</span><span class='line'> kubectl                x86_64 1.23.5-0            /96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64     44 M
</span><span class='line'> kubelet                x86_64 1.23.5-0            /d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64    119 M
</span><span class='line'> kubernetes-cni         x86_64 0.8.7-0             /db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64
</span><span class='line'>                                                                                                                                                 55 M
</span><span class='line'>Installing for dependencies:
</span><span class='line'> conntrack-tools        x86_64 1.4.4-5.amzn2.2     amzn2-core                                                                                   186 k
</span><span class='line'> ebtables               x86_64 2.0.10-16.amzn2.0.1 amzn2-core                                                                                   122 k
</span><span class='line'> libnetfilter_cthelper  x86_64 1.0.0-10.amzn2.1    amzn2-core                                                                                    18 k
</span><span class='line'> libnetfilter_cttimeout x86_64 1.0.0-6.amzn2.1     amzn2-core                                                                                    18 k
</span><span class='line'> libnetfilter_queue     x86_64 1.0.2-2.amzn2.0.2   amzn2-core                                                                                    24 k
</span><span class='line'> socat                  x86_64 1.7.3.2-2.amzn2.0.1 amzn2-core                                                                                   291 k
</span><span class='line'>
</span><span class='line'>Transaction Summary
</span><span class='line'>======================================================================================================================================================
</span><span class='line'>Install  5 Packages (+6 Dependent packages)
</span><span class='line'>
</span><span class='line'>Total size: 296 M
</span><span class='line'>Total download size: 658 k
</span><span class='line'>Installed size: 298 M
</span><span class='line'>Downloading packages:
</span><span class='line'>(1/6): ebtables-2.0.10-16.amzn2.0.1.x86_64.rpm                                                                                 | 122 kB  00:00:10     
</span><span class='line'>(2/6): libnetfilter_cthelper-1.0.0-10.amzn2.1.x86_64.rpm                                                                       |  18 kB  00:00:00     
</span><span class='line'>(3/6): conntrack-tools-1.4.4-5.amzn2.2.x86_64.rpm                                                                              | 186 kB  00:00:10     
</span><span class='line'>(4/6): libnetfilter_cttimeout-1.0.0-6.amzn2.1.x86_64.rpm                                                                       |  18 kB  00:00:00     
</span><span class='line'>(5/6): libnetfilter_queue-1.0.2-2.amzn2.0.2.x86_64.rpm                                                                         |  24 kB  00:00:00     
</span><span class='line'>(6/6): socat-1.7.3.2-2.amzn2.0.1.x86_64.rpm                                                                                    | 291 kB  00:00:00     
</span><span class='line'>------------------------------------------------------------------------------------------------------------------------------------------------------
</span><span class='line'>Total                                                                                                                  45 kB/s | 658 kB  00:00:14     
</span><span class='line'>Running transaction check
</span><span class='line'>Running transaction test
</span><span class='line'>Transaction test succeeded
</span><span class='line'>Running transaction
</span><span class='line'>  Installing : libnetfilter_cthelper-1.0.0-10.amzn2.1.x86_64                                                                                     1/11 
</span><span class='line'>  Installing : libnetfilter_cttimeout-1.0.0-6.amzn2.1.x86_64                                                                                     2/11 
</span><span class='line'>  Installing : libnetfilter_queue-1.0.2-2.amzn2.0.2.x86_64                                                                                       3/11 
</span><span class='line'>  Installing : conntrack-tools-1.4.4-5.amzn2.2.x86_64                                                                                            4/11 
</span><span class='line'>  Installing : ebtables-2.0.10-16.amzn2.0.1.x86_64                                                                                               5/11 
</span><span class='line'>  Installing : cri-tools-1.23.0-0.x86_64                                                                                                         6/11 
</span><span class='line'>  Installing : socat-1.7.3.2-2.amzn2.0.1.x86_64                                                                                                  7/11 
</span><span class='line'>  Installing : kubelet-1.23.5-0.x86_64                                                                                                           8/11 
</span><span class='line'>  Installing : kubernetes-cni-0.8.7-0.x86_64                                                                                                     9/11 
</span><span class='line'>  Installing : kubectl-1.23.5-0.x86_64                                                                                                          10/11 
</span><span class='line'>  Installing : kubeadm-1.23.5-0.x86_64                                                                                                          11/11 
</span><span class='line'>  Verifying  : kubernetes-cni-0.8.7-0.x86_64                                                                                                     1/11 
</span><span class='line'>  Verifying  : kubectl-1.23.5-0.x86_64                                                                                                           2/11 
</span><span class='line'>  Verifying  : socat-1.7.3.2-2.amzn2.0.1.x86_64                                                                                                  3/11 
</span><span class='line'>  Verifying  : cri-tools-1.23.0-0.x86_64                                                                                                         4/11 
</span><span class='line'>  Verifying  : ebtables-2.0.10-16.amzn2.0.1.x86_64                                                                                               5/11 
</span><span class='line'>  Verifying  : libnetfilter_queue-1.0.2-2.amzn2.0.2.x86_64                                                                                       6/11 
</span><span class='line'>  Verifying  : conntrack-tools-1.4.4-5.amzn2.2.x86_64                                                                                            7/11 
</span><span class='line'>  Verifying  : libnetfilter_cttimeout-1.0.0-6.amzn2.1.x86_64                                                                                     8/11 
</span><span class='line'>  Verifying  : kubeadm-1.23.5-0.x86_64                                                                                                           9/11 
</span><span class='line'>  Verifying  : kubelet-1.23.5-0.x86_64                                                                                                          10/11 
</span><span class='line'>  Verifying  : libnetfilter_cthelper-1.0.0-10.amzn2.1.x86_64                                                                                    11/11 
</span><span class='line'>
</span><span class='line'>Installed:
</span><span class='line'>  cri-tools.x86_64 0:1.23.0-0   kubeadm.x86_64 0:1.23.5-0   kubectl.x86_64 0:1.23.5-0   kubelet.x86_64 0:1.23.5-0   kubernetes-cni.x86_64 0:0.8.7-0  
</span><span class='line'>
</span><span class='line'>Dependency Installed:
</span><span class='line'>  conntrack-tools.x86_64 0:1.4.4-5.amzn2.2          ebtables.x86_64 0:2.0.10-16.amzn2.0.1           libnetfilter_cthelper.x86_64 0:1.0.0-10.amzn2.1  
</span><span class='line'>  libnetfilter_cttimeout.x86_64 0:1.0.0-6.amzn2.1   libnetfilter_queue.x86_64 0:1.0.2-2.amzn2.0.2   socat.x86_64 0:1.7.3.2-2.amzn2.0.1               
</span><span class='line'>
</span><span class='line'>Complete!
</span><span class='line'>[ec2-user@k8s ~]$ 
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ sudo yum install ebtables ethtool             
</span></code></pre></td></tr></table></div></figure>


<p>加载docker镜像：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ docker load -i k8s.tar.gz 
</span><span class='line'>194a408e97d8: Loading layer [==================================================&gt;]  68.57MB/68.57MB
</span><span class='line'>2b8347a02bc5: Loading layer [==================================================&gt;]  1.509MB/1.509MB
</span><span class='line'>618b3e11ccba: Loading layer [==================================================&gt;]  44.17MB/44.17MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-proxy:v1.23.5
</span><span class='line'>5b1fa8e3e100: Loading layer [==================================================&gt;]  3.697MB/3.697MB
</span><span class='line'>83e216f0eb98: Loading layer [==================================================&gt;]  1.509MB/1.509MB
</span><span class='line'>a70573edad24: Loading layer [==================================================&gt;]  121.1MB/121.1MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-controller-manager:v1.23.5
</span><span class='line'>46576c5a6a97: Loading layer [==================================================&gt;]  49.63MB/49.63MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-scheduler:v1.23.5
</span><span class='line'>6d75f23be3dd: Loading layer [==================================================&gt;]  3.697MB/3.697MB
</span><span class='line'>b6e8c573c18d: Loading layer [==================================================&gt;]  2.257MB/2.257MB
</span><span class='line'>d80003ff5706: Loading layer [==================================================&gt;]    267MB/267MB
</span><span class='line'>664dd6f2834b: Loading layer [==================================================&gt;]  2.137MB/2.137MB
</span><span class='line'>62ae031121b1: Loading layer [==================================================&gt;]  18.86MB/18.86MB
</span><span class='line'>Loaded image: k8s.gcr.io/etcd:3.5.1-0
</span><span class='line'>256bc5c338a6: Loading layer [==================================================&gt;]  336.4kB/336.4kB
</span><span class='line'>80e4a2390030: Loading layer [==================================================&gt;]  46.62MB/46.62MB
</span><span class='line'>Loaded image: k8s.gcr.io/coredns/coredns:v1.8.6
</span><span class='line'>1021ef88c797: Loading layer [==================================================&gt;]  684.5kB/684.5kB
</span><span class='line'>Loaded image: k8s.gcr.io/pause:3.6
</span><span class='line'>50098fdfecae: Loading layer [==================================================&gt;]  131.3MB/131.3MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-apiserver:v1.23.5
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ docker images 
</span><span class='line'>REPOSITORY                           TAG       IMAGE ID       CREATED        SIZE
</span><span class='line'>k8s.gcr.io/kube-apiserver            v1.23.5   3fc1d62d6587   15 hours ago   135MB
</span><span class='line'>k8s.gcr.io/kube-proxy                v1.23.5   3c53fa8541f9   15 hours ago   112MB
</span><span class='line'>k8s.gcr.io/kube-controller-manager   v1.23.5   b0c9e5e4dbb1   15 hours ago   125MB
</span><span class='line'>k8s.gcr.io/kube-scheduler            v1.23.5   884d49d6d8c9   15 hours ago   53.5MB
</span><span class='line'>k8s.gcr.io/etcd                      3.5.1-0   25f8c7f3da61   4 months ago   293MB
</span><span class='line'>k8s.gcr.io/coredns/coredns           v1.8.6    a4ca41631cc7   5 months ago   46.8MB
</span><span class='line'>k8s.gcr.io/pause                     3.6       6270bb605e12   6 months ago   683kB
</span><span class='line'>[ec2-user@k8s ~]$ 
</span></code></pre></td></tr></table></div></figure>


<h2>主节点(控制平面control-plane node)启动服务</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ sudo su - 
</span><span class='line'>
</span><span class='line'>[root@k8s ~]# kubeadm init 
</span><span class='line'>[init] Using Kubernetes version: v1.23.5
</span><span class='line'>[preflight] Running pre-flight checks
</span><span class='line'>        [WARNING FileExisting-tc]: tc not found in system path
</span><span class='line'>        [WARNING Hostname]: hostname "k8s" could not be reached
</span><span class='line'>        [WARNING Hostname]: hostname "k8s": lookup k8s on 192.168.191.2:53: no such host
</span><span class='line'>        [WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
</span><span class='line'>[preflight] Pulling images required for setting up a Kubernetes cluster
</span><span class='line'>[preflight] This might take a minute or two, depending on the speed of your internet connection
</span><span class='line'>[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
</span><span class='line'>[certs] Using certificateDir folder "/etc/kubernetes/pki"
</span><span class='line'>[certs] Generating "ca" certificate and key
</span><span class='line'>[certs] Generating "apiserver" certificate and key
</span><span class='line'>[certs] apiserver serving cert is signed for DNS names [k8s kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.191.131]
</span><span class='line'>[certs] Generating "apiserver-kubelet-client" certificate and key
</span><span class='line'>[certs] Generating "front-proxy-ca" certificate and key
</span><span class='line'>[certs] Generating "front-proxy-client" certificate and key
</span><span class='line'>[certs] Generating "etcd/ca" certificate and key
</span><span class='line'>[certs] Generating "etcd/server" certificate and key
</span><span class='line'>[certs] etcd/server serving cert is signed for DNS names [k8s localhost] and IPs [192.168.191.131 127.0.0.1 ::1]
</span><span class='line'>[certs] Generating "etcd/peer" certificate and key
</span><span class='line'>[certs] etcd/peer serving cert is signed for DNS names [k8s localhost] and IPs [192.168.191.131 127.0.0.1 ::1]
</span><span class='line'>[certs] Generating "etcd/healthcheck-client" certificate and key
</span><span class='line'>[certs] Generating "apiserver-etcd-client" certificate and key
</span><span class='line'>[certs] Generating "sa" key and public key
</span><span class='line'>[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
</span><span class='line'>[kubeconfig] Writing "admin.conf" kubeconfig file
</span><span class='line'>[kubeconfig] Writing "kubelet.conf" kubeconfig file
</span><span class='line'>[kubeconfig] Writing "controller-manager.conf" kubeconfig file
</span><span class='line'>[kubeconfig] Writing "scheduler.conf" kubeconfig file
</span><span class='line'>[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
</span><span class='line'>[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
</span><span class='line'>[kubelet-start] Starting the kubelet
</span><span class='line'>[control-plane] Using manifest folder "/etc/kubernetes/manifests"
</span><span class='line'>[control-plane] Creating static Pod manifest for "kube-apiserver"
</span><span class='line'>[control-plane] Creating static Pod manifest for "kube-controller-manager"
</span><span class='line'>[control-plane] Creating static Pod manifest for "kube-scheduler"
</span><span class='line'>[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
</span><span class='line'>[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
</span><span class='line'>[kubelet-check] Initial timeout of 40s passed.
</span><span class='line'>[apiclient] All control plane components are healthy after 87.001525 seconds
</span><span class='line'>[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
</span><span class='line'>[kubelet] Creating a ConfigMap "kubelet-config-1.23" in namespace kube-system with the configuration for the kubelets in the cluster
</span><span class='line'>NOTE: The "kubelet-config-1.23" naming of the kubelet ConfigMap is deprecated. Once the UnversionedKubeletConfigMap feature gate graduates to Beta the default name will become just "kubelet-config". Kubeadm upgrade will handle this transition transparently.
</span><span class='line'>[upload-certs] Skipping phase. Please see --upload-certs
</span><span class='line'>[mark-control-plane] Marking the node k8s as control-plane by adding the labels: [node-role.kubernetes.io/master(deprecated) node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
</span><span class='line'>[mark-control-plane] Marking the node k8s as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]
</span><span class='line'>[bootstrap-token] Using token: sj6fff.bpak7gkd3hnyzcm5
</span><span class='line'>[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
</span><span class='line'>[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes
</span><span class='line'>[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
</span><span class='line'>[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
</span><span class='line'>[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
</span><span class='line'>[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
</span><span class='line'>[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
</span><span class='line'>[addons] Applied essential addon: CoreDNS
</span><span class='line'>[addons] Applied essential addon: kube-proxy
</span><span class='line'>
</span><span class='line'>Your Kubernetes control-plane has initialized successfully!
</span><span class='line'>
</span><span class='line'>To start using your cluster, you need to run the following as a regular user:
</span><span class='line'>
</span><span class='line'>  mkdir -p $HOME/.kube
</span><span class='line'>  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
</span><span class='line'>  sudo chown $(id -u):$(id -g) $HOME/.kube/config
</span><span class='line'>
</span><span class='line'>Alternatively, if you are the root user, you can run:
</span><span class='line'>
</span><span class='line'>  export KUBECONFIG=/etc/kubernetes/admin.conf
</span><span class='line'>
</span><span class='line'>You should now deploy a pod network to the cluster.
</span><span class='line'>Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
</span><span class='line'>  https://kubernetes.io/docs/concepts/cluster-administration/addons/
</span><span class='line'>
</span><span class='line'>Then you can join any number of worker nodes by running the following on each as root:
</span><span class='line'>
</span><span class='line'>kubeadm join 192.168.191.131:6443 --token sj6fff.bpak7gkd3hnyzcm5 \
</span><span class='line'>        --discovery-token-ca-cert-hash sha256:8e15649afc0771e80cce7f1dfdbb0933f4fdbd45ea1f9e03be1f3b78449a6d3c 
</span><span class='line'>[root@k8s ~]# 
</span></code></pre></td></tr></table></div></figure>


<p>普通用户配置kubectl：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ mkdir -p $HOME/.kube
</span><span class='line'>[ec2-user@k8s ~]$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
</span><span class='line'>[ec2-user@k8s ~]$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ which kubectl
</span><span class='line'>/usr/bin/kubectl
</span><span class='line'>[ec2-user@k8s ~]$ 
</span><span class='line'>[ec2-user@k8s ~]$ kubectl cluster-info
</span><span class='line'>Kubernetes control plane is running at https://192.168.191.131:6443
</span><span class='line'>CoreDNS is running at https://192.168.191.131:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
</span><span class='line'>
</span><span class='line'>To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl get nodes -o wide
</span><span class='line'>NAME   STATUS     ROLES                  AGE   VERSION   INTERNAL-IP       EXTERNAL-IP   OS-IMAGE         KERNEL-VERSION                  CONTAINER-RUNTIME
</span><span class='line'>k8s    NotReady   control-plane,master   14m   v1.23.5   192.168.191.131   &lt;none&gt;        Amazon Linux 2   4.14.268-205.500.amzn2.x86_64   docker://20.10.7
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl get pods --all-namespaces -o wide
</span><span class='line'>NAMESPACE     NAME                          READY   STATUS    RESTARTS   AGE   IP                NODE     NOMINATED NODE   READINESS GATES
</span><span class='line'>kube-system   coredns-64897985d-pcxpd       0/1     Pending   0          14m   &lt;none&gt;            &lt;none&gt;   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   coredns-64897985d-pfsj6       0/1     Pending   0          14m   &lt;none&gt;            &lt;none&gt;   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   etcd-k8s                      1/1     Running   0          14m   192.168.191.131   k8s      &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-apiserver-k8s            1/1     Running   0          14m   192.168.191.131   k8s      &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-controller-manager-k8s   1/1     Running   0          14m   192.168.191.131   k8s      &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-proxy-qj6lw              1/1     Running   0          14m   192.168.191.131   k8s      &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-scheduler-k8s            1/1     Running   0          14m   192.168.191.131   k8s      &lt;none&gt;           &lt;none&gt;
</span><span class='line'>[ec2-user@k8s ~]$ 
</span></code></pre></td></tr></table></div></figure>


<p>如果希望主节点（控制平面节点control-plane node)上也调度 Pod， 例如用于开发的单机 Kubernetes 集群，请运行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s ~]# export KUBECONFIG=/etc/kubernetes/admin.conf
</span><span class='line'>[root@k8s ~]# kubectl taint nodes --all node-role.kubernetes.io/master-
</span><span class='line'>node/k8s untainted
</span><span class='line'>[root@k8s ~]# 
</span></code></pre></td></tr></table></div></figure>


<h2>加入工作节点(nodes)</h2>

<p>先把docker安装好，以及系统基础配置，参考上面的步骤。然后安装kubeadm，以及加载gcr的docker镜像。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@amazonlinux ~]$ ll
</span><span class='line'>total 285480
</span><span class='line'>-rw-r--r-- 1 ec2-user ec2-user   7401938 Mar 17 15:22 4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 ec2-user ec2-user   9921646 Mar 17 15:22 96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 ec2-user ec2-user   9475514 Mar 17 15:22 ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 ec2-user ec2-user  21546750 Mar 17 15:22 d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 ec2-user ec2-user  19487362 Mar 17 15:22 db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64.rpm
</span><span class='line'>-rw-r--r-- 1 ec2-user ec2-user 224482960 Mar 17 15:22 k8s.tar.gz
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo yum install *.rpm 
</span><span class='line'>Loaded plugins: langpacks, priorities, update-motd
</span><span class='line'>Examining 4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64.rpm: cri-tools-1.23.0-0.x86_64
</span><span class='line'>Marking 4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64.rpm to be installed
</span><span class='line'>Examining 96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64.rpm: kubectl-1.23.5-0.x86_64
</span><span class='line'>Marking 96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64.rpm to be installed
</span><span class='line'>Examining ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64.rpm: kubeadm-1.23.5-0.x86_64
</span><span class='line'>Marking ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64.rpm to be installed
</span><span class='line'>Examining d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64.rpm: kubelet-1.23.5-0.x86_64
</span><span class='line'>Marking d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64.rpm to be installed
</span><span class='line'>Examining db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64.rpm: kubernetes-cni-0.8.7-0.x86_64
</span><span class='line'>Marking db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64.rpm to be installed
</span><span class='line'>Resolving Dependencies
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package cri-tools.x86_64 0:1.23.0-0 will be installed
</span><span class='line'>---&gt; Package kubeadm.x86_64 0:1.23.5-0 will be installed
</span><span class='line'>---&gt; Package kubectl.x86_64 0:1.23.5-0 will be installed
</span><span class='line'>---&gt; Package kubelet.x86_64 0:1.23.5-0 will be installed
</span><span class='line'>--&gt; Processing Dependency: conntrack for package: kubelet-1.23.5-0.x86_64
</span><span class='line'>amzn2-core                                                                                                                                  | 3.7 kB  00:00:00     
</span><span class='line'>--&gt; Processing Dependency: ebtables for package: kubelet-1.23.5-0.x86_64
</span><span class='line'>--&gt; Processing Dependency: socat for package: kubelet-1.23.5-0.x86_64
</span><span class='line'>---&gt; Package kubernetes-cni.x86_64 0:0.8.7-0 will be installed
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package conntrack-tools.x86_64 0:1.4.4-5.amzn2.2 will be installed
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cttimeout.so.1(LIBNETFILTER_CTTIMEOUT_1.1)(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cttimeout.so.1(LIBNETFILTER_CTTIMEOUT_1.0)(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cthelper.so.0(LIBNETFILTER_CTHELPER_1.0)(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_queue.so.1()(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cttimeout.so.1()(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>--&gt; Processing Dependency: libnetfilter_cthelper.so.0()(64bit) for package: conntrack-tools-1.4.4-5.amzn2.2.x86_64
</span><span class='line'>---&gt; Package ebtables.x86_64 0:2.0.10-16.amzn2.0.1 will be installed
</span><span class='line'>---&gt; Package socat.x86_64 0:1.7.3.2-2.amzn2.0.1 will be installed
</span><span class='line'>--&gt; Running transaction check
</span><span class='line'>---&gt; Package libnetfilter_cthelper.x86_64 0:1.0.0-10.amzn2.1 will be installed
</span><span class='line'>---&gt; Package libnetfilter_cttimeout.x86_64 0:1.0.0-6.amzn2.1 will be installed
</span><span class='line'>---&gt; Package libnetfilter_queue.x86_64 0:1.0.2-2.amzn2.0.2 will be installed
</span><span class='line'>--&gt; Finished Dependency Resolution
</span><span class='line'>
</span><span class='line'>Dependencies Resolved
</span><span class='line'>
</span><span class='line'>===================================================================================================================================================================
</span><span class='line'> Package                  Arch     Version                 Repository                                                                                         Size
</span><span class='line'>===================================================================================================================================================================
</span><span class='line'>Installing:
</span><span class='line'> cri-tools                x86_64   1.23.0-0                /4d300a7655f56307d35f127d99dc192b6aa4997f322234e754f16aaa60fd8906-cri-tools-1.23.0-0.x86_64        34 M
</span><span class='line'> kubeadm                  x86_64   1.23.5-0                /ab0e12925be5251baf5dd3b31493663d46e4a7b458c7a5b6b717f4ae87a81bd4-kubeadm-1.23.5-0.x86_64          43 M
</span><span class='line'> kubectl                  x86_64   1.23.5-0                /96b208380314a19ded917eaf125ed748f5e2b28a3cc8707a10a76a9f5b61c0df-kubectl-1.23.5-0.x86_64          44 M
</span><span class='line'> kubelet                  x86_64   1.23.5-0                /d39aa6eb38a6a8326b7e88c622107327dfd02ac8aaae32eceb856643a2ad9981-kubelet-1.23.5-0.x86_64         119 M
</span><span class='line'> kubernetes-cni           x86_64   0.8.7-0                 /db7cb5cb0b3f6875f54d10f02e625573988e3e91fd4fc5eef0b1876bb18604ad-kubernetes-cni-0.8.7-0.x86_64    55 M
</span><span class='line'>Installing for dependencies:
</span><span class='line'> conntrack-tools          x86_64   1.4.4-5.amzn2.2         amzn2-core                                                                                        186 k
</span><span class='line'> ebtables                 x86_64   2.0.10-16.amzn2.0.1     amzn2-core                                                                                        122 k
</span><span class='line'> libnetfilter_cthelper    x86_64   1.0.0-10.amzn2.1        amzn2-core                                                                                         18 k
</span><span class='line'> libnetfilter_cttimeout   x86_64   1.0.0-6.amzn2.1         amzn2-core                                                                                         18 k
</span><span class='line'> libnetfilter_queue       x86_64   1.0.2-2.amzn2.0.2       amzn2-core                                                                                         24 k
</span><span class='line'> socat                    x86_64   1.7.3.2-2.amzn2.0.1     amzn2-core                                                                                        291 k
</span><span class='line'>
</span><span class='line'>Transaction Summary
</span><span class='line'>===================================================================================================================================================================
</span><span class='line'>Install  5 Packages (+6 Dependent packages)
</span><span class='line'>
</span><span class='line'>Total size: 296 M
</span><span class='line'>Total download size: 658 k
</span><span class='line'>Installed size: 298 M
</span><span class='line'>Is this ok [y/d/N]: y
</span><span class='line'>Downloading packages:
</span><span class='line'>(1/6): ebtables-2.0.10-16.amzn2.0.1.x86_64.rpm                                                                                              | 122 kB  00:00:00     
</span><span class='line'>(2/6): libnetfilter_cthelper-1.0.0-10.amzn2.1.x86_64.rpm                                                                                    |  18 kB  00:00:00     
</span><span class='line'>(3/6): libnetfilter_cttimeout-1.0.0-6.amzn2.1.x86_64.rpm                                                                                    |  18 kB  00:00:00     
</span><span class='line'>(4/6): conntrack-tools-1.4.4-5.amzn2.2.x86_64.rpm                                                                                           | 186 kB  00:00:00     
</span><span class='line'>(5/6): libnetfilter_queue-1.0.2-2.amzn2.0.2.x86_64.rpm                                                                                      |  24 kB  00:00:00     
</span><span class='line'>(6/6): socat-1.7.3.2-2.amzn2.0.1.x86_64.rpm                                                                                                 | 291 kB  00:00:00     
</span><span class='line'>-------------------------------------------------------------------------------------------------------------------------------------------------------------------
</span><span class='line'>Total                                                                                                                              1.0 MB/s | 658 kB  00:00:00     
</span><span class='line'>Running transaction check
</span><span class='line'>Running transaction test
</span><span class='line'>Transaction test succeeded
</span><span class='line'>Running transaction
</span><span class='line'>  Installing : libnetfilter_cthelper-1.0.0-10.amzn2.1.x86_64                                                                                                  1/11 
</span><span class='line'>  Installing : libnetfilter_cttimeout-1.0.0-6.amzn2.1.x86_64                                                                                                  2/11 
</span><span class='line'>  Installing : libnetfilter_queue-1.0.2-2.amzn2.0.2.x86_64                                                                                                    3/11 
</span><span class='line'>  Installing : conntrack-tools-1.4.4-5.amzn2.2.x86_64                                                                                                         4/11 
</span><span class='line'>  Installing : ebtables-2.0.10-16.amzn2.0.1.x86_64                                                                                                            5/11 
</span><span class='line'>  Installing : cri-tools-1.23.0-0.x86_64                                                                                                                      6/11 
</span><span class='line'>  Installing : socat-1.7.3.2-2.amzn2.0.1.x86_64                                                                                                               7/11 
</span><span class='line'>  Installing : kubelet-1.23.5-0.x86_64                                                                                                                        8/11 
</span><span class='line'>  Installing : kubernetes-cni-0.8.7-0.x86_64                                                                                                                  9/11 
</span><span class='line'>  Installing : kubectl-1.23.5-0.x86_64                                                                                                                       10/11 
</span><span class='line'>  Installing : kubeadm-1.23.5-0.x86_64                                                                                                                       11/11 
</span><span class='line'>  Verifying  : kubernetes-cni-0.8.7-0.x86_64                                                                                                                  1/11 
</span><span class='line'>  Verifying  : kubectl-1.23.5-0.x86_64                                                                                                                        2/11 
</span><span class='line'>  Verifying  : socat-1.7.3.2-2.amzn2.0.1.x86_64                                                                                                               3/11 
</span><span class='line'>  Verifying  : cri-tools-1.23.0-0.x86_64                                                                                                                      4/11 
</span><span class='line'>  Verifying  : ebtables-2.0.10-16.amzn2.0.1.x86_64                                                                                                            5/11 
</span><span class='line'>  Verifying  : libnetfilter_queue-1.0.2-2.amzn2.0.2.x86_64                                                                                                    6/11 
</span><span class='line'>  Verifying  : conntrack-tools-1.4.4-5.amzn2.2.x86_64                                                                                                         7/11 
</span><span class='line'>  Verifying  : libnetfilter_cttimeout-1.0.0-6.amzn2.1.x86_64                                                                                                  8/11 
</span><span class='line'>  Verifying  : kubeadm-1.23.5-0.x86_64                                                                                                                        9/11 
</span><span class='line'>  Verifying  : kubelet-1.23.5-0.x86_64                                                                                                                       10/11 
</span><span class='line'>  Verifying  : libnetfilter_cthelper-1.0.0-10.amzn2.1.x86_64                                                                                                 11/11 
</span><span class='line'>
</span><span class='line'>Installed:
</span><span class='line'>  cri-tools.x86_64 0:1.23.0-0     kubeadm.x86_64 0:1.23.5-0     kubectl.x86_64 0:1.23.5-0     kubelet.x86_64 0:1.23.5-0     kubernetes-cni.x86_64 0:0.8.7-0    
</span><span class='line'>
</span><span class='line'>Dependency Installed:
</span><span class='line'>  conntrack-tools.x86_64 0:1.4.4-5.amzn2.2              ebtables.x86_64 0:2.0.10-16.amzn2.0.1               libnetfilter_cthelper.x86_64 0:1.0.0-10.amzn2.1      
</span><span class='line'>  libnetfilter_cttimeout.x86_64 0:1.0.0-6.amzn2.1       libnetfilter_queue.x86_64 0:1.0.2-2.amzn2.0.2       socat.x86_64 0:1.7.3.2-2.amzn2.0.1                   
</span><span class='line'>
</span><span class='line'>Complete!
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ sudo yum install ebtables ethtool  
</span><span class='line'>Loaded plugins: langpacks, priorities, update-motd
</span><span class='line'>Package ebtables-2.0.10-16.amzn2.0.1.x86_64 already installed and latest version
</span><span class='line'>Package 2:ethtool-4.8-10.amzn2.x86_64 already installed and latest version
</span><span class='line'>Nothing to do
</span></code></pre></td></tr></table></div></figure>


<p>加载docker镜像</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ docker load -i k8s.tar.gz 
</span><span class='line'>194a408e97d8: Loading layer [==================================================&gt;]  68.57MB/68.57MB
</span><span class='line'>2b8347a02bc5: Loading layer [==================================================&gt;]  1.509MB/1.509MB
</span><span class='line'>618b3e11ccba: Loading layer [==================================================&gt;]  44.17MB/44.17MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-proxy:v1.23.5
</span><span class='line'>5b1fa8e3e100: Loading layer [==================================================&gt;]  3.697MB/3.697MB
</span><span class='line'>83e216f0eb98: Loading layer [==================================================&gt;]  1.509MB/1.509MB
</span><span class='line'>a70573edad24: Loading layer [==================================================&gt;]  121.1MB/121.1MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-controller-manager:v1.23.5
</span><span class='line'>46576c5a6a97: Loading layer [==================================================&gt;]  49.63MB/49.63MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-scheduler:v1.23.5
</span><span class='line'>6d75f23be3dd: Loading layer [==================================================&gt;]  3.697MB/3.697MB
</span><span class='line'>b6e8c573c18d: Loading layer [==================================================&gt;]  2.257MB/2.257MB
</span><span class='line'>d80003ff5706: Loading layer [==================================================&gt;]    267MB/267MB
</span><span class='line'>664dd6f2834b: Loading layer [==================================================&gt;]  2.137MB/2.137MB
</span><span class='line'>62ae031121b1: Loading layer [==================================================&gt;]  18.86MB/18.86MB
</span><span class='line'>Loaded image: k8s.gcr.io/etcd:3.5.1-0
</span><span class='line'>256bc5c338a6: Loading layer [==================================================&gt;]  336.4kB/336.4kB
</span><span class='line'>80e4a2390030: Loading layer [==================================================&gt;]  46.62MB/46.62MB
</span><span class='line'>Loaded image: k8s.gcr.io/coredns/coredns:v1.8.6
</span><span class='line'>1021ef88c797: Loading layer [==================================================&gt;]  684.5kB/684.5kB
</span><span class='line'>Loaded image: k8s.gcr.io/pause:3.6
</span><span class='line'>50098fdfecae: Loading layer [==================================================&gt;]  131.3MB/131.3MB
</span><span class='line'>Loaded image: k8s.gcr.io/kube-apiserver:v1.23.5
</span><span class='line'>
</span><span class='line'>[ec2-user@amazonlinux ~]$ docker images 
</span><span class='line'>REPOSITORY                           TAG       IMAGE ID       CREATED        SIZE
</span><span class='line'>k8s.gcr.io/kube-apiserver            v1.23.5   3fc1d62d6587   15 hours ago   135MB
</span><span class='line'>k8s.gcr.io/kube-proxy                v1.23.5   3c53fa8541f9   15 hours ago   112MB
</span><span class='line'>k8s.gcr.io/kube-controller-manager   v1.23.5   b0c9e5e4dbb1   15 hours ago   125MB
</span><span class='line'>k8s.gcr.io/kube-scheduler            v1.23.5   884d49d6d8c9   15 hours ago   53.5MB
</span><span class='line'>k8s.gcr.io/etcd                      3.5.1-0   25f8c7f3da61   4 months ago   293MB
</span><span class='line'>k8s.gcr.io/coredns/coredns           v1.8.6    a4ca41631cc7   5 months ago   46.8MB
</span><span class='line'>k8s.gcr.io/pause                     3.6       6270bb605e12   6 months ago   683kB
</span><span class='line'>[ec2-user@amazonlinux ~]$ 
</span></code></pre></td></tr></table></div></figure>


<p>中间出了个小插曲，一开始没有改主机名，导致加入节点的时刻用的是默认的，这样看起来不清晰，后面改了名称后就不认了。得重新弄一遍。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## 加入节点
</span><span class='line'>[ec2-user@worker1 ~]$ sudo su -
</span><span class='line'>[root@amazonlinux ~]# kubeadm join 192.168.191.131:6443 --token sj6fff.bpak7gkd3hnyzcm5 \
</span><span class='line'>         --discovery-token-ca-cert-hash sha256:8e15649afc0771e80cce7f1dfdbb0933f4fdbd45ea1f9e03be1f3b78449a6d3c 
</span><span class='line'>[preflight] Running pre-flight checks
</span><span class='line'>        [WARNING FileExisting-tc]: tc not found in system path
</span><span class='line'>        [WARNING Hostname]: hostname "amazonlinux.onprem" could not be reached
</span><span class='line'>        [WARNING Hostname]: hostname "amazonlinux.onprem": lookup amazonlinux.onprem on 192.168.191.2:53: no such host
</span><span class='line'>        [WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
</span><span class='line'>[preflight] Reading configuration from the cluster...
</span><span class='line'>[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
</span><span class='line'>[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
</span><span class='line'>[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
</span><span class='line'>[kubelet-start] Starting the kubelet
</span><span class='line'>[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...
</span><span class='line'>
</span><span class='line'>This node has joined the cluster:
</span><span class='line'>* Certificate signing request was sent to apiserver and a response was received.
</span><span class='line'>* The Kubelet was informed of the new secure connection details.
</span><span class='line'>
</span><span class='line'>Run 'kubectl get nodes' on the control-plane to see this node join the cluster.
</span><span class='line'>
</span><span class='line'>[root@amazonlinux ~]# 
</span><span class='line'>
</span><span class='line'>## 改下主机名称：
</span><span class='line'>[root@amazonlinux ~]# hostnamectl --static set-hostname worker1
</span><span class='line'>[root@amazonlinux ~]# hostname worker1
</span><span class='line'>[root@amazonlinux ~]# exit
</span><span class='line'>
</span><span class='line'>## 改了一下名，重启后不行了，重新加入
</span><span class='line'>[ec2-user@worker1 ~]$ sudo su - 
</span><span class='line'>Last login: Thu Mar 17 15:24:32 CST 2022 on pts/0
</span><span class='line'>[root@worker1 ~]# kubeadm join 192.168.191.131:6443 --token sj6fff.bpak7gkd3hnyzcm5 \
</span><span class='line'>&gt;          --discovery-token-ca-cert-hash sha256:8e15649afc0771e80cce7f1dfdbb0933f4fdbd45ea1f9e03be1f3b78449a6d3c 
</span><span class='line'>[preflight] Running pre-flight checks
</span><span class='line'>        [WARNING FileExisting-tc]: tc not found in system path
</span><span class='line'>        [WARNING Hostname]: hostname "worker1" could not be reached
</span><span class='line'>        [WARNING Hostname]: hostname "worker1": lookup worker1 on 192.168.191.2:53: no such host
</span><span class='line'>        [WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
</span><span class='line'>error execution phase preflight: [preflight] Some fatal errors occurred:
</span><span class='line'>        [ERROR FileAvailable--etc-kubernetes-kubelet.conf]: /etc/kubernetes/kubelet.conf already exists
</span><span class='line'>        [ERROR Port-10250]: Port 10250 is in use
</span><span class='line'>        [ERROR FileAvailable--etc-kubernetes-pki-ca.crt]: /etc/kubernetes/pki/ca.crt already exists
</span><span class='line'>[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`
</span><span class='line'>To see the stack trace of this error execute with --v=5 or higher
</span><span class='line'>
</span><span class='line'>## 直接重新加入不行，需要先重置再加入
</span><span class='line'>[root@worker1 ~]# kubeadm reset 
</span><span class='line'>[reset] WARNING: Changes made to this host by 'kubeadm init' or 'kubeadm join' will be reverted.
</span><span class='line'>[reset] Are you sure you want to proceed? [y/N]: y
</span><span class='line'>[preflight] Running pre-flight checks
</span><span class='line'>W0317 17:42:03.050519    6887 removeetcdmember.go:80] [reset] No kubeadm config, using etcd pod spec to get data directory
</span><span class='line'>[reset] No etcd config found. Assuming external etcd
</span><span class='line'>[reset] Please, manually reset etcd to prevent further issues
</span><span class='line'>[reset] Stopping the kubelet service
</span><span class='line'>[reset] Unmounting mounted directories in "/var/lib/kubelet"
</span><span class='line'>[reset] Deleting contents of config directories: [/etc/kubernetes/manifests /etc/kubernetes/pki]
</span><span class='line'>[reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/bootstrap-kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]
</span><span class='line'>[reset] Deleting contents of stateful directories: [/var/lib/kubelet /var/lib/dockershim /var/run/kubernetes /var/lib/cni]
</span><span class='line'>
</span><span class='line'>The reset process does not clean CNI configuration. To do so, you must remove /etc/cni/net.d
</span><span class='line'>
</span><span class='line'>The reset process does not reset or clean up iptables rules or IPVS tables.
</span><span class='line'>If you wish to reset iptables, you must do so manually by using the "iptables" command.
</span><span class='line'>
</span><span class='line'>If your cluster was setup to utilize IPVS, run ipvsadm --clear (or similar)
</span><span class='line'>to reset your system's IPVS tables.
</span><span class='line'>
</span><span class='line'>The reset process does not clean your kubeconfig files and you must remove them manually.
</span><span class='line'>Please, check the contents of the $HOME/.kube/config file.
</span><span class='line'>
</span><span class='line'>[root@worker1 ~]# kubeadm join 192.168.191.131:6443 --token sj6fff.bpak7gkd3hnyzcm5          --discovery-token-ca-cert-hash sha256:8e15649afc0771e80cce7f1dfdbb0933f4fdbd45ea1f9e03be1f3b78449a6d3c 
</span><span class='line'>[preflight] Running pre-flight checks
</span><span class='line'>        [WARNING FileExisting-tc]: tc not found in system path
</span><span class='line'>        [WARNING Hostname]: hostname "worker1" could not be reached
</span><span class='line'>        [WARNING Hostname]: hostname "worker1": lookup worker1 on 192.168.191.2:53: no such host
</span><span class='line'>        [WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
</span><span class='line'>[preflight] Reading configuration from the cluster...
</span><span class='line'>[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
</span><span class='line'>[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
</span><span class='line'>[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
</span><span class='line'>[kubelet-start] Starting the kubelet
</span><span class='line'>[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...
</span><span class='line'>
</span><span class='line'>This node has joined the cluster:
</span><span class='line'>* Certificate signing request was sent to apiserver and a response was received.
</span><span class='line'>* The Kubelet was informed of the new secure connection details.
</span><span class='line'>
</span><span class='line'>Run 'kubectl get nodes' on the control-plane to see this node join the cluster.
</span></code></pre></td></tr></table></div></figure>


<p>加入节点后，查看状态：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ kubectl get nodes 
</span><span class='line'>NAME      STATUS     ROLES                  AGE    VERSION
</span><span class='line'>k8s       Ready      control-plane,master   166m   v1.23.5
</span><span class='line'>worker1   NotReady   &lt;none&gt;                 30s    v1.23.5
</span></code></pre></td></tr></table></div></figure>


<h2>安装网络</h2>

<ul>
<li><a href="https://kubernetes.io/zh/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model">https://kubernetes.io/zh/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model</a></li>
<li><a href="https://kubernetes.io/zh/docs/concepts/cluster-administration/addons/">https://kubernetes.io/zh/docs/concepts/cluster-administration/addons/</a></li>
<li><a href="https://github.com/flannel-io/flannel#deploying-flannel-manually">https://github.com/flannel-io/flannel#deploying-flannel-manually</a></li>
</ul>


<p>github上的资源好像也不能下载了，打开后复制内容到新建的文件中。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># For Kubernetes v1.17+ kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
</span><span class='line'>[ec2-user@k8s ~]$ vi kube-flannel.yml 
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl apply -f kube-flannel.yml
</span></code></pre></td></tr></table></div></figure>


<p>由于初始化 <code>kubeadm init</code> 时没有添加网络参数，导致这里flannel网络插件一直处于 CrashLoopBackOff 状态，查看日志提示没有分配 cidr 报错查日志</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://cloud-atlas.readthedocs.io/zh_CN/latest/kubernetes/debug/k8s_crashloopbackoff.html
</span><span class='line'># 查看日志
</span><span class='line'>[ec2-user@k8s ~]$ kubectl describe -n kube-system pod kube-flannel-ds-sbx86 
</span><span class='line'>  Warning  BackOff    2m5s (x69 over 16m)  kubelet            Back-off restarting failed container
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl logs -n kube-system kube-flannel-ds-sbx86 
</span><span class='line'>E0317 09:19:27.915383       1 main.go:317] Error registering network: failed to acquire lease: node "k8s" pod cidr not assigned
</span><span class='line'>W0317 09:19:27.915664       1 reflector.go:436] github.com/flannel-io/flannel/subnet/kube/kube.go:379: watch of *v1.Node ended with: an error on the server ("unable to decode an event from the watch stream: context canceled") has prevented the request from succeeding
</span><span class='line'>
</span><span class='line'>可以再通过docker查看flannel日志
</span><span class='line'>[root@test4 profile]# docker ps -l
</span><span class='line'>[root@test4 profile]# docker logs f7be3ebe77fd 
</span><span class='line'>
</span><span class='line'>## https://www.talkwithtrend.com/Article/251751
</span><span class='line'># kube-controller-manager 没有给新加入的节点分配 IP 段，init 的时候没有指定 IP 段
</span><span class='line'># 加最后两行，和 kube-flannel.yml 中的 net-conf.json/Network 对应：
</span><span class='line'>[ec2-user@k8s ~]$ sudo vi /etc/kubernetes/manifests/kube-controller-manager.yaml 
</span><span class='line'>  - command:
</span><span class='line'>    - kube-controller-manager
</span><span class='line'>    - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
</span><span class='line'>    - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
</span><span class='line'>    - --bind-address=127.0.0.1
</span><span class='line'>    - --client-ca-file=/etc/kubernetes/pki/ca.crt
</span><span class='line'>    - --cluster-name=kubernetes
</span><span class='line'>    - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
</span><span class='line'>    - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
</span><span class='line'>    - --controllers=*,bootstrapsigner,tokencleaner
</span><span class='line'>    - --kubeconfig=/etc/kubernetes/controller-manager.conf
</span><span class='line'>    - --leader-elect=true
</span><span class='line'>    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
</span><span class='line'>    - --root-ca-file=/etc/kubernetes/pki/ca.crt
</span><span class='line'>    - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
</span><span class='line'>    - --use-service-account-credentials=true
</span><span class='line'>    - --allocate-node-cidrs=true
</span><span class='line'>    - --cluster-cidr=10.244.0.0/16
</span><span class='line'>
</span><span class='line'># 重启服务
</span><span class='line'>## https://stackoverflow.com/questions/51375940/kubernetes-master-node-is-down-after-restarting-host-machine
</span><span class='line'>[ec2-user@k8s ~]$ sudo systemctl restart kubelet  
</span><span class='line'>
</span><span class='line'># 重新部署
</span><span class='line'># 然后删除flannel容器，重新部署
</span><span class='line'>[ec2-user@k8s ~]$ kubectl delete -f kube-flannel.yml 
</span><span class='line'>[ec2-user@k8s ~]$ kubectl apply -f kube-flannel.yml
</span></code></pre></td></tr></table></div></figure>


<p>注：还有可以临时编辑节点的配置 手动分配podCIDR。这里不做具体描述，参考： <a href="http://www.hyhblog.cn/2021/02/21/k8s-flannel-pod-cidr-not-assigned/">http://www.hyhblog.cn/2021/02/21/k8s-flannel-pod-cidr-not-assigned/</a> 。</p>

<p>再次查看pod状态，网络组件安装好后，dns组件也跑起来了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ kubectl get pods --all-namespaces -o wide 
</span><span class='line'>NAMESPACE     NAME                          READY   STATUS    RESTARTS   AGE     IP                NODE      NOMINATED NODE   READINESS GATES
</span><span class='line'>kube-system   coredns-64897985d-4d5rx       1/1     Running   0          2m30s   10.244.0.3        k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   coredns-64897985d-m9p9q       1/1     Running   0          2m30s   10.244.0.2        k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   etcd-k8s                      1/1     Running   0          166m    192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-apiserver-k8s            1/1     Running   0          166m    192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-controller-manager-k8s   1/1     Running   0          12m     192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-flannel-ds-q4qkt         1/1     Running   0          60s     192.168.191.132   worker1   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-flannel-ds-ttcwt         1/1     Running   0          6m1s    192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-proxy-pd77m              1/1     Running   0          60s     192.168.191.132   worker1   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-proxy-qj6lw              1/1     Running   0          166m    192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system   kube-scheduler-k8s            1/1     Running   0          166m    192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>安装dashboard</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://github.com/kubernetes/dashboard#kubernetes-dashboard
</span><span class='line'># kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.1/aio/deploy/recommended.yaml
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl apply -f dashboard-v2.5.1.yml 
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl get pods -A -o wide
</span><span class='line'>NAMESPACE              NAME                                         READY   STATUS    RESTARTS   AGE     IP                NODE      NOMINATED NODE   READINESS GATES
</span><span class='line'>kube-system            coredns-64897985d-4d5rx                      1/1     Running   0          36m     10.244.0.3        k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            coredns-64897985d-m9p9q                      1/1     Running   0          36m     10.244.0.2        k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            etcd-k8s                                     1/1     Running   0          3h20m   192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            kube-apiserver-k8s                           1/1     Running   0          3h19m   192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            kube-controller-manager-k8s                  1/1     Running   0          46m     192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            kube-flannel-ds-q4qkt                        1/1     Running   0          34m     192.168.191.132   worker1   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            kube-flannel-ds-ttcwt                        1/1     Running   0          39m     192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            kube-proxy-pd77m                             1/1     Running   0          34m     192.168.191.132   worker1   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            kube-proxy-qj6lw                             1/1     Running   0          3h20m   192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kube-system            kube-scheduler-k8s                           1/1     Running   0          3h20m   192.168.191.131   k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kubernetes-dashboard   dashboard-metrics-scraper-799d786dbf-q87wv   1/1     Running   0          59s     10.244.2.3        worker1   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>kubernetes-dashboard   kubernetes-dashboard-fb8648fd9-vprpt         1/1     Running   0          59s     10.244.2.2        worker1   &lt;none&gt;           &lt;none&gt;
</span></code></pre></td></tr></table></div></figure>


<p>安装还是很便捷和容易的，访问搞起来比较麻烦，由于是在虚拟机里面部署，kubectl命令也都在虚拟机操作，用 <code>kubectl proxy</code> 访问dashboard，如果不是localhost或者https的话不给访问的。</p>

<p>尝试了绑定网卡ip，但是由于不是https，还是不能访问dashboard：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ kubectl proxy --address='0.0.0.0' --accept-hosts='.*'
</span><span class='line'>Starting to serve on [::]:8001
</span></code></pre></td></tr></table></div></figure>


<p>访问dashboard方法一：后面直接通过查看dashboard服务的ip，通过 ssh的socks5代理 来访问 使用内部地址的dashboard。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ kubectl -n kubernetes-dashboard get service kubernetes-dashboard
</span><span class='line'>NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE
</span><span class='line'>kubernetes-dashboard   ClusterIP   10.101.193.109   &lt;none&gt;        443/TCP   6h38m
</span><span class='line'>
</span><span class='line'>## 通过服务ip访问（Locally Port Forwarding - socks5方式代理）：
</span><span class='line'>https://10.101.193.109/#/login
</span><span class='line'>https://10.101.193.109/#/pod?namespace=kube-system
</span></code></pre></td></tr></table></div></figure>


<p>方法二：或者网上说的使用端口转发：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://kubernetes.io/zh/docs/tasks/access-application-cluster/port-forward-access-application-cluster/
</span><span class='line'>kubectl port-forward -n kubernetes-dashboard service/kubernetes-dashboard 8080:443 --address='0.0.0.0'
</span></code></pre></td></tr></table></div></figure>


<p>能访问了，接下来就是获取token进行登录。同样有两种方式，第一种暴力设置跳过登录，第二种方式从系统中获取/创建一个token来登录。</p>

<p>登录方法一：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://www.cnblogs.com/tylerzhou/p/11117956.html
</span><span class='line'># 在1.10.1里面默认不再显然skip按钮,其实dashboard安装有很多坑,如果有读者按照以上设置仍然不能正常成功登陆,但是仍然想要体验dashboard,可以开启默认关闭的skip按钮,这样就可以进入到dashboard管理界面了.
</span><span class='line'>      containers:
</span><span class='line'>      - args:
</span><span class='line'>        - --auto-generate-certificates
</span><span class='line'>        - --enable-skip-login            # &lt;-- add this line
</span><span class='line'>        image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1
</span></code></pre></td></tr></table></div></figure>


<p>改了配置后记得重新加载。</p>

<p>方法二：另一种方式是从系统获取token，然后填到界面上然后登录。访问dashboard：</p>

<ul>
<li><a href="https://stackoverflow.com/questions/46664104/how-to-sign-in-kubernetes-dashboard">https://stackoverflow.com/questions/46664104/how-to-sign-in-kubernetes-dashboard</a></li>
<li><a href="https://jimmysong.io/kubernetes-handbook/guide/auth-with-kubeconfig-or-token.html">https://jimmysong.io/kubernetes-handbook/guide/auth-with-kubeconfig-or-token.html</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ kubectl -n kube-system get secret
</span><span class='line'># 这些secrets中的大部分都可以用来访问dashboard的,只有不同的账户权限不同,很多账户被限制不能进行操作.
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl -n kube-system describe secret deployment-controller-token
</span><span class='line'>
</span><span class='line'># 使用一条命令来显示token
</span><span class='line'>[ec2-user@k8s ~]$ kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | awk '/^deployment-controller-token-/{print $1}') | awk '$1=="token:"{print $2}'
</span><span class='line'>eyJhbGciOiJSUzI1NiIsImtpZCI6IjQzNllWOFFBYU5qaXdtUmdLelJQSDU5T2FVbGVpREJFZTlMQU12MXFhN1UifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZXBsb3ltZW50LWNvbnRyb2xsZXItdG9rZW4tejVwbWQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVwbG95bWVudC1jb250cm9sbGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNTcwNWJiMzYtMTMyNi00MGY5LWI3ZWUtNzE3ZTAyMTM1NzA2Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRlcGxveW1lbnQtY29udHJvbGxlciJ9.Av-RwOQGdEyZn56xmH_siz-7yU07OrhLhfiPqfJRaNJ5DL8wEDIZkxgNMzHrrthTsOJl7Tky3ABo5z3c_4xjgADGSqKqP0rvWtaLSHZFZR16c5S2c08aHdSH7KIAdoCy0muMiKHRw67QRf7zo5bPUyqfCyPY2vcB-pxqYnrTTAw71f34rgIPA-LACc5LIQwv8DT5O-KE1TopYF7lX5hXZIHOGP3sYpmbR7yIzO3MDNRUIfiZutYiQnHwXRQGBwHu1iUVk8Lu69gnqggkjp2cXa4d2ZUpCxrpeLGGdjPv6JPZEFLDhLbiBLF04b7IOdFQO4bH6BbXBNs9e0AGPbvp4Q
</span><span class='line'>[ec2-user@k8s ~]$ 
</span></code></pre></td></tr></table></div></figure>


<p>方法三：当然，也可以创建一个dashboard的拥有完整权限的token：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubectl create serviceaccount cluster-admin-dashboard-sa -n kube-system
</span><span class='line'>
</span><span class='line'>$ kubectl create clusterrolebinding cluster-admin-dashboard-sa \
</span><span class='line'>  --clusterrole=cluster-admin \
</span><span class='line'>  --serviceaccount=kube-system:cluster-admin-dashboard-sa -n kube-system
</span><span class='line'>
</span><span class='line'>And then, you can use the token of just created cluster admin service account.
</span><span class='line'>$ kubectl get secret | grep cluster-admin-dashboard-sa
</span><span class='line'>cluster-admin-dashboard-sa-token-6xm8l   kubernetes.io/service-account-token   3         18m
</span><span class='line'>$ kubectl describe secret cluster-admin-dashboard-sa-token-6xm8l
</span><span class='line'>
</span><span class='line'># Parse the token
</span><span class='line'>$ TOKEN=$(kubectl describe secret -n kube-system $(kubectl get secret -n kube-system | awk '/^cluster-admin-dashboard-sa-token-/{print $1}') | awk '$1=="token:"{print $2}')
</span><span class='line'>$ echo $TOKEN
</span><span class='line'>
</span><span class='line'>## -OR-
</span><span class='line'>[ec2-user@k8s ~]$ kubectl describe secret cluster-admin-dashboard-sa
</span><span class='line'>## -OR-
</span><span class='line'>[ec2-user@k8s ~]$ kubectl describe secret -n kube-system | grep deployment -A 12
</span></code></pre></td></tr></table></div></figure>


<p>如果使用token登录，一段事件没有操作就会有超时的困扰，可以修改token-ttl配置。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>##--&gt; Unauthorized (401): You have been logged out because your token has expired.
</span><span class='line'>
</span><span class='line'>## https://blog.csdn.net/otoyix/article/details/118758736
</span><span class='line'># 增加一行参数 token-ttl=68400
</span><span class='line'>  containers:
</span><span class='line'>    - name: kubernetes-dashboard
</span><span class='line'>      image: 'kubernetesui/dashboard:v2.0.0-rc5'
</span><span class='line'>      args:
</span><span class='line'>        - '--auto-generate-certificates'
</span><span class='line'>        - '--namespace=kubernetes-dashboard'
</span><span class='line'>        - '--token-ttl=68400'    -- 增加了此行
</span></code></pre></td></tr></table></div></figure>


<h2>安装metrics-server</h2>

<p>如果没有安装metrics-server，在dashboard中不能看到cpu/内存使用情况图形，kubectl top的命令也获取不到数据。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ kubectl top nodes
</span><span class='line'>error: Metrics API not available
</span><span class='line'>[ec2-user@k8s ~]$ kubectl top pods -A
</span><span class='line'>error: Metrics API not available
</span></code></pre></td></tr></table></div></figure>


<p>安装metrics-server会有镜像下载和证书的问题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 每台主机都导入一下该镜像
</span><span class='line'>[ec2-user@k8s ~]$ docker load -i metrics-server-v0.6.1.tar.gz 
</span><span class='line'>3dc34f14eb83: Loading layer [==================================================&gt;]  66.43MB/66.43MB
</span><span class='line'>Loaded image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
</span><span class='line'>
</span><span class='line'># kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
</span><span class='line'>[ec2-user@k8s ~]$ vi metrics-server.yml
</span><span class='line'>[ec2-user@k8s ~]$ kubectl apply -f metrics-server.yml 
</span></code></pre></td></tr></table></div></figure>


<p>还是启动不起来，由于metrics-server需要连服务端，证书不对，为了先跑起来，先忽略安全证书。在containers参数最后加上 <code>--kubelet-insecure-tls</code> ，然后删除后重新创建一次。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## [k8s metrics-server 轻量化监控](https://www.jianshu.com/p/5fe108d70310)
</span><span class='line'>## https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/troubleshooting-kubeadm/#cannot-use-the-metrics-server-securely-in-a-kubeadm-cluster
</span><span class='line'>## 证书 https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/#kubelet-serving-certs
</span><span class='line'>## https://github.com/kubernetes-sigs/metrics-server/blob/master/FAQ.md#how-to-run-metrics-server-securely
</span><span class='line'>## https://github.com/kubernetes-sigs/metrics-server/issues/196
</span><span class='line'>    spec:
</span><span class='line'>      containers:
</span><span class='line'>      - args:
</span><span class='line'>        - --cert-dir=/tmp
</span><span class='line'>        - --secure-port=4443
</span><span class='line'>        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
</span><span class='line'>        - --kubelet-use-node-status-port
</span><span class='line'>        - --metric-resolution=15s
</span><span class='line'>        - --kubelet-insecure-tls
</span><span class='line'>        image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl delete -f metrics-server.yml 
</span><span class='line'>[ec2-user@k8s ~]$ kubectl apply -f metrics-server.yml 
</span></code></pre></td></tr></table></div></figure>


<p>等一小会，再次查看top命令。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ kubectl top nodes 
</span><span class='line'>NAME      CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   
</span><span class='line'>k8s       91m          4%     913Mi           23%       
</span><span class='line'>worker1   38m          1%     431Mi           11%       
</span><span class='line'>[ec2-user@k8s ~]$ 
</span><span class='line'>[ec2-user@k8s ~]$ kubectl top pods -n kube-system
</span><span class='line'>NAME                              CPU(cores)   MEMORY(bytes)   
</span><span class='line'>coredns-64897985d-4d5rx           1m           12Mi            
</span><span class='line'>coredns-64897985d-m9p9q           1m           12Mi            
</span><span class='line'>etcd-k8s                          11m          60Mi            
</span><span class='line'>kube-apiserver-k8s                32m          312Mi           
</span><span class='line'>kube-controller-manager-k8s       13m          46Mi            
</span><span class='line'>kube-flannel-ds-q4qkt             2m           11Mi            
</span><span class='line'>kube-flannel-ds-ttcwt             2m           11Mi            
</span><span class='line'>kube-proxy-pd77m                  7m           16Mi            
</span><span class='line'>kube-proxy-qj6lw                  2m           16Mi            
</span><span class='line'>kube-scheduler-k8s                3m           17Mi            
</span><span class='line'>metrics-server-7cf8b65d65-trtcj   33m          11Mi            
</span><span class='line'>[ec2-user@k8s ~]$ 
</span></code></pre></td></tr></table></div></figure>


<p>同时dashboard web界面就能看到cpu/内存的性能图形了。</p>

<h2>Hello world</h2>

<p>编写一个配置，然后运行一个实例，看看两台机器上的pod网络是否互通。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## docker run -it public.ecr.aws/amazonlinux/amazonlinux /bin/bash
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ cat replicaset.yml 
</span><span class='line'>apiVersion: apps/v1
</span><span class='line'>kind: ReplicaSet
</span><span class='line'>metadata:
</span><span class='line'>  name: hello-world
</span><span class='line'>spec:
</span><span class='line'>  replicas: 2
</span><span class='line'>  selector:
</span><span class='line'>    matchLabels:
</span><span class='line'>      app: hello-world
</span><span class='line'>  template:
</span><span class='line'>    metadata:
</span><span class='line'>      labels:
</span><span class='line'>        app: hello-world
</span><span class='line'>    spec:
</span><span class='line'>      containers:
</span><span class='line'>      - name: hello-world
</span><span class='line'>        image: amazonlinux:2
</span><span class='line'>        command: ["/bin/sh"]
</span><span class='line'>        args: ["-c", "while true; do echo hello; sleep 10;done"]
</span><span class='line'>[ec2-user@k8s ~]$ 
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl apply -f replicaset.yml  
</span><span class='line'>replicaset.apps/hello-world created
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl get pods -o wide
</span><span class='line'>NAME                READY   STATUS    RESTARTS   AGE   IP            NODE      NOMINATED NODE   READINESS GATES
</span><span class='line'>hello-world-d2tss   1/1     Running   0          8s    10.244.0.7    k8s       &lt;none&gt;           &lt;none&gt;
</span><span class='line'>hello-world-h9jxq   1/1     Running   0          8s    10.244.2.12   worker1   &lt;none&gt;           &lt;none&gt;
</span><span class='line'>[ec2-user@k8s ~]$ 
</span><span class='line'>
</span><span class='line'>[ec2-user@k8s ~]$ kubectl exec -ti hello-world-d2tss bash 
</span><span class='line'>kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
</span><span class='line'>bash-4.2# cat /etc/hosts 
</span><span class='line'>
</span><span class='line'>bash-4.2# yum install -y iputils net-tools 
</span><span class='line'>
</span><span class='line'>bash-4.2# ping hello-world-h9jxq           
</span><span class='line'>ping: hello-world-h9jxq: Name or service not known
</span><span class='line'>服务service才有域名。后面试一下服务的，来ping域名，测试下dns。
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>bash-4.2# ping 10.244.0.7 
</span><span class='line'>PING 10.244.0.7 (10.244.0.7) 56(84) bytes of data.
</span><span class='line'>64 bytes from 10.244.0.7: icmp_seq=1 ttl=255 time=0.012 ms
</span><span class='line'>64 bytes from 10.244.0.7: icmp_seq=2 ttl=255 time=0.021 ms
</span><span class='line'>^C
</span><span class='line'>--- 10.244.0.7 ping statistics ---
</span><span class='line'>2 packets transmitted, 2 received, 0% packet loss, time 1007ms
</span><span class='line'>rtt min/avg/max/mdev = 0.012/0.016/0.021/0.006 ms
</span><span class='line'>
</span><span class='line'>bash-4.2# ping 10.244.2.12
</span><span class='line'>PING 10.244.2.12 (10.244.2.12) 56(84) bytes of data.
</span><span class='line'>64 bytes from 10.244.2.12: icmp_seq=1 ttl=253 time=0.508 ms
</span><span class='line'>64 bytes from 10.244.2.12: icmp_seq=2 ttl=253 time=0.425 ms
</span><span class='line'>^C
</span><span class='line'>--- 10.244.2.12 ping statistics ---
</span><span class='line'>2 packets transmitted, 2 received, 0% packet loss, time 1027ms
</span><span class='line'>rtt min/avg/max/mdev = 0.425/0.466/0.508/0.046 ms
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[K8s依赖下载]]></title>
    <link href="http://winse.github.io/blog/2022/03/18/k8s-deps-download/"/>
    <updated>2022-03-18T10:57:38+08:00</updated>
    <id>http://winse.github.io/blog/2022/03/18/k8s-deps-download</id>
    <content type="html"><![CDATA[<p>几年前安装使用过k8s(kubernetes)，明白安装过程最大的一个难关是容器镜像的下载，所以找回原来的文章，试着用原来的代理翻墙的方式，但是原来可行的 <code>ssh -D</code> socks5 的方式在 Amazon Linux 2 上面不好使，最后直接在外网主机上安装并缓冲RPM，然后下载打包 k8s.gcr.io 下的所有镜像。</p>

<p>尽管过程没有那么的严谨，但是每个步骤还是都得执行的。</p>

<h2>参考文章</h2>

<ul>
<li><p><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">安装 kubeadm</a></p></li>
<li><p><a href="https://docs.docker.com/engine/install/centos/">Install Docker Engine on CentOS</a></p></li>
<li><a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html">Docker basics for Amazon ECS</a></li>
<li><p><a href="https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker">容器运行时 - Docker</a></p></li>
<li><p><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#%E5%AE%89%E8%A3%85-kubeadm-kubelet-%E5%92%8C-kubectl">安装 kubeadm、kubelet 和 kubectl</a></p></li>
<li><p><a href="https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/#%E5%9C%A8%E6%B2%A1%E6%9C%89%E4%BA%92%E8%81%94%E7%BD%91%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E8%BF%90%E8%A1%8C-kubeadm">在没有互联网连接的情况下运行 kubeadm</a></p></li>
<li><p><a href="https://www.jianshu.com/p/5fe108d70310">k8s metrics-server 轻量化监控</a></p></li>
</ul>


<h2>安装Docker</h2>

<p>k8s的pod需要容器运行时（Container Runtime），这里直接选择熟悉的docker。外网的主机是centos7的，按照docker官网步骤安装。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://docs.docker.com/engine/install/centos/
</span><span class='line'>$ sudo yum remove docker \
</span><span class='line'>                   docker-client \
</span><span class='line'>                   docker-client-latest \
</span><span class='line'>                   docker-common \
</span><span class='line'>                   docker-latest \
</span><span class='line'>                   docker-latest-logrotate \
</span><span class='line'>                   docker-logrotate \
</span><span class='line'>                   docker-engine
</span><span class='line'>
</span><span class='line'>$ sudo yum install -y yum-utils
</span><span class='line'>$ sudo yum-config-manager \
</span><span class='line'>     --add-repo \
</span><span class='line'>     https://download.docker.com/linux/centos/docker-ce.repo
</span><span class='line'>
</span><span class='line'>$ yum list docker-ce --showduplicates | sort -r
</span><span class='line'>
</span><span class='line'>$ sudo yum clean all
</span><span class='line'>$ sudo yum install docker-ce docker-ce-cli containerd.io
</span><span class='line'>
</span><span class='line'>$ sudo service docker start
</span><span class='line'>$ sudo systemctl enable docker
</span><span class='line'># docker info
</span><span class='line'>
</span><span class='line'>## https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker
</span><span class='line'>$ cat &lt;&lt;EOF | sudo tee /etc/docker/daemon.json
</span><span class='line'>{
</span><span class='line'>  "exec-opts": ["native.cgroupdriver=systemd"],
</span><span class='line'>  "log-driver": "json-file",
</span><span class='line'>  "log-opts": {
</span><span class='line'>    "max-size": "100m"
</span><span class='line'>  },
</span><span class='line'>  "storage-driver": "overlay2"
</span><span class='line'>}
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>$ sudo systemctl enable docker
</span><span class='line'>$ sudo systemctl daemon-reload
</span><span class='line'>$ sudo systemctl restart docker
</span></code></pre></td></tr></table></div></figure>


<h2>安装 kubeadm、kubelet 和 kubectl</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## 设置缓冲
</span><span class='line'># vi /etc/yum.conf 
</span><span class='line'>keepcache=1
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>## https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#%E5%AE%89%E8%A3%85-kubeadm-kubelet-%E5%92%8C-kubectl
</span><span class='line'>## 在官网基础上，禁用gpgcheck
</span><span class='line'># cat &lt;&lt;EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
</span><span class='line'>[kubernetes]
</span><span class='line'>name=Kubernetes
</span><span class='line'>baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=0
</span><span class='line'>repo_gpgcheck=0
</span><span class='line'>gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
</span><span class='line'>exclude=kubelet kubeadm kubectl
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>## 将 SELinux 设置为 permissive 模式（相当于将其禁用）
</span><span class='line'># sudo setenforce 0
</span><span class='line'># sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
</span><span class='line'>
</span><span class='line'># sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
</span><span class='line'>
</span><span class='line'>## 无需启动 sudo systemctl enable --now kubelet
</span></code></pre></td></tr></table></div></figure>


<p>把缓冲的rpm下载到本地</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@ea5df05219bb /]# cd /var/cache/yum/
</span><span class='line'>[root@ea5df05219bb yum]# ll -R 
</span><span class='line'>
</span><span class='line'>[root@ea5df05219bb yum]# yum install lrzsz 
</span><span class='line'>
</span><span class='line'>[root@ea5df05219bb yum]# sz x86_64/7/kubernetes/packages/*
</span></code></pre></td></tr></table></div></figure>


<h2>在没有互联网连接的情况下运行kubeadm</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/#%E5%9C%A8%E6%B2%A1%E6%9C%89%E4%BA%92%E8%81%94%E7%BD%91%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E8%BF%90%E8%A1%8C-kubeadm
</span><span class='line'>
</span><span class='line'># kubeadm config images list
</span><span class='line'>k8s.gcr.io/kube-apiserver:v1.23.5
</span><span class='line'>k8s.gcr.io/kube-controller-manager:v1.23.5
</span><span class='line'>k8s.gcr.io/kube-scheduler:v1.23.5
</span><span class='line'>k8s.gcr.io/kube-proxy:v1.23.5
</span><span class='line'>k8s.gcr.io/pause:3.6
</span><span class='line'>k8s.gcr.io/etcd:3.5.1-0
</span><span class='line'>k8s.gcr.io/coredns/coredns:v1.8.6
</span><span class='line'>
</span><span class='line'># kubeadm config images pull
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-apiserver:v1.23.5
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-controller-manager:v1.23.5
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-scheduler:v1.23.5
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-proxy:v1.23.5
</span><span class='line'>[config/images] Pulled k8s.gcr.io/pause:3.6
</span><span class='line'>[config/images] Pulled k8s.gcr.io/etcd:3.5.1-0
</span><span class='line'>[config/images] Pulled k8s.gcr.io/coredns/coredns:v1.8.6
</span><span class='line'>
</span><span class='line'># docker images
</span><span class='line'>REPOSITORY                           TAG       IMAGE ID       CREATED         SIZE
</span><span class='line'>k8s.gcr.io/kube-apiserver            v1.23.5   3fc1d62d6587   14 hours ago    135MB
</span><span class='line'>k8s.gcr.io/kube-proxy                v1.23.5   3c53fa8541f9   14 hours ago    112MB
</span><span class='line'>k8s.gcr.io/kube-controller-manager   v1.23.5   b0c9e5e4dbb1   14 hours ago    125MB
</span><span class='line'>k8s.gcr.io/kube-scheduler            v1.23.5   884d49d6d8c9   14 hours ago    53.5MB
</span><span class='line'>k8s.gcr.io/etcd                      3.5.1-0   25f8c7f3da61   4 months ago    293MB
</span><span class='line'>k8s.gcr.io/coredns/coredns           v1.8.6    a4ca41631cc7   5 months ago    46.8MB
</span><span class='line'>k8s.gcr.io/pause                     3.6       6270bb605e12   6 months ago    683kB
</span><span class='line'>centos                               7         8652b9f0cb4c   16 months ago   204MB
</span><span class='line'>
</span><span class='line'># docker images | awk '{print $1}' | grep k8s | xargs echo 
</span><span class='line'>k8s.gcr.io/kube-apiserver k8s.gcr.io/kube-proxy k8s.gcr.io/kube-controller-manager k8s.gcr.io/kube-scheduler k8s.gcr.io/etcd k8s.gcr.io/coredns/coredns k8s.gcr.io/pause
</span><span class='line'>
</span><span class='line'># docker save -o k8s-v1.23.5.tar k8s.gcr.io/kube-apiserver k8s.gcr.io/kube-proxy k8s.gcr.io/kube-controller-manager k8s.gcr.io/kube-scheduler k8s.gcr.io/etcd k8s.gcr.io/coredns/coredns k8s.gcr.io/pause
</span><span class='line'># gzip k8s-v1.23.5.tar
</span></code></pre></td></tr></table></div></figure>


<p>把导出的images下载回来后，加载到本地主机</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ docker load -i k8s-v1.23.5.tar.gz 
</span></code></pre></td></tr></table></div></figure>


<h2>metrics-server</h2>

<p>metrics server的镜像也是在google的服务上的，也下载保存下来。在dashboard上可以通过它查看node/pod的cpu/内存占用图形情况。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># docker pull k8s.gcr.io/metrics-server/metrics-server:v0.6.1
</span><span class='line'>
</span><span class='line'># docker save -o metrics-server-v0.6.1.tar k8s.gcr.io/metrics-server/metrics-server:v0.6.1
</span><span class='line'># gzip metrics-server-v0.6.1.tar 
</span></code></pre></td></tr></table></div></figure>


<p>下载回来后，加载到本地主机</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ docker load -i metrics-server-v0.6.1.tar.gz 
</span></code></pre></td></tr></table></div></figure>


<p>基本安装好后，本地镜像如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ec2-user@k8s ~]$ docker images 
</span><span class='line'>REPOSITORY                                       TAG       IMAGE ID       CREATED        SIZE
</span><span class='line'>k8s.gcr.io/kube-apiserver                        v1.23.5   3fc1d62d6587   39 hours ago   135MB
</span><span class='line'>k8s.gcr.io/kube-proxy                            v1.23.5   3c53fa8541f9   39 hours ago   112MB
</span><span class='line'>k8s.gcr.io/kube-scheduler                        v1.23.5   884d49d6d8c9   39 hours ago   53.5MB
</span><span class='line'>k8s.gcr.io/kube-controller-manager               v1.23.5   b0c9e5e4dbb1   39 hours ago   125MB
</span><span class='line'>rancher/mirrored-flannelcni-flannel              v0.17.0   9247abf08677   2 weeks ago    59.8MB
</span><span class='line'>k8s.gcr.io/metrics-server/metrics-server         v0.6.1    e57a417f15d3   5 weeks ago    68.8MB
</span><span class='line'>rancher/mirrored-flannelcni-flannel-cni-plugin   v1.0.1    ac40ce625740   8 weeks ago    8.1MB
</span><span class='line'>k8s.gcr.io/etcd                                  3.5.1-0   25f8c7f3da61   4 months ago   293MB
</span><span class='line'>k8s.gcr.io/coredns/coredns                       v1.8.6    a4ca41631cc7   5 months ago   46.8MB
</span><span class='line'>k8s.gcr.io/pause                                 3.6       6270bb605e12   6 months ago   683kB
</span><span class='line'>
</span><span class='line'>[ec2-user@worker1 ~]$ docker images 
</span><span class='line'>REPOSITORY                                       TAG       IMAGE ID       CREATED        SIZE
</span><span class='line'>k8s.gcr.io/kube-apiserver                        v1.23.5   3fc1d62d6587   39 hours ago   135MB
</span><span class='line'>k8s.gcr.io/kube-proxy                            v1.23.5   3c53fa8541f9   39 hours ago   112MB
</span><span class='line'>k8s.gcr.io/kube-controller-manager               v1.23.5   b0c9e5e4dbb1   39 hours ago   125MB
</span><span class='line'>k8s.gcr.io/kube-scheduler                        v1.23.5   884d49d6d8c9   39 hours ago   53.5MB
</span><span class='line'>kubernetesui/dashboard                           v2.5.1    7fff914c4a61   7 days ago     243MB
</span><span class='line'>rancher/mirrored-flannelcni-flannel              v0.17.0   9247abf08677   2 weeks ago    59.8MB
</span><span class='line'>k8s.gcr.io/metrics-server/metrics-server         v0.6.1    e57a417f15d3   5 weeks ago    68.8MB
</span><span class='line'>rancher/mirrored-flannelcni-flannel-cni-plugin   v1.0.1    ac40ce625740   8 weeks ago    8.1MB
</span><span class='line'>k8s.gcr.io/etcd                                  3.5.1-0   25f8c7f3da61   4 months ago   293MB
</span><span class='line'>k8s.gcr.io/coredns/coredns                       v1.8.6    a4ca41631cc7   5 months ago   46.8MB
</span><span class='line'>k8s.gcr.io/pause                                 3.6       6270bb605e12   6 months ago   683kB
</span><span class='line'>kubernetesui/metrics-scraper                     v1.0.7    7801cfc6d5c0   9 months ago   34.4MB
</span></code></pre></td></tr></table></div></figure>


<h2>小结</h2>

<p>本文就要在外网模拟了一下安装，把需要翻墙的两个组件（rpm，docker image）缓冲下来，然后在本地机器上直接使用。</p>

<p>下载的 最新版本v1.23.5 的（需翻墙的）依赖可以在百度网盘下载：</p>

<pre><code>链接：https://pan.baidu.com/s/1P3ABqKGt1JhNkg-9yB22yQ 
提取码：k7af
</code></pre>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[欧拉20.03LTS_SP3安装docker]]></title>
    <link href="http://winse.github.io/blog/2022/01/13/openeuler20-dot-03lts-sp3-install-docker/"/>
    <updated>2022-01-13T11:46:25+08:00</updated>
    <id>http://winse.github.io/blog/2022/01/13/openeuler20-dot-03lts-sp3-install-docker</id>
    <content type="html"><![CDATA[<p>随着时间车轮往前滚滚，Centos-7正逐渐的走下神坛，国内开源操作系统蓬勃发展，跟上时代的步伐，先把docker在欧拉上安装起来。</p>

<p>使用欧拉自带库非常容易安装，但是相对版本比较旧：18.09。还有就是，使用docker官网最新版，可以使用centos-8版本的库来进行安装。</p>

<p>这里两种方式都试了一下，关键步骤罗列如下：</p>

<h2>欧拉自带</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# cat /etc/yum.repos.d/openEuler.repo   
</span><span class='line'>[root@localhost ~]# yum search docker 
</span><span class='line'>[root@localhost ~]# yum list | grep docker 
</span><span class='line'>docker-engine.x86_64                                    18.09.0-206.oe1                           OS        
</span><span class='line'>
</span><span class='line'># 默认已经disabled
</span><span class='line'>[root@localhost ~]# getenforce 
</span><span class='line'>Disabled
</span><span class='line'>[root@localhost ~]# cat /etc/sysconfig/selinux
</span><span class='line'>
</span><span class='line'># 安装
</span><span class='line'>[root@localhost ~]# yum install docker
</span><span class='line'>Last metadata expiration check: 1:22:48 ago on Thu 13 Jan 2022 10:19:38 AM CST.
</span><span class='line'>Dependencies resolved.
</span><span class='line'>================================================================================================================================================================
</span><span class='line'> Package                                   Architecture                       Version                                      Repository                      Size
</span><span class='line'>================================================================================================================================================================
</span><span class='line'>Installing:
</span><span class='line'> docker-engine                             x86_64                             18.09.0-206.oe1                              OS                              45 M
</span><span class='line'>Installing dependencies:
</span><span class='line'> libcgroup                                 x86_64                             0.42.2-1.oe1                                 OS                              96 k
</span><span class='line'>
</span><span class='line'>Transaction Summary
</span><span class='line'>================================================================================================================================================================
</span><span class='line'>Install  2 Packages
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# docker version 
</span><span class='line'>Client:
</span><span class='line'> Version:           18.09.0
</span><span class='line'> EulerVersion:      18.09.0.206
</span><span class='line'> API version:       1.39
</span><span class='line'> Go version:        go1.15.7
</span><span class='line'> Git commit:        e4c0fb8
</span><span class='line'> Built:             Fri Dec 31 21:47:09 2021
</span><span class='line'> OS/Arch:           linux/amd64
</span><span class='line'> Experimental:      false
</span><span class='line'>
</span><span class='line'>Server:
</span><span class='line'> Engine:
</span><span class='line'>  Version:          18.09.0
</span><span class='line'>  EulerVersion:     18.09.0.206
</span><span class='line'>  API version:      1.39 (minimum version 1.12)
</span><span class='line'>  Go version:       go1.15.7
</span><span class='line'>  Git commit:       e4c0fb8
</span><span class='line'>  Built:            Fri Dec 31 21:46:37 2021
</span><span class='line'>  OS/Arch:          linux/amd64
</span><span class='line'>  Experimental:     false
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# docker ps -a 
</span><span class='line'>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
</span></code></pre></td></tr></table></div></figure>


<h2>安装最新版</h2>

<ul>
<li><a href="https://docs.docker.com/engine/install/centos/">https://docs.docker.com/engine/install/centos/</a></li>
<li><a href="https://blog.csdn.net/Jairoguo/article/details/118403323">https://blog.csdn.net/Jairoguo/article/details/118403323</a></li>
</ul>


<h3>安装包repo的国内源</h3>

<ul>
<li>aliyun源：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dnf config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></code></pre></td></tr></table></div></figure>


<ul>
<li>huawei源：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum-config-manager \
</span><span class='line'>    --add-repo \
</span><span class='line'>    https://repo.huaweicloud.com/docker-ce/linux/centos/docker-ce.repo
</span><span class='line'>sudo sed -i 's+download.docker.com+repo.huaweicloud.com/docker-ce+' /etc/yum.repos.d/docker-ce.repo</span></code></pre></td></tr></table></div></figure>


<h3>问题1：$releasever</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# yum search docker 
</span><span class='line'>Docker CE Stable - x86_64                                                                                                       240  B/s | 394  B     00:01    
</span><span class='line'>Errors during downloading metadata for repository 'docker-ce-stable':
</span><span class='line'>  - Status code: 404 for https://download.docker.com/linux/centos/20.03LTS_SP3/x86_64/stable/repodata/repomd.xml (IP: 13.224.160.26)
</span><span class='line'>Error: Failed to download metadata for repo 'docker-ce-stable': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried
</span></code></pre></td></tr></table></div></figure>


<p>解决：</p>

<p>跟centos的对不上，直接用centos-8的版本，把 <code>$releasever</code> 改成 <code>8</code> :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# cat /etc/os-release 
</span><span class='line'>NAME="openEuler"
</span><span class='line'>VERSION="20.03 (LTS-SP3)"
</span><span class='line'>ID="openEuler"
</span><span class='line'>VERSION_ID="20.03"
</span><span class='line'>PRETTY_NAME="openEuler 20.03 (LTS-SP3)"
</span><span class='line'>ANSI_COLOR="0;31"
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# arch
</span><span class='line'>x86_64
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># 修改release-version版本为8：
</span><span class='line'>vi /etc/yum.repos.d/docker-ce.repo 
</span><span class='line'>:%s/$releasever/8/g
</span></code></pre></td></tr></table></div></figure>


<h3>问题2：Base依赖</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  - cannot install the best candidate for the job
</span><span class='line'>  - nothing provides fuse-overlayfs &gt;= 0.7 needed by docker-ce-rootless-extras-20.10.0-3.el8.x86_64
</span><span class='line'>  - nothing provides slirp4netns &gt;= 0.4 needed by docker-ce-rootless-extras-20.10.0-3.el8.x86_64</span></code></pre></td></tr></table></div></figure>


<p>解决：</p>

<p>添加centos-base库，同样替换成centos-8的版本。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -O /etc/yum.repos.d/CentOS-Base.repo https://repo.huaweicloud.com/repository/conf/CentOS-8-reg.repo
</span><span class='line'>[root@localhost ~]# vi /etc/yum.repos.d/CentOS-Base.repo 
</span><span class='line'>:%s/$releasever/8/g
</span></code></pre></td></tr></table></div></figure>


<h3>正式安装</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# yum install docker-ce docker-ce-cli containerd.io
</span><span class='line'>CentOS-8 - Base - repo.huaweicloud.com                                                                                          583 kB/s | 4.6 MB     00:08    
</span><span class='line'>CentOS-8 - AppStream - repo.huaweicloud.com                                                                                     565 kB/s | 8.4 MB     00:15    
</span><span class='line'>CentOS-8 - PowerTools - repo.huaweicloud.com                                                                                    626 kB/s | 2.3 MB     00:03    
</span><span class='line'>CentOS-8 - Extras - repo.huaweicloud.com                                                                                         43 kB/s |  10 kB     00:00    
</span><span class='line'>Dependencies resolved.
</span><span class='line'>================================================================================================================================================================
</span><span class='line'> Package                                  Architecture          Version                                                   Repository                       Size
</span><span class='line'>================================================================================================================================================================
</span><span class='line'>Installing:
</span><span class='line'> containerd.io                            x86_64                1.4.12-3.1.el8                                            docker-ce-stable                 28 M
</span><span class='line'> docker-ce                                x86_64                3:20.10.12-3.el8                                          docker-ce-stable                 22 M
</span><span class='line'> docker-ce-cli                            x86_64                1:20.10.12-3.el8                                          docker-ce-stable                 30 M
</span><span class='line'>Upgrading:
</span><span class='line'> selinux-policy                           noarch                3.14.3-80.el8_5.2                                         BaseOS                          636 k
</span><span class='line'> selinux-policy-targeted                  noarch                3.14.3-80.el8_5.2                                         BaseOS                           15 M
</span><span class='line'>Installing dependencies:
</span><span class='line'> container-selinux                        noarch                2:2.167.0-1.module_el8.5.0+911+f19012f9                   AppStream                        54 k
</span><span class='line'> docker-ce-rootless-extras                x86_64                20.10.12-3.el8                                            docker-ce-stable                4.6 M
</span><span class='line'> docker-scan-plugin                       x86_64                0.12.0-3.el8                                              docker-ce-stable                3.7 M
</span><span class='line'> fuse-overlayfs                           x86_64                1.7.1-1.module_el8.5.0+890+6b136101                       AppStream                        73 k
</span><span class='line'> fuse3                                    x86_64                3.9.2-8.oe1                                               OS                              112 k
</span><span class='line'> libcgroup                                x86_64                0.42.2-1.oe1                                              OS                               96 k
</span><span class='line'> libslirp                                 x86_64                4.4.0-1.module_el8.5.0+890+6b136101                       AppStream                        70 k
</span><span class='line'> slirp4netns                              x86_64                1.1.8-1.module_el8.5.0+890+6b136101                       AppStream                        51 k
</span><span class='line'>Installing weak dependencies:
</span><span class='line'> fuse3-help                               x86_64                3.9.2-8.oe1                                               OS                               14 k
</span><span class='line'>Enabling module streams:
</span><span class='line'> container-tools                                                rhel8                                                                                          
</span><span class='line'>
</span><span class='line'>Transaction Summary
</span><span class='line'>================================================================================================================================================================
</span><span class='line'>Install  12 Packages
</span><span class='line'>Upgrade   2 Packages
</span><span class='line'>
</span><span class='line'>Total download size: 105 M
</span></code></pre></td></tr></table></div></figure>


<h3>使用</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# docker version
</span><span class='line'>Client: Docker Engine - Community
</span><span class='line'> Version:           20.10.12
</span><span class='line'> API version:       1.41
</span><span class='line'> Go version:        go1.16.12
</span><span class='line'> Git commit:        e91ed57
</span><span class='line'> Built:             Mon Dec 13 11:45:22 2021
</span><span class='line'> OS/Arch:           linux/amd64
</span><span class='line'> Context:           default
</span><span class='line'> Experimental:      true
</span><span class='line'>
</span><span class='line'>Server: Docker Engine - Community
</span><span class='line'> Engine:
</span><span class='line'>  Version:          20.10.12
</span><span class='line'>  API version:      1.41 (minimum version 1.12)
</span><span class='line'>  Go version:       go1.16.12
</span><span class='line'>  Git commit:       459d0df
</span><span class='line'>  Built:            Mon Dec 13 11:43:44 2021
</span><span class='line'>  OS/Arch:          linux/amd64
</span><span class='line'>  Experimental:     false
</span><span class='line'> containerd:
</span><span class='line'>  Version:          1.4.12
</span><span class='line'>  GitCommit:        7b11cfaabd73bb80907dd23182b9347b4245eb5d
</span><span class='line'> runc:
</span><span class='line'>  Version:          1.0.2
</span><span class='line'>  GitCommit:        v1.0.2-0-g52b36a2
</span><span class='line'> docker-init:
</span><span class='line'>  Version:          0.19.0
</span><span class='line'>  GitCommit:        de40ad0
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# docker ps -a 
</span><span class='line'>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# docker pull centos:7
</span><span class='line'>7: Pulling from library/centos
</span><span class='line'>2d473b07cdd5: Pull complete 
</span><span class='line'>Digest: sha256:9d4bcbbb213dfd745b58be38b13b996ebb5ac315fe75711bd618426a630e0987
</span><span class='line'>Status: Downloaded newer image for centos:7
</span><span class='line'>docker.io/library/centos:7
</span><span class='line'>[root@localhost ~]# 
</span><span class='line'>[root@localhost ~]# docker images 
</span><span class='line'>REPOSITORY   TAG       IMAGE ID       CREATED        SIZE
</span><span class='line'>centos       7         eeb6ee3f44bd   3 months ago   204MB
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# docker run --rm centos:7 hostname 
</span><span class='line'>3c7a047ec95e
</span><span class='line'>[root@localhost ~]# docker run --rm centos:7 date 
</span><span class='line'>Thu Jan 13 03:33:12 UTC 2022
</span></code></pre></td></tr></table></div></figure>


<h2>docker镜像加速</h2>

<ul>
<li><a href="https://www.runoob.com/docker/docker-mirror-acceleration.html">https://www.runoob.com/docker/docker-mirror-acceleration.html</a></li>
<li><a href="https://mirrors.ustc.edu.cn/help/dockerhub.html">https://mirrors.ustc.edu.cn/help/dockerhub.html</a></li>
</ul>


<p>添加镜像配置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># https://docker.mirrors.ustc.edu.cn/
</span><span class='line'># https://hub-mirror.c.163.com
</span><span class='line'># https://reg-mirror.qiniu.com
</span><span class='line'>[root@localhost ~]# cat /etc/docker/daemon.json
</span><span class='line'>{
</span><span class='line'>"registry-mirrors":["https://reg-mirror.qiniu.com/"]
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>[root@localhost ~]# service docker restart 
</span><span class='line'>Redirecting to /bin/systemctl restart docker.service
</span><span class='line'>[root@localhost ~]# docker info 
</span><span class='line'>Registry Mirrors:
</span><span class='line'> https://reg-mirror.qiniu.com/
</span></code></pre></td></tr></table></div></figure>


<p>运行一个hello-world看看速度：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# docker run hello-world 
</span><span class='line'>Unable to find image 'hello-world:latest' locally
</span><span class='line'>latest: Pulling from library/hello-world
</span><span class='line'>2db29710123e: Pull complete 
</span><span class='line'>Digest: sha256:975f4b14f326b05db86e16de00144f9c12257553bba9484fed41f9b6f2257800
</span><span class='line'>Status: Downloaded newer image for hello-world:latest
</span><span class='line'>
</span><span class='line'>Hello from Docker!
</span><span class='line'>This message shows that your installation appears to be working correctly.
</span><span class='line'>
</span><span class='line'>To generate this message, Docker took the following steps:
</span><span class='line'> 1. The Docker client contacted the Docker daemon.
</span><span class='line'> 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
</span><span class='line'>    (amd64)
</span><span class='line'> 3. The Docker daemon created a new container from that image which runs the
</span><span class='line'>    executable that produces the output you are currently reading.
</span><span class='line'> 4. The Docker daemon streamed that output to the Docker client, which sent it
</span><span class='line'>    to your terminal.
</span><span class='line'>
</span><span class='line'>To try something more ambitious, you can run an Ubuntu container with:
</span><span class='line'> $ docker run -it ubuntu bash
</span><span class='line'>
</span><span class='line'>Share images, automate workflows, and more with a free Docker ID:
</span><span class='line'> https://hub.docker.com/
</span><span class='line'>
</span><span class='line'>For more examples and ideas, visit:
</span><span class='line'> https://docs.docker.com/get-started/
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress生成TOC]]></title>
    <link href="http://winse.github.io/blog/2021/12/08/octopress-generate-toc/"/>
    <updated>2021-12-08T18:23:23+08:00</updated>
    <id>http://winse.github.io/blog/2021/12/08/octopress-generate-toc</id>
    <content type="html"><![CDATA[<p>尝试了jekyll直接生成toc的方式都失败了，最终通过jquery运行时生成的方式实现目录导航。</p>

<h2>参考</h2>

<ul>
<li><a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">Generating a Table of Contents in Octopress</a></li>
</ul>


<h2>步骤实现</h2>

<h3>添加jquery.toc.min.js</h3>

<p>1、下载 <a href="https://ndabas.github.io/toc/">https://ndabas.github.io/toc/</a> 当前是 0.4.0 版本。解压把 jquery.toc.min.js 放到 source/javascripts/libs/ 目录下。</p>

<p>2、在 source/_includes/head.html 文件的 jquery.min.js 下一行引入 jquery.toc.min.js ：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>  &lt;script&gt;!window.jQuery && document.write(unescape('%3Cscript src="{{ root_url }}/javascripts/libs/jquery.min.js"%3E%3C/script%3E'))&lt;/script&gt;
</span><span class='line'>  &lt;script src="{{ root_url }}/javascripts/libs/jquery.toc.min.js" type="text/javascript"&gt;&lt;/script&gt;
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<h3>使用toc创建目录导航</h3>

<p>3、在 source/javascripts 目录下创建 generate-toc.js ，内容如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function generateTOC(insertBefore, heading) {
</span><span class='line'>  var container = jQuery("&lt;div id='tocBlock'&gt;&lt;/div&gt;");
</span><span class='line'>  var div = jQuery("&lt;ul id='toc'&gt;&lt;/ul&gt;");
</span><span class='line'>  
</span><span class='line'>  var content = $(insertBefore).first();
</span><span class='line'>
</span><span class='line'>  if (heading != undefined && heading != null) {
</span><span class='line'>    container.append('&lt;span class="tocHeading"&gt;' + heading + '&lt;/span&gt;');
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>// div.tableOfContents(content);
</span><span class='line'>  div.toc({content: content, headings: "h2,h3,h4"});
</span><span class='line'>  container.append(div);
</span><span class='line'>  container.insertBefore(insertBefore);
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>并在 source/_includes/custom/head.html 引入该文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;script src="{{ root_url }}/javascripts/generate-toc.js" type="text/javascript"&gt;&lt;/script&gt;
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<p>4、运行时调用toc创建目录，在 source/_includes/custom/after_footer.html 添加如下内容：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>{% if index %}
</span><span class='line'>  {% comment %}
</span><span class='line'>  No table of contents on the index page.
</span><span class='line'>  {% endcomment %}
</span><span class='line'>
</span><span class='line'>{% elsif page.toc == true %}
</span><span class='line'>  &lt;script type="text/javascript"&gt;
</span><span class='line'>  jQuery(document).ready(function() {
</span><span class='line'>    // Put a TOC right before the entry content.
</span><span class='line'>    generateTOC('.entry-content', '目录');
</span><span class='line'>  });
</span><span class='line'>  &lt;/script&gt;
</span><span class='line'>{% endif %}
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<h3>CSS样式</h3>

<p>5、添加样式，在 sass/custom 目录下添加 _screen.scss 文件，内容如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$toc-bg: #dfdfdf;
</span><span class='line'>
</span><span class='line'>$toc-incr: 5px;
</span><span class='line'>
</span><span class='line'>div#tocBlock {
</span><span class='line'>border-radius: 10px;
</span><span class='line'>padding: 10px;
</span><span class='line'>box-shadow: 5px 5px 5px #999;
</span><span class='line'>
</span><span class='line'>    float: right;
</span><span class='line'>    font-size: 10pt;
</span><span class='line'>    width: 300px;
</span><span class='line'>    padding-left: 20px;
</span><span class='line'>    padding-right: 10px;
</span><span class='line'>    padding-top: 10px;
</span><span class='line'>    padding-bottom: 0px;
</span><span class='line'>
</span><span class='line'>    background: $toc-bg;
</span><span class='line'>    border: solid 1px #999999;
</span><span class='line'>    margin: 0 0 10px 15px;
</span><span class='line'>
</span><span class='line'>    .tocHeading {
</span><span class='line'>        font-weight: bold;
</span><span class='line'>        font-size: 125%;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    #toc {
</span><span class='line'>        background: $toc-bg;
</span><span class='line'>        ul {
</span><span class='line'>            list-style: disc;
</span><span class='line'>            li {
</span><span class='line'>                margin-left: $toc-incr !important;
</span><span class='line'>                padding: 0 !important;
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>并把该文件添加到 sass/screen.scss ：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@import "custom/screen";
</span></code></pre></td></tr></table></div></figure>


<h3>运行调试</h3>

<p>6、删除 source/stylesheets/screen.css</p>

<p>7、预览看效果 <code>rake preview</code></p>

<h2>jekyll生成 查看</h2>

<blockquote><p>{:toc} ，jekyll-toc ，jekyll html 都没试成功，难道是jekyll-2太老了？</p></blockquote>

<ul>
<li><a href="https://plutotree.me/jekyll/2019/01/30/jekyll-toc-solution.html">https://plutotree.me/jekyll/2019/01/30/jekyll-toc-solution.html</a></li>
<li><a href="http://www.zhengjiachao.com/topics/github.io/add-outline-on-jekyll-post.html">http://www.zhengjiachao.com/topics/github.io/add-outline-on-jekyll-post.html</a></li>
<li><a href="https://github.com/allejo/jekyll-toc#usage">https://github.com/allejo/jekyll-toc#usage</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[认真的博客]]></title>
    <link href="http://winse.github.io/blog/2021/12/08/recommand-blogs/"/>
    <updated>2021-12-08T14:37:36+08:00</updated>
    <id>http://winse.github.io/blog/2021/12/08/recommand-blogs</id>
    <content type="html"><![CDATA[<p>平时查阅一些资料，对一个问题描述明确、解决问题方法清晰的，常常会翻一翻这个博客所有文章。</p>

<p>看到认真写文章，认真学习，认真工作，认真生活，并且把这些能记录下来的充满敬意。从今天开始除了把它们加入收藏夹，也把它们归集到一起，以后时常的去翻一翻浏览，从这些认真的人身上吸取知识和力量。</p>

<h2>咖啡机(K.F.J)</h2>

<ul>
<li><a href="https://www.cnblogs.com/strick/">https://www.cnblogs.com/strick/</a></li>
</ul>


<h2>荣明同学</h2>

<ul>
<li><a href="https://www.rmliu.com/">https://www.rmliu.com/</a></li>
<li><a href="https://github.com/Kate-liu">https://github.com/Kate-liu</a></li>
</ul>


<h2>fishedee个人感悟</h2>

<p><img src="https://image.fishedee.com/FulTCoakq411USQX_3HiZ79_fH0i" alt="" /></p>

<ul>
<li><a href="https://blog.fishedee.com/2021/07/06/%E3%80%8ATypeScript%E7%BC%96%E7%A8%8B%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0">《TypeScript编程》读书笔记</a></li>
<li><a href="https://blog.fishedee.com/2021/02/11/2020%E5%B9%B4%E5%B9%B4%E6%9C%AB%E6%80%BB%E7%BB%93">2020年年末总结</a></li>
<li><a href="https://blog.fishedee.com/2017/12/23/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E4%B8%AD%E5%B9%B4%E5%8D%B1%E6%9C%BA">程序员的中年危机</a></li>
</ul>


<p>提到两本书：《领域驱动设计模式、原理与实践》和《数据密集型应用系统设计》</p>

<h2>cutesunshineriver</h2>

<p><img src="https://www.iteye.com/upload/logo/user/1252039/ef863f68-2eab-3e79-a10f-a49b4995911f.jpg" title="周老师" alt="" /></p>

<ul>
<li><a href="https://www.iteye.com/blog/cutesunshineriver-2274933">这两年关注的技术博客</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[斐讯K2刷机padavan]]></title>
    <link href="http://winse.github.io/blog/2021/09/15/k2-again/"/>
    <updated>2021-09-15T17:48:41+08:00</updated>
    <id>http://winse.github.io/blog/2021/09/15/k2-again</id>
    <content type="html"><![CDATA[<p>很久以前刷了过一次，最近朋友在路由器上加了clash代理甚是羡慕啊，于是乎想着自己也重新刷个高级一点的固件系统，然后整个网络的都可以google了，手机也可以，那定是爽极了。</p>

<p>不走不知道，重迈步、万重山、变了天呀。那一身汉不知是吓出还是干出来的。</p>

<p>以下过程仅供参考，因为我也是参考别人的，但是过程也是荆棘丛丛。</p>

<h2>了解k2刷padavan的流程</h2>

<ul>
<li><a href="https://blog.csdn.net/bingyu880101/article/details/82915433">斐讯K2 刷bread 和第三方老毛子Padavan固件</a></li>
<li><a href="https://www.cnblogs.com/DamonDing/p/8546617.html">刷机整个过程</a> *</li>
<li><a href="https://vircloud.net/linux/openwrt-psg1218.html">https://vircloud.net/linux/openwrt-psg1218.html</a> 图文*</li>
</ul>


<p>版本很重要，不对要命那就可能直接变砖了！</p>

<p>1) 中间升级斐讯版本搞了很多次，先升到 【K2_V22.6.506.28 + breed Web控制台助手v5.8版本】 不行（可能是各个零件没配值对，又或者windows的病毒防护和防火墙没关），    <br/>
2) 然后又升到 K2_V22.6.507.43 还是不行，    <br/>
3) 又降回 K2_V22.6.506.28，使用【路由器刷breed Web控制台助手v4.8版本】刷成功了。</p>

<ul>
<li>正确斐讯k2刷breed版本</li>
</ul>


<p><a href="https://github.com/kuangyeheng/k2_router_files">https://github.com/kuangyeheng/k2_router_files</a></p>

<ul>
<li>最后刷成功后访问地址是：192.168.123.1</li>
</ul>


<h2>简单流程介绍</h2>

<p>刷成功使用的文件如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>H大1001版本RT-AC54U-GPIO-1-PSG1218-64M_3.4.3.9-099.trx
</span><span class='line'>K2_V22.6.506.28.bin
</span><span class='line'>RoutAckProV1B2.rar
</span><span class='line'>路由器刷breed+Web控制台助手v4.8版本.7z</span></code></pre></td></tr></table></div></figure>


<p>步骤如下：</p>

<p>1) 接有线，进入192.168.2.1管理界面 <code>手动升级</code> 到 K2_V22.6.506.28</p>

<p>2) 打开 <code>RoutAckProV1B2.exe</code> 点击 <code>打开Telnet</code></p>

<p>3) 关闭杀毒/防病毒软件（会被检测出毒）和防火墙（会开启一个文件服务器），右键使用管理员身份运行 <code>路由器刷breed Web控制台助手v4.8版本.exe</code> ，选k2的刷机方案      <br/>
4) 稍微等等，会弹出刷成功提示。然后会弹出懒人模式，不管直接关掉</p>

<p>5) 断路由器的电，然后按着reset键不松手，最后通电5秒后再松开reset键      <br/>
6) 访问 <a href="http://192.168.1.1">http://192.168.1.1</a> 进入Breed Web恢复控制台   <br/>
7) 恢复出厂设置，选 <code>Config区（公版）</code>   <br/>
8) 固件更新，选 <code>固件</code> 上面的trx文件，然后等     <br/>
9) 偶尔刷新 192.168.123.1 , 访问成功就说明ok了。默认密码admin/admin</p>

<h2>科学上网</h2>

<p><a href="https://ssrv2ray.xyz/posts/%E8%80%81%E6%AF%9B%E5%AD%90padavan%E5%9B%BA%E4%BB%B6ssv2ray%E6%9C%BA%E5%9C%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%A2%E9%98%85%E4%B8%8Eclash%E9%85%8D%E7%BD%AE">https://ssrv2ray.xyz/posts/%E8%80%81%E6%AF%9B%E5%AD%90padavan%E5%9B%BA%E4%BB%B6ssv2ray%E6%9C%BA%E5%9C%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%A2%E9%98%85%E4%B8%8Eclash%E9%85%8D%E7%BD%AE</a></p>

<p><a href="https://viencoding.com/article/155">https://viencoding.com/article/155</a></p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在树莓派上部署redmine]]></title>
    <link href="http://winse.github.io/blog/2020/05/11/redmine-on-arm-pi/"/>
    <updated>2020-05-11T10:33:44+08:00</updated>
    <id>http://winse.github.io/blog/2020/05/11/redmine-on-arm-pi</id>
    <content type="html"><![CDATA[<p>变废为宝。</p>

<p>服务器没怎么用，但是偶尔又想访问下文档或者redmine，狠狠心咬咬牙最后把x64上的迁移到了树莓派2： Raspbian GNU/Linux 9 (stretch) 。</p>

<p>温故下原来redmine的安装过程： <a href="http://www.winseliu.com/blog/2017/09/18/redmine-deploy-and-install-plugins/">Redmine部署以及插件安装</a></p>

<p>过程中涉及到了docker的重新编译，这其中主要使用ubuntu apt源码在本地arm上进行再编译。其中涉及的镜像有：</p>

<ul>
<li><a href="https://github.com/sameersbn/docker-ubuntu/tree/14.04">https://github.com/sameersbn/docker-ubuntu/tree/14.04</a></li>
<li><a href="https://github.com/sameersbn/docker-postgresql/tree/9.6-2">https://github.com/sameersbn/docker-postgresql/tree/9.6-2</a></li>
<li><a href="https://github.com/sameersbn/docker-redmine/tree/3.4.6">https://github.com/sameersbn/docker-redmine/tree/3.4.6</a></li>
</ul>


<h2>备份</h2>

<p>redmine直接整个目录打包 /srv/docker/redmine/redmine 。数据库的要备份出来，架构不同不兼容。</p>

<p>这是编译后arm postgres直接用x64的/srv/docker/redmine/postgresql的报错信息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@raspberrypi:~# docker run --rm -ti --entrypoint="bash" -v /srv/docker/redmine/postgresql:/var/lib/postgresql sameersbn/postgresql:9.6-2 
</span><span class='line'>
</span><span class='line'>root@8f39c2904607:/var/lib/postgresql# sudo -HEu postgres /usr/lib/postgresql/9.6/bin/pg_ctl -D /var/lib/postgresql/9.6/main -w start
</span><span class='line'>waiting for server to start....FATAL:  database files are incompatible with server
</span><span class='line'>DETAIL:  The database cluster was initialized with USE_FLOAT8_BYVAL but the server was compiled without USE_FLOAT8_BYVAL.
</span><span class='line'>HINT:  It looks like you need to recompile or initdb.
</span><span class='line'>LOG:  database system is shut down
</span><span class='line'>stopped waiting
</span><span class='line'>pg_ctl: could not start server
</span><span class='line'>Examine the log output.</span></code></pre></td></tr></table></div></figure>


<h2>编译ubuntu镜像</h2>

<p>直接使用最新的trusty发布版镜像。由于低版本的可能会没有 linux/arm/v7 : <a href="https://hub.docker.com/_/ubuntu/?tab=tags&amp;page=1&amp;name=trusty">https://hub.docker.com/_/ubuntu/?tab=tags&amp;page=1&amp;name=trusty</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@raspberrypi:~/docker-ubuntu# vi Dockerfile
</span><span class='line'>FROM ubuntu:trusty
</span><span class='line'>
</span><span class='line'>docker build -t sameersbn/ubuntu:14.04.20170123 . 
</span><span class='line'>docker tag sameersbn/ubuntu:14.04.20170123 sameersbn/ubuntu:14.04.20170711 
</span></code></pre></td></tr></table></div></figure>


<h2>编译postgres镜像</h2>

<p>由于postgresql apt的库中没有armhf的deb，需要先手动编译好对应的deb。先运行一个容器，再里面编译好postgres。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
</span><span class='line'> && echo 'deb-src http://mirrors.zju.edu.cn/postgresql/repos/apt/ trusty-pgdg main' &gt; /etc/apt/sources.list.d/pgdg.list \
</span><span class='line'> && sed -i 's/ports.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \
</span><span class='line'> && sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list \
</span><span class='line'> && apt-get update
</span><span class='line'>
</span><span class='line'>root@7d55994af11e:/# apt-get build-dep dh-exec postgresql-common  pgdg-keyring     
</span><span class='line'>root@7d55994af11e:/# apt-get source --compile dh-exec postgresql-common  pgdg-keyring   
</span><span class='line'>
</span><span class='line'>root@7d55994af11e:/# apt-get build-dep postgresql-${PG_VERSION} postgresql-client-${PG_VERSION} postgresql-contrib-${PG_VERSION} dh-exec
</span><span class='line'>root@7d55994af11e:/# apt-get source --compile postgresql-${PG_VERSION} postgresql-client-${PG_VERSION} postgresql-contrib-${PG_VERSION} 
</span></code></pre></td></tr></table></div></figure>


<p>再测试安装一下这些deb：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
</span><span class='line'> && echo 'deb-src http://mirrors.zju.edu.cn/postgresql/repos/apt/ trusty-pgdg main' &gt; /etc/apt/sources.list.d/pgdg.list \
</span><span class='line'> && sed -i 's/ports.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \
</span><span class='line'> && sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list \
</span><span class='line'> && apt-get update
</span><span class='line'>
</span><span class='line'>apt-get install -y acl \
</span><span class='line'>    libpipeline1 debhelper ssl-cert libxml2 libedit2 libxslt1.1 libperl5.18 libpython2.7 libpython3.4 libtcl8.6
</span><span class='line'>
</span><span class='line'>dpkg -i pgdg-keyring_2018.2_all.deb postgresql-common_201.pgdg14.04+1_all.deb  postgresql-client-common_201.pgdg14.04+1_all.deb
</span><span class='line'>
</span><span class='line'>dpkg -i libpq5_9.6.13-1.pgdg14.04+1_armhf.deb  postgresql-9.6_9.6.13-1.pgdg14.04+1_armhf.deb postgresql-client-9.6_9.6.13-1.pgdg14.04+1_armhf.deb postgresql-contrib-9.6_9.6.13-1.pgdg14.04+1_armhf.deb
</span></code></pre></td></tr></table></div></figure>


<p>修改Dockerfile，直接通过dpkg安装postgresql的deb：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@raspberrypi:~/docker-postgresql# less Dockerfile 
</span><span class='line'>...
</span><span class='line'>COPY deb/ /tmp/psql/
</span><span class='line'>
</span><span class='line'>RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
</span><span class='line'> && echo 'deb-src http://mirrors.zju.edu.cn/postgresql/repos/apt/ trusty-pgdg main' &gt; /etc/apt/sources.list.d/pgdg.list \
</span><span class='line'> && sed -i 's/ports.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \
</span><span class='line'> && sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list \
</span><span class='line'> && apt-get update \
</span><span class='line'> && DEBIAN_FRONTEND=noninteractive apt-get install -y acl \
</span><span class='line'>    libpipeline1 debhelper ssl-cert libxml2 libedit2 libxslt1.1 libperl5.18 libpython2.7 libpython3.4 libtcl8.6 \
</span><span class='line'> && cd /tmp/psql \
</span><span class='line'> && dpkg -i pgdg-keyring_2018.2_all.deb postgresql-common_201.pgdg14.04+1_all.deb  postgresql-client-common_201.pgdg14.04+1_all.deb \
</span><span class='line'> && dpkg -i libpq5_9.6.13-1.pgdg14.04+1_armhf.deb  postgresql-9.6_9.6.13-1.pgdg14.04+1_armhf.deb postgresql-client-9.6_9.6.13-1.pgdg14.04+1_armhf.deb postgresql-contrib-9.6_9.6.13-1.pgdg14.04+1_armhf.deb \
</span><span class='line'> && rm -rf /tmp/psql \
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>root@raspberrypi:~/docker-postgresql# docker build -t sameersbn/postgresql:9.6-2 .</span></code></pre></td></tr></table></div></figure>


<h2>编译redmine镜像</h2>

<p>redmine主要是缺少ruby2.3的包，跟上面的步骤类似。先编译出arm的ruby2.3，再编译镜像。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sed -i 's/ports.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \
</span><span class='line'>&& sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
</span><span class='line'>
</span><span class='line'>apt-get build-dep ruby${RUBY_VERSION} ruby${RUBY_VERSION}-dev
</span><span class='line'>apt-get source --compile ruby${RUBY_VERSION} ruby${RUBY_VERSION}-dev
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>root@raspberrypi:~/docker-redmine# vi Dockerfile 
</span><span class='line'>...
</span><span class='line'>COPY deb/ /tmp/ruby/
</span><span class='line'>
</span><span class='line'>RUN apt-key adv --keyserver keyserver.ubuntu.com --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24 \
</span><span class='line'> && echo "deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main" &gt;&gt; /etc/apt/sources.list \
</span><span class='line'> && apt-key adv --keyserver keyserver.ubuntu.com --recv 80F70E11F0F0D5F10CB20E62F5DA5F09C3173AA6 \
</span><span class='line'> && echo "deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu trusty main" &gt;&gt; /etc/apt/sources.list \
</span><span class='line'> && apt-key adv --keyserver keyserver.ubuntu.com --recv 8B3981E7A6852F782CC4951600A6F0A3C300EE8C \
</span><span class='line'> && echo "deb http://ppa.launchpad.net/nginx/stable/ubuntu trusty main" &gt;&gt; /etc/apt/sources.list \
</span><span class='line'> && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
</span><span class='line'> && echo 'deb-src http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' &gt; /etc/apt/sources.list.d/pgdg.list \
</span><span class='line'> && sed -i 's/ports.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list \
</span><span class='line'> && sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list \
</span><span class='line'> && apt-get update \
</span><span class='line'> && DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor logrotate nginx mysql-client postgresql-client \
</span><span class='line'>      imagemagick subversion git cvs bzr mercurial darcs rsync   locales openssh-client \
</span><span class='line'>      gcc g++ make patch pkg-config gettext-base   libc6-dev zlib1g-dev libxml2-dev \
</span><span class='line'>      libmysqlclient18 libpq5 libyaml-0-2 libcurl3 libssl1.0.0 uuid-dev xz-utils \
</span><span class='line'>      libxslt1.1 libffi6 zlib1g gsfonts \
</span><span class='line'>      libgmpxx4ldbl libgmp-dev libtk8.5 libxft2 libxrender1 libxss1 x11-common libtcl8.5 rubygems-integration \
</span><span class='line'> && dpkg -i /tmp/ruby/*.deb \
</span><span class='line'> && rm -rf /tmp/ruby \
</span><span class='line'> && update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX \
</span><span class='line'> && gem install --no-document --version '&lt; 2.0' bundler \
</span><span class='line'> && rm -rf /var/lib/apt/lists/*
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>root@raspberrypi:~/docker-redmine# docker build -t sameersbn/redmine:3.4.6 .</span></code></pre></td></tr></table></div></figure>


<p>如果docker构建失败，可以通过以下两种方式来进行调试：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 1
</span><span class='line'>docker commit $container-id image-id
</span><span class='line'>docker run -ti $image-id bash
</span><span class='line'>
</span><span class='line'># 2 
</span><span class='line'>失败也会有前一步骤的镜像已经提交，再次基础上检查后面的步骤
</span><span class='line'>The last successful step is 2. It produced an image a3acfa4ab179. Now you start a container
</span><span class='line'>docker run -it a3acfa4ab179 bash</span></code></pre></td></tr></table></div></figure>


<h2>结合原有数据进行迁移</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 备份
</span><span class='line'>psql -U postgres -cC --if-exists -d redmine_production &gt;redmine.dump 
</span><span class='line'>
</span><span class='line'># 安装compose
</span><span class='line'>root@raspberrypi:~/redmine/bin# python -m pip install --upgrade pip
</span><span class='line'>root@raspberrypi:~/redmine/bin# pip install docker-compose
</span><span class='line'>
</span><span class='line'># 启动
</span><span class='line'>root@raspberrypi:~/redmine/bin# docker-compose up -d 
</span><span class='line'>
</span><span class='line'># 数据库还原
</span><span class='line'>docker cp redmine.dump e472d9ec3124:/var/lib/postgresql/
</span><span class='line'>psql -U postgres &lt;redmine.dump
</span><span class='line'>
</span><span class='line'># redmine修复
</span><span class='line'>root@3f0774db222d:/home/redmine/redmine# apt-get install libmysqlclient-dev                                    
</span><span class='line'>
</span><span class='line'>https://stackoverflow.com/questions/13086073/rails-install-pg-cant-find-the-libpq-fe-h-header
</span><span class='line'>root@3f0774db222d:/home/redmine/redmine# apt-get install libpq-dev
</span><span class='line'>https://stackoverflow.com/questions/38200015/package-magickcore-was-not-found-in-the-pkg-config-search-path
</span><span class='line'>root@3f0774db222d:/home/redmine/redmine# apt-get install libmagickwand-dev
</span><span class='line'>
</span><span class='line'>root@3f0774db222d:/home/redmine/redmine# bundle install                    
</span></code></pre></td></tr></table></div></figure>


<p>后面就直接安装docker-compose.yml中的端口映射配置访问即可。</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[appium-Android自动化测试]]></title>
    <link href="http://winse.github.io/blog/2020/04/12/appium-android-auto-test/"/>
    <updated>2020-04-12T17:11:41+08:00</updated>
    <id>http://winse.github.io/blog/2020/04/12/appium-android-auto-test</id>
    <content type="html"><![CDATA[<h2>参考链接</h2>

<ul>
<li><a href="https://github.com/appium/appium-desktop">https://github.com/appium/appium-desktop</a></li>
<li><a href="https://github.com/appium/java-client">https://github.com/appium/java-client</a></li>
<li><a href="https://www.jianshu.com/p/2912482dba0b">移动端自动化测试-Appium Desktop</a></li>
<li>√<a href="https://zhuanlan.zhihu.com/p/37798611">工具应用：使用Appium测试Android应用程序/小米计算器进行测试</a></li>
<li><a href="https://blog.csdn.net/ouyanggengcheng/article/details/88353836">Appium-Desktop使用/Java测试代码</a></li>
<li><a href="https://www.toolsqa.com/mobile-automation/appium/findelement-and-findelements-commands/">https://www.toolsqa.com/mobile-automation/appium/findelement-and-findelements-commands/</a></li>
<li><a href="https://appiumpro.com/editions/44-working-with-web-components-shadow-dom">https://appiumpro.com/editions/44-working-with-web-components-shadow-dom</a></li>
</ul>


<h2>步骤</h2>

<h4>手机端开发这模式需要进行如下设置：</h4>

<ul>
<li>(可选)不锁定屏幕</li>
<li>USB调试</li>
<li>USB安装</li>
<li>USB调试（安全设置）</li>
</ul>


<h4>安装启动Appium Desktop</h4>

<ol>
<li>点击编辑配置</li>
</ol>


<p>设置ANDROID_HOME
C:\Android\Sdk</p>

<ol>
<li><p>启动服务</p></li>
<li><p>使用/应用</p></li>
</ol>


<p>按步骤操作，先用[检查器会话]的执行一次。这里会<strong>给手机安装两个应用</strong>，最开始开发者模式的设置就是为安装应用来修改的。</p>

<p>3.1 启动检查器会话</p>

<p>启动服务后，会进入到黑窗口日志界面。点击界面右上角第一个放大镜按钮：[启动检查器会话]，编辑[所需功能]</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "platformName": "Android",
</span><span class='line'>  "platformVersion": "7.1",
</span><span class='line'>  "appPackage": "com.miui.calculator",
</span><span class='line'>  "appActivity": ".cal.CalculatorActivity"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>如果不需要录制脚本，可以使用 C:\Android\Sdk\tools\bin\uiautomatorviewer.bat 查看也可以的。</p>

<p>3.2 Java客户端</p>

<ul>
<li><a href="https://github.com/appium/java-client/blob/master/src/test/java/io/appium/java_client/android/BaseAndroidTest.java">BaseAndroidTest.java</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>public static final String APP_ID = "com.taobao.idlefish";
</span><span class='line'>
</span><span class='line'>private static AppiumDriverLocalService service;
</span><span class='line'>
</span><span class='line'>private static AndroidDriver&lt;AndroidElement&gt; driver;
</span><span class='line'>private static WebDriverWait wait;
</span><span class='line'>
</span><span class='line'>private void initialization() throws MalformedURLException {
</span><span class='line'>  initialization(APP_ID, "com.taobao.idlefish.router.JumpActivity", true, false);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void initialization1() throws MalformedURLException {
</span><span class='line'>  initialization("com.miui.calculator", ".cal.CalculatorActivity", null, null);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>/**
</span><span class='line'> * @param noReset    null will remove from the caps.
</span><span class='line'> * @param autoLaunch null will remove from the caps.
</span><span class='line'> */
</span><span class='line'>protected void initialization(String appPackage, String appActivity, Boolean noReset, Boolean autoLaunch) throws MalformedURLException {
</span><span class='line'>  URL url = new URL("http://localhost:4723/wd/hub");
</span><span class='line'>
</span><span class='line'>  DesiredCapabilities capabilities = new DesiredCapabilities();
</span><span class='line'>  capabilities.setCapability("automationName", "UiAutomator2" /* "Appium" */);
</span><span class='line'>  capabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, "Android");
</span><span class='line'>  capabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, "7.1");
</span><span class='line'>
</span><span class='line'>  capabilities.setCapability("appPackage", appPackage);
</span><span class='line'>  capabilities.setCapability("appActivity", appActivity);
</span><span class='line'>  // http://appium.io/docs/en/writing-running-appium/caps/
</span><span class='line'>  capabilities.setCapability("noReset", noReset);
</span><span class='line'>  capabilities.setCapability("autoLaunch", autoLaunch);
</span><span class='line'>  
</span><span class='line'>  capabilities.setCapability(MobileCapabilityType.NEW_COMMAND_TIMEOUT, 100);
</span><span class='line'>
</span><span class='line'>  driver = new AndroidDriver&lt;&gt;(url, capabilities);
</span><span class='line'>  wait = new WebDriverWait(driver, 20);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>protected void finishing() {
</span><span class='line'>  try {
</span><span class='line'>      if (driver != null) {
</span><span class='line'>          driver.quit();
</span><span class='line'>      }
</span><span class='line'>      if (service != null) {
</span><span class='line'>          service.stop();
</span><span class='line'>      }
</span><span class='line'>  } catch (Exception e) {
</span><span class='line'>  } finally {
</span><span class='line'>      driver = null;
</span><span class='line'>      service = null;
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>protected void swiping() {
</span><span class='line'>  Dimension windowSize = getSize();
</span><span class='line'>
</span><span class='line'>  int startX = windowSize.width / 2;
</span><span class='line'>  int startY = (int) (windowSize.height * 0.8);
</span><span class='line'>  int endX = windowSize.width / 2;
</span><span class='line'>  int endY = (int) (windowSize.height * 0.1);
</span><span class='line'>
</span><span class='line'>  swipe(startX, startY, endX, endY, 1200);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>protected void swipe(int x1, int y1, int x2, int y2, int waitMillis) {
</span><span class='line'>  new TouchAction&lt;&gt;(driver) //
</span><span class='line'>          .press(ElementOption.point(x1, y1))
</span><span class='line'>          .waitAction(WaitOptions.waitOptions(Duration.ofMillis(waitMillis)))
</span><span class='line'>          .moveTo(ElementOption.point(x2, y2))
</span><span class='line'>          .release()
</span><span class='line'>          .perform();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>protected void touch(int x, int y) {
</span><span class='line'>  new TouchAction&lt;&gt;(driver).tap(TapOptions.tapOptions().withPosition(PointOption.point(x, y))).perform();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>protected void touch(Point p) {
</span><span class='line'>  touch(p.x, p.y);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>protected Dimension getSize() {
</span><span class='line'>  return driver.manage().window().getSize();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>protected Point getCenter() {
</span><span class='line'>  Dimension size = getSize();
</span><span class='line'>  return new Point(size.width / 2, size.height / 2);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void touchAndWait() throws InterruptedException {
</span><span class='line'>  touchAndWait(null);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void touchAndWait(By by) throws InterruptedException {
</span><span class='line'>  // 等一下界面效果
</span><span class='line'>//        Thread.sleep(500);
</span><span class='line'>  TimeUnit.MILLISECONDS.sleep(500);
</span><span class='line'>
</span><span class='line'>  try {
</span><span class='line'>      swiping();
</span><span class='line'>  } catch (Exception e) {
</span><span class='line'>      touch(getCenter());
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  if (by != null) {
</span><span class='line'>      wait.until(ExpectedConditions.presenceOfElementLocated(by));
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void doCalculator() throws InterruptedException {
</span><span class='line'>  By btn_9_s = By.id("com.miui.calculator:id/btn_9_s");
</span><span class='line'>  By btn_plus_s = By.id("com.miui.calculator:id/btn_plus_s");
</span><span class='line'>  By btn_3_s = By.id("com.miui.calculator:id/btn_3_s");
</span><span class='line'>  By btn_equal_s = By.id("com.miui.calculator:id/btn_equal_s");
</span><span class='line'>  By textViews = By.className("android.widget.TextView");
</span><span class='line'>
</span><span class='line'>  touchAndWait(btn_9_s);
</span><span class='line'>  driver.findElement(btn_9_s).click();
</span><span class='line'>  // driver.findElementByAccessibilityId("加");
</span><span class='line'>  driver.findElement(btn_plus_s).click();
</span><span class='line'>  driver.findElement(btn_3_s).click();
</span><span class='line'>  driver.findElement(btn_equal_s).click();
</span><span class='line'>
</span><span class='line'>  touchAndWait(textViews);
</span><span class='line'>  List&lt;? extends WebElement&gt; allText = driver.findElements(textViews);
</span><span class='line'>  boolean isOk = false;
</span><span class='line'>  for (int i = 0; i &lt; allText.size(); i++) {
</span><span class='line'>      String txt = allText.get(i).getText();
</span><span class='line'>      System.out.println(txt);
</span><span class='line'>
</span><span class='line'>      // 由于第一次无法根据元素的ClassName确定顺序，所以使用遍历的方式进行断言
</span><span class='line'>      if (txt.equals("= 12")) {
</span><span class='line'>          isOk = true;
</span><span class='line'>          break;
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  if (isOk) {
</span><span class='line'>      System.out.println("测试成功.");
</span><span class='line'>  } else {
</span><span class='line'>      System.out.println("测试失败.");
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>public void testCalculator() throws Exception {
</span><span class='line'>  try {
</span><span class='line'>      initialization1();
</span><span class='line'>
</span><span class='line'>      doCalculator();
</span><span class='line'>  } finally {
</span><span class='line'>      finishing();
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>public void testHello() throws InterruptedException, MalformedURLException {
</span><span class='line'>  try {
</span><span class='line'>      this.initialization1();
</span><span class='line'>
</span><span class='line'>      doCalculator();
</span><span class='line'>
</span><span class='line'>      driver.activateApp(APP_ID);
</span><span class='line'>//            driver.startActivity(new Activity(APP_ID, "com.taobao.idlefish.router.JumpActivity"));
</span><span class='line'>
</span><span class='line'>      test0();
</span><span class='line'>      test1();
</span><span class='line'>  } finally {
</span><span class='line'>      this.finishing();
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private String toString(Rectangle rect) {
</span><span class='line'>  return String.format("(%s,%s,%s,%s)", rect.x, rect.y, rect.width, rect.height);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void printAllView() throws Exception {
</span><span class='line'>  try {
</span><span class='line'>      List&lt;AndroidElement&gt; allText = driver.findElementsByXPath("//*");
</span><span class='line'>      for (int i = 0; i &lt; allText.size(); i++) {
</span><span class='line'>          AndroidElement ele = allText.get(i);
</span><span class='line'>          
</span><span class='line'>          System.out.println("===========================");
</span><span class='line'>          System.out.println(ele.getTagName() + ","
</span><span class='line'>                  + ele.isSelected() + "," 
</span><span class='line'>                  + ele.isEnabled() + "," 
</span><span class='line'>                  + ele.isDisplayed() + "," 
</span><span class='line'>                  + ele.getText() + "," 
</span><span class='line'>                  + toString(ele.getRect()));
</span><span class='line'>          
</span><span class='line'>          System.out.println(ele.getAttribute("class"));
</span><span class='line'>          System.out.println(ele.getAttribute("content-desc"));
</span><span class='line'>          System.out.println(ele.getAttribute("text"));
</span><span class='line'>      }
</span><span class='line'>      
</span><span class='line'>  } catch (Exception e) {
</span><span class='line'>      String errMsg = e.getMessage();
</span><span class='line'>      System.err.println(errMsg);
</span><span class='line'>
</span><span class='line'>      if (errMsg.contains("A session is either terminated or not started")) {
</span><span class='line'>          try {
</span><span class='line'>              this.finishing();
</span><span class='line'>          } catch (Exception ex) {
</span><span class='line'>          }
</span><span class='line'>
</span><span class='line'>          this.initialization();
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void doProcessManual() throws Exception {
</span><span class='line'>  while (true) {
</span><span class='line'>      printAllView();
</span><span class='line'>
</span><span class='line'>      swiping();
</span><span class='line'>
</span><span class='line'>      Thread.sleep(1000);
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>public void testXianyu() throws Exception {
</span><span class='line'>  try {
</span><span class='line'>      this.initialization();
</span><span class='line'>
</span><span class='line'>      doProcessManual();
</span><span class='line'>  } finally {
</span><span class='line'>      this.finishing();
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void test0() {
</span><span class='line'>  System.out.println("appId: " + driver.getCurrentPackage());
</span><span class='line'>  System.out.println("activity: " + driver.currentActivity());
</span><span class='line'>  
</span><span class='line'>  System.out.println(APP_ID + " installed?: " + driver.isAppInstalled(APP_ID));
</span><span class='line'>
</span><span class='line'>//        driver.runAppInBackground(Duration.ofSeconds(-1));
</span><span class='line'>//        driver.activateApp(appId);
</span><span class='line'>//        driver.closeApp();
</span><span class='line'>//        driver.resetApp();
</span><span class='line'>//        driver.rotate(new DeviceRotation(0, 0, 0));
</span><span class='line'>//        driver.launchApp();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>private void test1() {
</span><span class='line'>  System.out.println("AppStringMap size: " + driver.getAppStringMap().size());
</span><span class='line'>  System.out.println("en AppStringMap size: " + driver.getAppStringMap("en").size());
</span><span class='line'>  
</span><span class='line'>  System.out.println("build: " + driver.getStatus().get("build"));
</span><span class='line'>  
</span><span class='line'>  System.out.println("DeviceTime: " + driver.getDeviceTime());
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Linux via Termux]]></title>
    <link href="http://winse.github.io/blog/2019/07/26/android-linux-via-termux/"/>
    <updated>2019-07-26T19:16:14+08:00</updated>
    <id>http://winse.github.io/blog/2019/07/26/android-linux-via-termux</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4NjAxNjY4Nw==&amp;mid=2650221561&amp;idx=1&amp;sn=e2324a27de64196b090b70bfd21528eb&amp;chksm=f3e0de39c497572f485c48216dcb9b8bd868019a2b74aa31debbc4f1d1ca5a83bf04db78ed13&amp;scene=0&amp;xtrack=1&amp;key=1a2eded5d1d2d5f751cec6c74b3ca5f846f5657737434cb78e95d89659b035da268bdff3daf7c1bd5396cd439bf8aebb2202a7c3225e6f8e421914c62d12153f8fbd018b0dbb278d04db60691a0a22b1&amp;ascene=1&amp;uin=NTEwMjEwNDU%3D&amp;devicetype=Windows+10&amp;version=62060833&amp;lang=zh_CN&amp;pass_ticket=u2Vi82ueadP4KQOaznpjv9qNE4IBVZl622AaPRxh5DE%3D">Termux 入门教程：架设手机 Server 下载文件</a></li>
<li><a href="https://www.sqlsec.com/2018/05/termux.html">Termux 高级终端安装使用配置教程</a></li>
<li><a href="https://www.sqlsec.com/2018/05/termux.html#toc-heading-24">信息安全</a></li>
<li><a href="http://blackwolfsec.cc/2016/12/10/termux/">基于Termux打造Android手机渗透神器</a></li>
</ul>


<p>牛逼的都在上面的链接，请点击查阅。</p>

<hr/>


<h1>简单摘录</h1>

<h2>安装</h2>

<ul>
<li>Termux is an Android terminal app and Linux environment.</li>
<li>Android下的Linux环境和Shell终端程序，无须root，可使用apt包管理工具安装大部分Linux软件。</li>
<li>国内下载通过<a href="https://termux.com/">官网</a>的 <a href="https://f-droid.org/packages/com.termux/">F-Droid</a> ，该网站安装包的各个版本描述下一个 <del>下载APK</del> 的链接。<a href="https://f-droid.org/repo/com.termux_72.apk">版本 0.72 </a></li>
<li>Android源码：<a href="https://github.com/termux/termux-app">termux-app</a></li>
</ul>


<h2>使用</h2>

<ul>
<li>一些按键</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>长按（more... - keep screen on）
</span><span class='line'>
</span><span class='line'>从左往右滑（导航栏）
</span><span class='line'>
</span><span class='line'>长按导航栏左下角的KEYBOARD
</span><span class='line'>音量+ - Q 
</span><span class='line'>
</span><span class='line'>Ctrl+A -&gt; 将光标移动到行首
</span><span class='line'>Ctrl+E -&gt; 将光标移动到行尾
</span><span class='line'>Ctrl+K -&gt; 从光标删除到行尾
</span><span class='line'>Ctrl+L -&gt; 清除终端
</span><span class='line'>Ctrl+C -&gt; 中止当前进程
</span><span class='line'>Ctrl+D -&gt; 注销终端会话
</span><span class='line'>-- 可使用音量减小按钮来模拟Ctrl键
</span><span class='line'>
</span><span class='line'>Ctrl+Z -&gt; 挂起（发送SIGTSTP到）当前进程
</span><span class='line'>bg
</span><span class='line'>
</span><span class='line'>音量加+W -&gt; 向上箭头键
</span><span class='line'>音量加+A -&gt; 向左箭头键
</span><span class='line'>音量加+S -&gt; 向下箭头键
</span><span class='line'>音量加+D -&gt; 向右箭头键
</span><span class='line'>（按太麻烦，可以通过 额外的按键视图 添加修改）
</span><span class='line'>
</span><span class='line'>音量加+1 -&gt; F1（和音量增加+ 2→F2等）
</span><span class='line'>音量加+0 -&gt; F10</span></code></pre></td></tr></table></div></figure>


<ul>
<li>otg USB键盘</li>
<li>sshd远程连接</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pkg install openssh
</span><span class='line'>
</span><span class='line'>ssh-keygen
</span><span class='line'>cd .ssh
</span><span class='line'>cat id_rsa.pub &gt;&gt; authorized_keys
</span><span class='line'>chmod 600 authorized_keys</span></code></pre></td></tr></table></div></figure>


<p>再安装个http-server，可以下载手机上的私钥（懒得接数据线）：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt install nodejs
</span><span class='line'>npm install -g http-server
</span><span class='line'>http-server</span></code></pre></td></tr></table></div></figure>


<p>下载id_rsa，最后远程连接</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>uname -a
</span><span class='line'>cat /proc/version
</span><span class='line'>ifconfig wlan0
</span><span class='line'>whoami
</span><span class='line'>#u0_a144
</span><span class='line'>
</span><span class='line'>sshd
</span><span class='line'>
</span><span class='line'>netstat -anp|grep sshd
</span><span class='line'>#8022</span></code></pre></td></tr></table></div></figure>


<p>客户端访问</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -i id_rsa -p 8022 u0_a144@192.168.2.241
</span><span class='line'>
</span><span class='line'>$ which sshd
</span><span class='line'>/data/data/com.termux/files/usr/bin/sshd
</span><span class='line'>$ pwd
</span><span class='line'>/data/data/com.termux/files/home</span></code></pre></td></tr></table></div></figure>


<p>所有文件都放在 <code>/data/data/com.termux/files</code> 操作起来很不方便，没了Linux感觉。
可以通过chroot来切换根目录，安装proot：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pkg install proot
</span><span class='line'>$ termux-chroot
</span><span class='line'>$ vi /etc/ssh/sshd_config
</span><span class='line'>Port 22
</span><span class='line'>
</span><span class='line'>pkg install tsu
</span><span class='line'>tsudo sshd # 手机已经root了的
</span><span class='line'>tsudo ps aux|grep sshd</span></code></pre></td></tr></table></div></figure>


<p><strong>用22端口启动了。用了tsudo启动后，原来的u0_a144登录不了，好像只能谁启动就用谁登陆！</strong></p>

<p>注：伤心，chroot后，nodejs安装的http-server用不了了&hellip;暂时不用chroot吧！加 $PREFIX 访问！</p>

<p>如果SecureCRT不兼容手机端生成的公私钥，可以生成一个，使用ssh复制然后写入authorized_keys：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scp -i id_rsa -P 8022 ~/.ssh/id_rsa.pub u0_a144@192.168.2.241:~/</span></code></pre></td></tr></table></div></figure>


<p>注意：PC路径下必须两个key都存在，不能只有一个id_rsa.pub ，还要有一个id_rsa，尽管好象securtCRT没用到它。</p>

<p>修改源、安装常用软件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export EDITOR=vi
</span><span class='line'>
</span><span class='line'>apt edit-sources
</span><span class='line'>deb http://mirrors.tuna.tsinghua.edu.cn/termux stable main
</span><span class='line'>
</span><span class='line'># or direct edit
</span><span class='line'>#vi  $PREFIX/etc/apt/sources.list
</span><span class='line'>
</span><span class='line'>apt update
</span><span class='line'>apt upgrade 
</span><span class='line'>
</span><span class='line'>pkg install vim curl wget net-tools git less tar unzip unrar tree
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装配置zsh</li>
</ul>


<p><a href="https://www.sqlsec.com/2018/05/termux.html#toc-heading-17">终端配色</a> <br/>
<a href="https://github.com/powerline/fonts.git">字体fonts-powerline</a>   <br/>
<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes">Themes</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh -c "$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)"
</span><span class='line'>想要继续更改挑选配色的话,继续运行脚本来再次筛选:
</span><span class='line'>$ ~/termux-ohmyzsh/install.sh
</span><span class='line'>exit重启sessions会话生效配置
</span><span class='line'>
</span><span class='line'>Enter a number, leave blank to not to change: 14
</span><span class='line'>Enter a number, leave blank to not to change: 6
</span><span class='line'>
</span><span class='line'>vi .zshrc
</span><span class='line'>ZSH_THEME="cloud"</span></code></pre></td></tr></table></div></figure>


<p>以下是zsh的一些使用技巧，因为都很常用：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>连按两次Tab会列出所有的补全列表并直接开始选择，补全项可以使用 ctrl+n/p/f/b上下左右切换
</span><span class='line'>命令选项补全。在zsh中只需要键入 tar -&lt;tab&gt; 就会列出所有的选项和帮助说明
</span><span class='line'>命令参数补全。键入 kill &lt;tab&gt; 就会列出所有的进程名和对应的进程号
</span><span class='line'>更智能的历史命令。在用或者方向上键查找历史命令时，zsh支持限制查找。比如，输入ls,然后再按方向上键，则只会查找用过的ls命令。而此时使用则会仍然按之前的方式查找，忽略 ls
</span><span class='line'>智能跳转，安装了 autojump 之后，zsh 会自动记录你访问过的目录，通过 j 目录名 可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过 hadoop-1.0.0 目录，输入j hado 即可正确跳转。j --stat 可以看你的历史路径库。
</span><span class='line'>目录浏览和跳转：输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转。
</span><span class='line'>在当前目录下输入 .. 或 ... ，或直接输入当前目录名都可以跳转，你甚至不再需要输入 cd 命令了。在你知道路径的情况下，比如 /usr/local/bin 你可以输入 cd /u/l/b 然后按进行补全快速输入
</span><span class='line'>通配符搜索：ls -l **/*.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find。使用 **/ 来递归搜索
</span><span class='line'>扩展环境变量，输入环境变量然后按 就可以转换成表达的值</span></code></pre></td></tr></table></div></figure>


<p>切回shell</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chsh -s bash</span></code></pre></td></tr></table></div></figure>


<ul>
<li>nginx</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pkg install php nginx php-fpm mariadb
</span><span class='line'>
</span><span class='line'>nginx
</span><span class='line'>netstat -an |grep 8080
</span><span class='line'>
</span><span class='line'>fuse -k 8080/tcp
</span><span class='line'>nginx -s reload
</span><span class='line'>
</span><span class='line'>termux-chroot
</span><span class='line'>vim /etc/php-fpm.d/www.conf
</span><span class='line'>listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock
</span><span class='line'>-&gt;
</span><span class='line'>listen = 127.0.0.1:9000
</span><span class='line'>
</span><span class='line'>vim /etc/nginx/nginx.conf
</span><span class='line'>worker_processes  1;
</span><span class='line'>events {
</span><span class='line'>    worker_connections  1024;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>http {
</span><span class='line'>    include       mime.types;
</span><span class='line'>    default_type  application/octet-stream;
</span><span class='line'>    sendfile        on;
</span><span class='line'>    keepalive_timeout  65;
</span><span class='line'>
</span><span class='line'>    server {
</span><span class='line'>
</span><span class='line'>        listen       8080;
</span><span class='line'>        server_name  localhost;
</span><span class='line'>        root   /data/data/com.termux/files/usr/share/nginx/html;
</span><span class='line'>        index  index.html index.htm;
</span><span class='line'>
</span><span class='line'>        error_page   500 502 503 504  /50x.html;
</span><span class='line'>        location = /50x.html {
</span><span class='line'>            root   /data/data/com.termux/files/usr/share/nginx/html;
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        location ~ \.php$ {
</span><span class='line'>            root           html;
</span><span class='line'>            fastcgi_pass   127.0.0.1:9000;
</span><span class='line'>            fastcgi_index  index.php;
</span><span class='line'>            fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;
</span><span class='line'>            include        fastcgi_params;
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>## -- wordpress
</span><span class='line'>
</span><span class='line'>/data/data/com.termux/files/home/wordpress
</span><span class='line'>
</span><span class='line'>vim /etc/nginx/nginx.conf
</span><span class='line'>server {
</span><span class='line'>
</span><span class='line'>listen 8080;
</span><span class='line'>server_name localhost;
</span><span class='line'>root /data/data/com.termux/files/home/wordpress;
</span><span class='line'>index index.html index.htm index.php;
</span><span class='line'>location ~ \.php$ {
</span><span class='line'>root html;
</span><span class='line'>fastcgi_pass 127.0.0.1:9000;
</span><span class='line'>fastcgi_index index.php;
</span><span class='line'>fastcgi_param SCRIPT_FILENAME  /data/data/com.termux/files/home/wordpress$fastcgi_script_name;
</span><span class='line'>include fastcgi_params;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>启动php-fpm和nginx</p>

<blockquote><p>在proot环境下面分别启动php-fpm和nginx，这里的nginx不在proot环境下启动后会出一些问题。</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php-fpm
</span><span class='line'>nginx</span></code></pre></td></tr></table></div></figure>


<ul>
<li>tmux</li>
</ul>


<p>Tmux是一个优秀的终端复用软件，类似GNU Screen</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pkg install tmux
</span><span class='line'>tmux new -s mysql</span></code></pre></td></tr></table></div></figure>


<p>让会话后台运行
使用快捷键组合Ctrl+ b + d，三次按键就可以断开当前会话。tmux默认的前置操作是CTRL+b，下面所有的prefix均代表CTRL+b</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>查看/切换session  prefix s
</span><span class='line'>离开Session prefix d
</span><span class='line'>重命名当前Session  prefix $
</span><span class='line'>
</span><span class='line'>新建窗口  prefix c
</span><span class='line'>切换到上一个活动的窗口    prefix space
</span><span class='line'>关闭一个窗口    prefix &
</span><span class='line'>使用窗口号切换   prefix 窗口号
</span><span class='line'>
</span><span class='line'>切换到下一个窗格  prefix o
</span><span class='line'>查看所有窗格的编号 prefix q
</span><span class='line'>垂直拆分出一个新窗格    prefix “
</span><span class='line'>水平拆分出一个新窗格    prefix %
</span><span class='line'>暂时把一个窗体放到最大   prefix z</span></code></pre></td></tr></table></div></figure>


<h2>其他</h2>

<ul>
<li>额外的按键视图</li>
</ul>


<p>termux也有一个额外的按键视图。它允许您使用ESC，CTRL，ALT，TAB，- ，/ 等等等键扩展当前的键盘。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi ~/.termux/termux.properties
</span><span class='line'>extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']] 
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>实现操作手机底层</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>termux-setup-storage
</span><span class='line'>
</span><span class='line'>pkg install termux-api
</span><span class='line'>
</span><span class='line'>termux-battery-status
</span><span class='line'>termux-camera-info
</span><span class='line'>termux-clipboard-get
</span><span class='line'>termux-clipboard-set PHP是世界上最好的语言
</span><span class='line'>termux-contact-list
</span><span class='line'>termux-sms-inbox
</span><span class='line'>termux-sms-send -n 10001 cxll
</span><span class='line'>termux-telephony-call 10001
</span><span class='line'>termux-wifi-connectioninfo
</span><span class='line'>termux-wifi-scaninfo</span></code></pre></td></tr></table></div></figure>


<p>直接操作调动系统底层的话,可以通过编程来实现自动定时短信发送,语音播报等。提供无限的想想空间。</p>

<ul>
<li>下载工具</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>you-get
</span><span class='line'>BaiduPCS-Go</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Linux</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://funs.ml/file/atilo</span></code></pre></td></tr></table></div></figure>


<ul>
<li>资源</li>
</ul>


<p>youtube termux</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try bk.tencent.com]]></title>
    <link href="http://winse.github.io/blog/2019/04/10/try-bk-dot-tencent-dot-com/"/>
    <updated>2019-04-10T22:43:14+08:00</updated>
    <id>http://winse.github.io/blog/2019/04/10/try-bk-dot-tencent-dot-com</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@docker82 ~]# rz
</span><span class='line'>rz waiting to receive.
</span><span class='line'>Starting zmodem transfer.  Press Ctrl+C to cancel.
</span><span class='line'>Transferring bkce_src-4.1.16.tgz...
</span><span class='line'>  100% 1397597 KB    10668 KB/sec    00:02:11       0 Errors  
</span><span class='line'>
</span><span class='line'>[root@docker82 ~]# mkdir /data
</span><span class='line'>[root@docker82 ~]# tar xf bkce_src-4.1.16.tgz  -C /data
</span><span class='line'>[root@docker82 ~]# rz
</span><span class='line'>rz waiting to receive.
</span><span class='line'>Starting zmodem transfer.  Press Ctrl+C to cancel.
</span><span class='line'>Transferring ssl_certificates.tar.gz...
</span><span class='line'>  100%      23 KB      23 KB/sec    00:00:01       0 Errors  
</span><span class='line'>
</span><span class='line'>[root@docker82 ~]# tar xf ssl_certificates.tar.gz -C /data/src/cert
</span><span class='line'>[root@docker82 ~]# cd /data/install/
</span><span class='line'>
</span><span class='line'>[root@docker82 install]# setenforce 0
</span><span class='line'>[root@docker82 install]# getenforce 
</span><span class='line'>Permissive
</span><span class='line'>[root@docker82 install]# vi /etc/selinux/config 
</span><span class='line'>
</span><span class='line'># This file controls the state of SELinux on the system.
</span><span class='line'># SELINUX= can take one of these three values:
</span><span class='line'>#     enforcing - SELinux security policy is enforced.
</span><span class='line'>#     permissive - SELinux prints warnings instead of enforcing.
</span><span class='line'>#     disabled - No SELinux policy is loaded.
</span><span class='line'>SELINUX=disabled
</span><span class='line'># SELINUXTYPE= can take one of three two values:
</span><span class='line'>#     targeted - Targeted processes are protected,
</span><span class='line'>#     minimum - Modification of targeted policy. Only selected processes are protected.
</span><span class='line'>#     mls - Multi Level Security protection.
</span><span class='line'>SELINUXTYPE=targeted
</span><span class='line'>
</span><span class='line'>[root@docker82 install]# reboot 
</span><span class='line'>
</span><span class='line'>[root@docker82 install]# yum -y install epel-release
</span><span class='line'>
</span><span class='line'>[root@docker82 install]# vi /etc/security/limits.conf 
</span><span class='line'>* hard nofile 102400
</span><span class='line'>
</span><span class='line'>[root@docker82 install]# ulimit -n 102400 
</span><span class='line'>
</span><span class='line'>ulimit -s unlimited
</span><span class='line'>
</span><span class='line'>[root@docker82 install]# service firewalld stop 
</span><span class='line'>[root@docker82 install]# service NetworkManager stop 
</span><span class='line'>
</span><span class='line'>[root@docker82 install]# ./install_minibk -y 
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try K8s]]></title>
    <link href="http://winse.github.io/blog/2019/04/10/try-k8s/"/>
    <updated>2019-04-10T15:26:32+08:00</updated>
    <id>http://winse.github.io/blog/2019/04/10/try-k8s</id>
    <content type="html"><![CDATA[<h2>1. 登录配置主机信息:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ hostnamectl --static set-hostname master-1
</span><span class='line'>
</span><span class='line'>$ cat /etc/hosts
</span><span class='line'>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
</span><span class='line'>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
</span><span class='line'>
</span><span class='line'>192.168.251.51 master-1
</span><span class='line'>192.168.251.50 node-1</span></code></pre></td></tr></table></div></figure>


<h2>2. 安装docker</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat | bash &lt;&lt;EOF
</span><span class='line'>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
</span><span class='line'>yum clean all
</span><span class='line'>yum makecache
</span><span class='line'>
</span><span class='line'>## docker version:(Version:           18.09.3)
</span><span class='line'># https://kubernetes.io/docs/setup/release/notes/#external-dependencies
</span><span class='line'># https://docs.docker.com/install/linux/docker-ce/centos/
</span><span class='line'>
</span><span class='line'>yum remove docker \
</span><span class='line'>  docker-client \
</span><span class='line'>  docker-client-latest \
</span><span class='line'>  docker-common \
</span><span class='line'>  docker-latest \
</span><span class='line'>  docker-latest-logrotate \
</span><span class='line'>  docker-logrotate \
</span><span class='line'>  docker-engine
</span><span class='line'>
</span><span class='line'>yum install -y yum-utils \
</span><span class='line'>  device-mapper-persistent-data \
</span><span class='line'>  lvm2
</span><span class='line'>
</span><span class='line'>yum-config-manager \
</span><span class='line'>    --add-repo \
</span><span class='line'>    https://download.docker.com/linux/centos/docker-ce.repo
</span><span class='line'>yum install -y docker-ce docker-ce-cli containerd.io
</span><span class='line'>
</span><span class='line'>yum list docker-ce --showduplicates | sort -r
</span><span class='line'>
</span><span class='line'>systemctl enable docker
</span><span class='line'>systemctl start docker
</span><span class='line'>
</span><span class='line'>systemctl disable firewalld
</span><span class='line'>service firewalld stop
</span><span class='line'>
</span><span class='line'>sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config 
</span><span class='line'>setenforce 0
</span><span class='line'>EOF
</span></code></pre></td></tr></table></div></figure>


<h2>3. 翻墙</h2>

<ul>
<li><a href="http://www.winseliu.com/blog/2017/07/30/kubeadm-install-kubenetes-on-centos7/">http://www.winseliu.com/blog/2017/07/30/kubeadm-install-kubenetes-on-centos7/</a></li>
<li><a href="https://serverfault.com/questions/739504/how-can-i-make-docker-compose-pull-images-using-a-socks5-proxy">https://serverfault.com/questions/739504/how-can-i-make-docker-compose-pull-images-using-a-socks5-proxy</a></li>
<li><a href="https://github.com/moby/moby/issues/23931#issuecomment-233035772">https://github.com/moby/moby/issues/23931#issuecomment-233035772</a> 2016后的版本可以用socks5了</li>
</ul>


<p>需要有在国外的主机！</p>

<ul>
<li><a href="https://tangx.in/2018/11/09/k8s-pull-image-from-gcr.io/#sniproxy">https://tangx.in/2018/11/09/k8s-pull-image-from-gcr.io/#sniproxy</a></li>
<li><a href="https://www.logcg.com/archives/984.html">https://www.logcg.com/archives/984.html</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -NC -D 1080 9.9.9.9 -p 88888
</span><span class='line'>
</span><span class='line'>curl --socks5-hostname 127.0.0.1:1080 www.google.com
</span><span class='line'>
</span><span class='line'>mkdir /etc/systemd/system/docker.service.d
</span><span class='line'>cat &gt; /etc/systemd/system/docker.service.d/socks5-proxy.conf &lt;&lt;EOF
</span><span class='line'>[Service]
</span><span class='line'>Environment="ALL_PROXY=socks5://127.0.0.1:1080" "NO_PROXY=localhost,127.0.0.1,10.0.0.0/8,192.168.0.0/16"
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>systemctl daemon-reload
</span><span class='line'>systemctl restart docker
</span><span class='line'>
</span><span class='line'># cache rpm
</span><span class='line'>sed -i 's/keepcache=0/keepcache=1/' /etc/yum.conf 
</span></code></pre></td></tr></table></div></figure>


<h2>4. 安装K8S</h2>

<p><a href="https://kubernetes.io/docs/setup/independent/install-kubeadm/">https://kubernetes.io/docs/setup/independent/install-kubeadm/</a></p>

<p>添加repo并增加代理配置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo
</span><span class='line'>[kubernetes]
</span><span class='line'>name=Kubernetes
</span><span class='line'>baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
</span><span class='line'>enabled=1
</span><span class='line'>gpgcheck=1
</span><span class='line'>repo_gpgcheck=1
</span><span class='line'>gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
</span><span class='line'>exclude=kube*
</span><span class='line'>proxy=socks5://127.0.0.1:1080
</span><span class='line'>EOF
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  ## yum.conf allows you to have per-repository settings as well as global ([main]) settings, 也可以定义在单个repo的配置里面！
</span><span class='line'>  ##sed '$a\\nproxy=socks5://127.0.0.1:1080' /etc/yum.conf 
</span><span class='line'>  ## proxy=_none_
</span><span class='line'>
</span><span class='line'>  
</span><span class='line'># Set SELinux in permissive mode (effectively disabling it)
</span><span class='line'>setenforce 0
</span><span class='line'>sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
</span><span class='line'>
</span><span class='line'>yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
</span><span class='line'>
</span><span class='line'>systemctl enable --now kubelet
</span></code></pre></td></tr></table></div></figure>


<h2>5. 配置K8S</h2>

<ul>
<li><a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/">https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/</a></li>
<li><a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#pod-network">https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#pod-network</a></li>
</ul>


<p>5.1 先加载镜像</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubeadm config images pull
</span><span class='line'>I0409 00:04:13.693615   18479 version.go:96] could not fetch a Kubernetes version from the internet: unable to get URL "https://dl.k8s.io/release/stable-1.txt": Get https://dl.k8s.io/release/stable-1.txt: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
</span><span class='line'>I0409 00:04:13.694196   18479 version.go:97] falling back to the local client version: v1.14.0
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-apiserver:v1.14.0
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-controller-manager:v1.14.0
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-scheduler:v1.14.0
</span><span class='line'>[config/images] Pulled k8s.gcr.io/kube-proxy:v1.14.0
</span><span class='line'>[config/images] Pulled k8s.gcr.io/pause:3.1
</span><span class='line'>[config/images] Pulled k8s.gcr.io/etcd:3.3.10
</span><span class='line'>[config/images] Pulled k8s.gcr.io/coredns:1.3.1</span></code></pre></td></tr></table></div></figure>


<p>5.2 初始化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubeadm init --pod-network-cidr=10.244.0.0/16</span></code></pre></td></tr></table></div></figure>


<p>会遇到的问题1： <a href="https://github.com/kubernetes/kubeadm/issues/610">https://github.com/kubernetes/kubeadm/issues/610</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ journalctl -xeu kubelet
</span><span class='line'>....
</span><span class='line'>Apr 09 00:35:33 docker81 kubelet[24062]: I0409 00:35:33.996517   24062 server.go:625] --cgroups-per-qos enabled, but --cgroup-root was not specified.  defaulting to /
</span><span class='line'>Apr 09 00:35:33 docker81 kubelet[24062]: F0409 00:35:33.996923   24062 server.go:265] failed to run Kubelet: Running with swap on is not supported, please disable swap! or set --fail-swap
</span><span class='line'>Apr 09 00:35:33 docker81 systemd[1]: kubelet.service: main process exited, code=exited, status=255/n/a
</span><span class='line'>Apr 09 00:35:34 docker81 systemd[1]: Unit kubelet.service entered failed state.
</span><span class='line'>Apr 09 00:35:34 docker81 systemd[1]: kubelet.service failed.</span></code></pre></td></tr></table></div></figure>


<p>处理：</p>

<ul>
<li><a href="https://zhuanlan.zhihu.com/p/31398416">https://zhuanlan.zhihu.com/p/31398416</a> (关闭swap)使用kubeadm创建一个K8s 1.10的Cluster</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ swapoff -a
</span><span class='line'>$ sed -i '/swap/s/^/#/' /etc/fstab
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  # 禁用命令
</span><span class='line'>  sudo swapoff -a
</span><span class='line'>  # 启用命令
</span><span class='line'>  sudo swapon -a
</span><span class='line'>  # 把根目录文件系统设为可读写
</span><span class='line'>  sudo mount -n -o remount,rw /
</span><span class='line'>  </span></code></pre></td></tr></table></div></figure>


<p>5.3 再次初始化</p>

<p>先清理</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ 
</span><span class='line'>kubeadm reset
</span><span class='line'>iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X
</span><span class='line'>
</span><span class='line'>$ kubeadm init --pod-network-cidr=10.244.0.0/16
</span><span class='line'>
</span><span class='line'>I0409 05:19:35.856967    3656 version.go:96] could not fetch a Kubernetes version from the internet: unable to get URL "https://dl.k8s.io/release/stable-1.txt": Get https://dl.k8s.io/release/stable-1.txt: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
</span><span class='line'>I0409 05:19:35.857127    3656 version.go:97] falling back to the local client version: v1.14.1
</span><span class='line'>[init] Using Kubernetes version: v1.14.1
</span><span class='line'>[preflight] Running pre-flight checks
</span><span class='line'>        [WARNING Firewalld]: firewalld is active, please ensure ports [6443 10250] are open or your cluster may not function correctly
</span><span class='line'>        [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/
</span><span class='line'>        [WARNING Hostname]: hostname "master-1" could not be reached
</span><span class='line'>        [WARNING Hostname]: hostname "master-1": lookup master-1 on 192.168.253.254:53: no such host
</span><span class='line'>[preflight] Pulling images required for setting up a Kubernetes cluster
</span><span class='line'>[preflight] This might take a minute or two, depending on the speed of your internet connection
</span><span class='line'>[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
</span><span class='line'>[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
</span><span class='line'>[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
</span><span class='line'>[kubelet-start] Activating the kubelet service
</span><span class='line'>[certs] Using certificateDir folder "/etc/kubernetes/pki"
</span><span class='line'>[certs] Generating "ca" certificate and key
</span><span class='line'>[certs] Generating "apiserver" certificate and key
</span><span class='line'>[certs] apiserver serving cert is signed for DNS names [master-1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.251.51]
</span><span class='line'>[certs] Generating "apiserver-kubelet-client" certificate and key
</span><span class='line'>[certs] Generating "front-proxy-ca" certificate and key
</span><span class='line'>[certs] Generating "front-proxy-client" certificate and key
</span><span class='line'>[certs] Generating "etcd/ca" certificate and key
</span><span class='line'>[certs] Generating "etcd/peer" certificate and key
</span><span class='line'>[certs] etcd/peer serving cert is signed for DNS names [master-1 localhost] and IPs [192.168.251.51 127.0.0.1 ::1]
</span><span class='line'>[certs] Generating "etcd/healthcheck-client" certificate and key
</span><span class='line'>[certs] Generating "apiserver-etcd-client" certificate and key
</span><span class='line'>[certs] Generating "etcd/server" certificate and key
</span><span class='line'>[certs] etcd/server serving cert is signed for DNS names [master-1 localhost] and IPs [192.168.251.51 127.0.0.1 ::1]
</span><span class='line'>[certs] Generating "sa" key and public key
</span><span class='line'>[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
</span><span class='line'>[kubeconfig] Writing "admin.conf" kubeconfig file
</span><span class='line'>[kubeconfig] Writing "kubelet.conf" kubeconfig file
</span><span class='line'>[kubeconfig] Writing "controller-manager.conf" kubeconfig file
</span><span class='line'>[kubeconfig] Writing "scheduler.conf" kubeconfig file
</span><span class='line'>[control-plane] Using manifest folder "/etc/kubernetes/manifests"
</span><span class='line'>[control-plane] Creating static Pod manifest for "kube-apiserver"
</span><span class='line'>[control-plane] Creating static Pod manifest for "kube-controller-manager"
</span><span class='line'>[control-plane] Creating static Pod manifest for "kube-scheduler"
</span><span class='line'>[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
</span><span class='line'>[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
</span><span class='line'>[apiclient] All control plane components are healthy after 13.506192 seconds
</span><span class='line'>[upload-config] storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
</span><span class='line'>[kubelet] Creating a ConfigMap "kubelet-config-1.14" in namespace kube-system with the configuration for the kubelets in the cluster
</span><span class='line'>[upload-certs] Skipping phase. Please see --experimental-upload-certs
</span><span class='line'>[mark-control-plane] Marking the node master-1 as control-plane by adding the label "node-role.kubernetes.io/master=''"
</span><span class='line'>[mark-control-plane] Marking the node master-1 as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]
</span><span class='line'>[bootstrap-token] Using token: zpf7je.xarawormfaeapib3
</span><span class='line'>[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
</span><span class='line'>[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
</span><span class='line'>[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
</span><span class='line'>[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
</span><span class='line'>[bootstrap-token] creating the "cluster-info" ConfigMap in the "kube-public" namespace
</span><span class='line'>[addons] Applied essential addon: CoreDNS
</span><span class='line'>[addons] Applied essential addon: kube-proxy
</span><span class='line'>
</span><span class='line'>Your Kubernetes control-plane has initialized successfully!
</span><span class='line'>
</span><span class='line'>To start using your cluster, you need to run the following as a regular user:
</span><span class='line'>
</span><span class='line'>  mkdir -p $HOME/.kube
</span><span class='line'>  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
</span><span class='line'>  sudo chown $(id -u):$(id -g) $HOME/.kube/config
</span><span class='line'>
</span><span class='line'>You should now deploy a pod network to the cluster.
</span><span class='line'>Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
</span><span class='line'>  https://kubernetes.io/docs/concepts/cluster-administration/addons/
</span><span class='line'>
</span><span class='line'>Then you can join any number of worker nodes by running the following on each as root:
</span><span class='line'>
</span><span class='line'>kubeadm join 192.168.251.51:6443 --token zpf7je.xarawormfaeapib3 \
</span><span class='line'>    --discovery-token-ca-cert-hash sha256:d7ff941542a03645209ad4149e1baa1c40ddad7e9c8296f82fe3bd2a91191f66 
</span></code></pre></td></tr></table></div></figure>


<p>执行添加kubeconfig配置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ 
</span><span class='line'>  mkdir -p $HOME/.kube
</span><span class='line'>  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
</span><span class='line'>  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span></code></pre></td></tr></table></div></figure>


<p>5.4 查看状态</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubectl cluster-info 
</span><span class='line'>
</span><span class='line'>Kubernetes master is running at https://192.168.251.51:6443
</span><span class='line'>KubeDNS is running at https://192.168.251.51:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
</span><span class='line'>
</span><span class='line'>To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>$ kubectl get pods -n kube-system 
</span><span class='line'>$ kubectl get pods --all-namespaces
</span><span class='line'>
</span><span class='line'>NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
</span><span class='line'>kube-system   coredns-fb8b8dccf-hcrgw            0/1     Pending   0          100s
</span><span class='line'>kube-system   coredns-fb8b8dccf-zct25            0/1     Pending   0          100s
</span><span class='line'>kube-system   etcd-master-1                      1/1     Running   0          57s
</span><span class='line'>kube-system   kube-apiserver-master-1            1/1     Running   0          47s
</span><span class='line'>kube-system   kube-controller-manager-master-1   1/1     Running   0          62s
</span><span class='line'>kube-system   kube-proxy-p962p                   1/1     Running   3          100s
</span><span class='line'>kube-system   kube-scheduler-master-1            1/1     Running   0          45s</span></code></pre></td></tr></table></div></figure>


<p>5.5 添加网卡，dns的pod启动需要网络组建的支撑</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf
</span><span class='line'>net.bridge.bridge-nf-call-ip6tables = 1
</span><span class='line'>net.bridge.bridge-nf-call-iptables = 1
</span><span class='line'>EOF
</span><span class='line'>$ sysctl --system
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml
</span><span class='line'>
</span><span class='line'>clusterrole.rbac.authorization.k8s.io/flannel created
</span><span class='line'>clusterrolebinding.rbac.authorization.k8s.io/flannel created
</span><span class='line'>serviceaccount/flannel created
</span><span class='line'>configmap/kube-flannel-cfg created
</span><span class='line'>daemonset.extensions/kube-flannel-ds-amd64 created
</span><span class='line'>daemonset.extensions/kube-flannel-ds-arm64 created
</span><span class='line'>daemonset.extensions/kube-flannel-ds-arm created
</span><span class='line'>daemonset.extensions/kube-flannel-ds-ppc64le created
</span><span class='line'>daemonset.extensions/kube-flannel-ds-s390x created</span></code></pre></td></tr></table></div></figure>


<p>查看状态，现在coredns也已经启动了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubectl get pods --all-namespaces
</span><span class='line'>
</span><span class='line'>NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
</span><span class='line'>kube-system   coredns-fb8b8dccf-hcrgw            1/1     Running   0          8m7s
</span><span class='line'>kube-system   coredns-fb8b8dccf-zct25            1/1     Running   0          8m7s
</span><span class='line'>kube-system   etcd-master-1                      1/1     Running   0          7m24s
</span><span class='line'>kube-system   kube-apiserver-master-1            1/1     Running   0          7m14s
</span><span class='line'>kube-system   kube-controller-manager-master-1   1/1     Running   0          7m29s
</span><span class='line'>kube-system   kube-flannel-ds-amd64-947zx        1/1     Running   0          2m32s
</span><span class='line'>kube-system   kube-proxy-p962p                   1/1     Running   3          8m7s
</span><span class='line'>kube-system   kube-scheduler-master-1            1/1     Running   0          7m12s</span></code></pre></td></tr></table></div></figure>


<h2>6. 安装Dashboard</h2>

<ul>
<li><a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#control-plane-node-isolation">https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#control-plane-node-isolation</a></li>
<li><a href="https://github.com/kubernetes/dashboard#kubernetes-dashboard">https://github.com/kubernetes/dashboard#kubernetes-dashboard</a></li>
<li><a href="https://github.com/kubernetes/dashboard/wiki/Installation#update">https://github.com/kubernetes/dashboard/wiki/Installation#update</a></li>
</ul>


<p>先解除master不能部署pod的限制，然后部署dashboard：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubectl taint nodes --all node-role.kubernetes.io/master-
</span><span class='line'>
</span><span class='line'>node/master-1 untainted
</span><span class='line'>
</span><span class='line'>$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
</span><span class='line'>
</span><span class='line'>secret/kubernetes-dashboard-certs created
</span><span class='line'>serviceaccount/kubernetes-dashboard created
</span><span class='line'>role.rbac.authorization.k8s.io/kubernetes-dashboard-minimal created
</span><span class='line'>rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard-minimal created
</span><span class='line'>deployment.apps/kubernetes-dashboard created
</span><span class='line'>service/kubernetes-dashboard created</span></code></pre></td></tr></table></div></figure>


<p>查看日志，故障定位</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl describe pod kubernetes-dashboard-5f7b999d65-lt2df -n kube-system</span></code></pre></td></tr></table></div></figure>


<p>查看状态</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubectl get pods --all-namespaces
</span><span class='line'>
</span><span class='line'>NAMESPACE     NAME                                    READY   STATUS    RESTARTS   AGE
</span><span class='line'>kube-system   coredns-fb8b8dccf-hcrgw                 1/1     Running   0          15m
</span><span class='line'>kube-system   coredns-fb8b8dccf-zct25                 1/1     Running   0          15m
</span><span class='line'>kube-system   etcd-master-1                           1/1     Running   0          14m
</span><span class='line'>kube-system   kube-apiserver-master-1                 1/1     Running   0          14m
</span><span class='line'>kube-system   kube-controller-manager-master-1        1/1     Running   0          15m
</span><span class='line'>kube-system   kube-flannel-ds-amd64-947zx             1/1     Running   0          10m
</span><span class='line'>kube-system   kube-proxy-p962p                        1/1     Running   3          15m
</span><span class='line'>kube-system   kube-scheduler-master-1                 1/1     Running   0          14m
</span><span class='line'>kube-system   kubernetes-dashboard-5f7b999d65-lt2df   1/1     Running   0          6m6s</span></code></pre></td></tr></table></div></figure>


<h2>7. 访问Dashboard</h2>

<ul>
<li><a href="https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above">https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard&#8212;1.7.X-and-above</a></li>
</ul>


<p>7.1 本地查看</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubectl proxy
</span><span class='line'>Starting to serve on 127.0.0.1:8001
</span><span class='line'>
</span><span class='line'>http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy
</span></code></pre></td></tr></table></div></figure>


<p>7.2 用户浏览器查看</p>

<p>1* 失败的方法：</p>

<p>disable-filter=true表示禁用请求过滤功能，否则我们的请求会被拒绝，并提示 <code>Forbidden (403) Unauthorized</code> 。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kubectl proxy --address=0.0.0.0 --disable-filter=true</span></code></pre></td></tr></table></div></figure>


<p>可以成功访问到登录界面，但是却无法登录，这是因为Dashboard使用HTTP连接只允许localhost和127.0.0.1进行访问（限制为必须在kubectl执行的机器上访问），而其它地址只允许使用HTTPS。</p>

<p>2* 应该可行方法：（没有试）</p>

<p>Kubernetes API Server新增了 <code>-–anonymous-auth</code> 选项设置为 false，允许匿名请求访问secure port；再使用 <code>--basic-auth-file</code> 配置使用用户名登录。</p>

<p><a href="https://www.okay686.cn/984.html">https://www.okay686.cn/984.html</a></p>

<p>3* 证书+Token的方法：</p>

<ul>
<li><ul>
<li><a href="https://www.cnblogs.com/RainingNight/p/deploying-k8s-dashboard-ui.html">https://www.cnblogs.com/RainingNight/p/deploying-k8s-dashboard-ui.html</a> kubernetes-dashboard(1.8.3)部署与踩坑</li>
</ul>
</li>
<li><a href="https://stackoverflow.com/questions/45094665/user-systemanonymous-cannot-get-path">https://stackoverflow.com/questions/45094665/user-systemanonymous-cannot-get-path</a></li>
<li><a href="https://stackoverflow.com/questions/46664104/how-to-sign-in-kubernetes-dashboard">https://stackoverflow.com/questions/46664104/how-to-sign-in-kubernetes-dashboard</a> How to sign in kubernetes dashboard?</li>
<li><a href="https://www.jianshu.com/p/6f42ac331d8a">https://www.jianshu.com/p/6f42ac331d8a</a> (了解Dashboard RABC ) 从零开始搭建Kubernetes集群（四、搭建K8S Dashboard）</li>
<li><a href="https://stackoverflow.com/a/49992698">https://stackoverflow.com/a/49992698</a> (命令行创建一个dashboard token)</li>
<li><p><a href="https://andrewpqc.github.io/2018/04/25/k8s-dashboard-auth/">https://andrewpqc.github.io/2018/04/25/k8s-dashboard-auth/</a>  Kubernetes-dashboard的身份认证</p></li>
<li><p><a href="https://unofficialism.info/posts/accessing-rbac-enabled-kubernetes-dashboard/">https://unofficialism.info/posts/accessing-rbac-enabled-kubernetes-dashboard/</a></p></li>
</ul>


<p>3-1 证书</p>

<ul>
<li><a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/implementation-details/#generate-the-necessary-certificates">https://kubernetes.io/docs/reference/setup-tools/kubeadm/implementation-details/#generate-the-necessary-certificates</a></li>
<li><a href="https://stackoverflow.com/questions/45094665/user-systemanonymous-cannot-get-path">https://stackoverflow.com/questions/45094665/user-systemanonymous-cannot-get-path</a> (Token)User “system:anonymous” cannot get path “/”</li>
<li><a href="https://jimmysong.io/kubernetes-handbook/guide/kubectl-user-authentication-authorization.html">https://jimmysong.io/kubernetes-handbook/guide/kubectl-user-authentication-authorization.html</a>(kubeconfig) 创建用户认证授权的kubeconfig文件</li>
</ul>


<p>官方文档介绍：</p>

<ul>
<li><a href="https://kubernetes.io/docs/concepts/cluster-administration/certificates/">https://kubernetes.io/docs/concepts/cluster-administration/certificates/</a></li>
<li><a href="https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster/">https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster/</a></li>
<li><a href="https://github.com/kubernetes/dashboard/wiki/Certificate-management">https://github.com/kubernetes/dashboard/wiki/Certificate-management</a></li>
<li><a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/#kubelet-authentication">https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-authentication-authorization/#kubelet-authentication</a></li>
</ul>


<p><strong>方法0：</strong></p>

<p>申请证书</p>

<p><strong>方法1：</strong></p>

<p>对于API Server来说，它是使用证书进行认证的，我们需要先创建一个证书。首先找到kubectl命令的配置文件，默认情况下为 <code>/etc/kubernetes/admin.conf</code> 已经复制到了 <code>~/.kube/config</code> 中。然后我们使用client-certificate-data和client-key-data生成一个p12文件，可使用下列命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grep 'client-certificate-data' ~/.kube/config | head -n 1 | awk '{print $2}' | base64 -d &gt;&gt; kubecfg.crt
</span><span class='line'>grep 'client-key-data' ~/.kube/config | head -n 1 | awk '{print $2}' | base64 -d &gt;&gt; kubecfg.key
</span><span class='line'>openssl pkcs12 -export -clcerts -inkey kubecfg.key -in kubecfg.crt -out kubecfg.p12 -name "kubernetes-client"</span></code></pre></td></tr></table></div></figure>


<p>最后导入上面生成的p12文件，重新打开浏览器。</p>

<p><strong>方法偷懒2：</strong></p>

<p>What&rsquo;s causing: forbidden: User &ldquo;system:anonymous&rdquo; in some Cloud Providers
<a href="https://github.com/kubernetes-incubator/apiserver-builder-alpha/issues/225">https://github.com/kubernetes-incubator/apiserver-builder-alpha/issues/225</a></p>

<p>After reading this: <a href="https://kubernetes.io/docs/admin/authentication/#anonymous-requests">https://kubernetes.io/docs/admin/authentication/#anonymous-requests</a> then I tried this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl create clusterrolebinding cluster-system-anonymous --clusterrole=cluster-admin --user=system:anonymous</span></code></pre></td></tr></table></div></figure>


<p>and it solved the problem.</p>

<p>3-2 权限</p>

<ul>
<li><a href="https://github.com/kubernetes/dashboard/wiki/Access-control#admin-privileges">https://github.com/kubernetes/dashboard/wiki/Access-control#admin-privileges</a></li>
<li><a href="https://github.com/kubernetes/dashboard/wiki/Access-control#authentication">https://github.com/kubernetes/dashboard/wiki/Access-control#authentication</a></li>
<li><a href="https://github.com/kubernetes/dashboard/wiki/Access-control#getting-token-with-kubectl">https://github.com/kubernetes/dashboard/wiki/Access-control#getting-token-with-kubectl</a></li>
</ul>


<p>方法1：创建新的用户</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@docker81 ~]# vi dashboard-admin-user.yml
</span><span class='line'>apiVersion: v1
</span><span class='line'>kind: ServiceAccount
</span><span class='line'>metadata:
</span><span class='line'>  name: admin-user
</span><span class='line'>  namespace: kube-system
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'># ------------ role binding ---------------- #
</span><span class='line'>apiVersion: rbac.authorization.k8s.io/v1beta1
</span><span class='line'>kind: ClusterRoleBinding
</span><span class='line'>metadata:
</span><span class='line'>  name: admin-user
</span><span class='line'>roleRef:
</span><span class='line'>  apiGroup: rbac.authorization.k8s.io
</span><span class='line'>  kind: ClusterRole
</span><span class='line'>  name: cluster-admin
</span><span class='line'>subjects:
</span><span class='line'>- kind: ServiceAccount
</span><span class='line'>  name: admin-user
</span><span class='line'>  namespace: kube-system
</span><span class='line'>
</span><span class='line'>[root@docker81 ~]# kubectl create -f dashboard-admin-user.yml
</span><span class='line'>serviceaccount/admin-user created
</span><span class='line'>clusterrolebinding.rbac.authorization.k8s.io/admin-user created
</span><span class='line'>
</span><span class='line'>[root@docker81 ~]# kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')
</span><span class='line'>Name:         admin-user-token-28dwk
</span><span class='line'>Namespace:    kube-system
</span><span class='line'>Labels:       &lt;none&gt;
</span><span class='line'>Annotations:  kubernetes.io/service-account.name: admin-user
</span><span class='line'>              kubernetes.io/service-account.uid: c23340a7-5a70-11e9-b2ca-005056887940
</span><span class='line'>
</span><span class='line'>Type:  kubernetes.io/service-account-token
</span><span class='line'>
</span><span class='line'>Data
</span><span class='line'>====
</span><span class='line'>ca.crt:     1025 bytes
</span><span class='line'>namespace:  11 bytes
</span><span class='line'>token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLTI4ZHdrIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJjMjMzNDBhNy01YTcwLTExZTktYjJjYS0wMDUwNTY4ODc5NDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.uaG_faYzLhiadXfz4XuQ_-X9tdl5exKQjbCK7OJqBFMCYve532O-8jH_zg5E2rgFUQycQUhH_siS_GCi0MoE8mqc-WJwIfaGB6QnLYOFRjvWWNhO_16FH56YaEZxGY2p62OPt4d1O9NK4KZLEcoZNbYYuol_9kBfAj9Imf3ii58TNGZ0WiRigXjLOsJK5P2IPyE4c_rqunsrb_sO1z56jgRTL9qnu2zsby8obJxNZefBnsTgakXnu-P8PwXg0PekLBWQNNr-G7TeiKCpfCGCjHM6gmEKdTjiernFbD1GxOG588pmZfWsFtjNNWuNAlfMe1bXpy2m981taQUTQa3kWQ
</span></code></pre></td></tr></table></div></figure>


<p>访问HTTPS地址：</p>

<p><a href="https://192.168.251.51:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login">https://192.168.251.51:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login</a></p>

<p>方法2：源头下手</p>

<p>kubernetes-dashboard.yaml的介绍，现在就理解了为什么其角色的名称为kubernetes-dashboard-minimal。一句话，这个Role的权限不够！
因此，我们可以更改RoleBinding修改为ClusterRoleBinding，并且修改roleRef中的kind和name，使用cluster-admin这个非常牛逼的CusterRole（超级用户权限，其拥有访问kube-apiserver的所有权限）。如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apiVersion: rbac.authorization.k8s.io/v1
</span><span class='line'>kind: ClusterRoleBinding
</span><span class='line'>metadata:
</span><span class='line'>  name: kubernetes-dashboard-minimal
</span><span class='line'>  namespace: kube-system
</span><span class='line'>roleRef:
</span><span class='line'>  apiGroup: rbac.authorization.k8s.io
</span><span class='line'>  kind: ClusterRole
</span><span class='line'>  name: cluster-admin
</span><span class='line'>subjects:
</span><span class='line'>- kind: ServiceAccount
</span><span class='line'>  name: kubernetes-dashboard
</span><span class='line'>  namespace: kube-system</span></code></pre></td></tr></table></div></figure>


<p>修改后，重新创建kubernetes-dashboard.yaml，Dashboard就可以拥有访问整个K8S 集群API的权限。</p>

<p>3-3 忽略登录</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl edit deployment/kubernetes-dashboard --namespace=kube-system
</span><span class='line'>
</span><span class='line'>      - args:
</span><span class='line'>        - --auto-generate-certificates
</span><span class='line'>        - --enable-skip-login
</span></code></pre></td></tr></table></div></figure>


<h2>8. 部署应用</h2>

<ul>
<li><a href="https://blog.51cto.com/12462495/2356619?source=dra">https://blog.51cto.com/12462495/2356619?source=dra</a></li>
<li><a href="https://kubernetes.io/docs/tasks/run-application/">https://kubernetes.io/docs/tasks/run-application/</a></li>
<li><a href="https://kubernetes.io/zh/docs/tasks/run-application/run-stateless-application-deployment/">https://kubernetes.io/zh/docs/tasks/run-application/run-stateless-application-deployment/</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@s1 ~]# kubectl create -f https://k8s.io/docs/tasks/run-application/deployment.yaml
</span><span class='line'>deployment.apps/nginx-deployment created
</span><span class='line'>
</span><span class='line'>kubectl describe deployment nginx-deployment
</span><span class='line'>kubectl get pods -l app=nginx
</span><span class='line'>
</span><span class='line'>[root@s1 ~]# kubectl describe pod nginx-deployment-76bf4969df-bmslp 
</span><span class='line'>
</span><span class='line'>kubectl apply -f https://k8s.io/examples/application/deployment-update.yaml
</span><span class='line'>kubectl apply -f https://k8s.io/docs/tutorials/stateless-application/deployment-update.yaml
</span><span class='line'>kubectl apply -f https://k8s.io/examples/application/deployment-scale.yaml
</span><span class='line'>
</span><span class='line'>kubectl describe deployment nginx-deployment
</span><span class='line'>kubectl get pods -l app=nginx
</span><span class='line'>kubectl describe pod &lt;pod-name&gt;
</span><span class='line'>
</span><span class='line'>[root@s1 ~]# curl 172.17.0.4
</span><span class='line'>
</span><span class='line'>kubectl delete deployment nginx-deployment
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://kubernetes.io/docs/tasks/access-kubernetes-api/http-proxy-access-api/">https://kubernetes.io/docs/tasks/access-kubernetes-api/http-proxy-access-api/</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@docker81 ~]# curl localhost:8001/api
</span><span class='line'>{
</span><span class='line'>  "kind": "APIVersions",
</span><span class='line'>  "versions": [
</span><span class='line'>    "v1"
</span><span class='line'>  ],
</span><span class='line'>  "serverAddressByClientCIDRs": [
</span><span class='line'>    {
</span><span class='line'>      "clientCIDR": "0.0.0.0/0",
</span><span class='line'>      "serverAddress": "192.168.193.81:6443"
</span><span class='line'>    }
</span><span class='line'>  ]
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>[root@docker81 ~]# curl localhost:8001/api/v1/namespaces/default/pods
</span><span class='line'>{
</span><span class='line'>  "kind": "PodList",
</span><span class='line'>  "apiVersion": "v1",
</span><span class='line'>  "metadata": {
</span><span class='line'>    "selfLink": "/api/v1/namespaces/default/pods",
</span><span class='line'>    "resourceVersion": "25607"
</span><span class='line'>  },
</span><span class='line'>  "items": []
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<h2>9. 一些命令：</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl cluster-info
</span><span class='line'>
</span><span class='line'>kubectl get nodes --all-namespaces -o wide
</span><span class='line'>
</span><span class='line'>kubectl get pods –namespace=kube-system
</span><span class='line'>kubectl get pod --all-namespaces=true
</span><span class='line'>
</span><span class='line'>kubectl describe pods
</span><span class='line'>kubectl describe pod coredns-7748f7f6df-7p58x --namespace=kube-system
</span><span class='line'>
</span><span class='line'>kubectl get services kube-dns --namespace=kube-system
</span><span class='line'>
</span><span class='line'>kubectl logs -n cattle-system cattle-node-agent-w5rj4
</span><span class='line'>
</span><span class='line'>kubectl -n kube-system get secret
</span><span class='line'>kubectl -n kube-system describe secret kubernetes-dashboard-token-zlfj7
</span><span class='line'>kubectl -n kube-system get secret kubernetes-dashboard-token-zlfj7 -o yaml
</span><span class='line'>
</span><span class='line'>kubectl -n kube-system describe $(kubectl -n kube-system get secret -n kube-system -o name | grep namespace) | grep token
</span><span class='line'>
</span><span class='line'>kubectl -n kube-system get service kubernetes-dashboard
</span><span class='line'>kubectl -n kube-system get svc kubernetes-dashboard
</span><span class='line'>kubectl -n kube-system get secret admin-token-nwphb -o jsonpath={.data.token}|base64 -d
</span><span class='line'>kubectl get secret $(kubectl get serviceaccount my-admin-user -n kube-system -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" -n kube-system | base64 --decode
</span><span class='line'>
</span><span class='line'>kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
</span><span class='line'>kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/alternative/kubernetes-dashboard.yaml 
</span><span class='line'>
</span><span class='line'>kubectl -n kube-system edit service kubernetes-dashboard
</span><span class='line'>
</span><span class='line'>kubectl -n kube-system delete $(kubectl -n kube-system get pod -o name | grep dashboard)
</span><span class='line'>
</span><span class='line'>kubectl delete pod NAME --grace-period=0 --force
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>DNS解析：进入容器执行命令</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@k8s-master app]# kubectl exec -it coredns-78fcdf6894-244mp /bin/sh  -n kube-system                         
</span><span class='line'>/ # nslookup kubernetes.default 127.0.0.1</span></code></pre></td></tr></table></div></figure>


<ul>
<li>K8S二进制部署node节点 <a href="https://blog.51cto.com/ylw6006/2104692">https://blog.51cto.com/ylw6006/2104692</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译JCEF - Win64]]></title>
    <link href="http://winse.github.io/blog/2018/10/20/jcef-build-on-win64/"/>
    <updated>2018-10-20T10:47:59+08:00</updated>
    <id>http://winse.github.io/blog/2018/10/20/jcef-build-on-win64</id>
    <content type="html"><![CDATA[<h2>参考</h2>

<ul>
<li><a href="https://bitbucket.org/chromiumembedded/java-cef/wiki/BranchesAndBuilding">https://bitbucket.org/chromiumembedded/java-cef/wiki/BranchesAndBuilding</a></li>
<li><a href="https://bitbucket.org/Johness/java-cef/wiki/%E7%BC%96%E8%AF%91V49%E4%B8%BAWindows%E5%B9%B3%E5%8F%B0">编译V49为Windows平台</a> gif图片，过程很清晰。就是有点旧！</li>
<li><a href="https://my.oschina.net/penngo/blog/1538071">https://my.oschina.net/penngo/blog/1538071</a> 先下载 chromium-clang-format，最后创建项目的目录结构和添加DLL库路径</li>
<li><a href="http://wzdark.github.io/personalInfo/2015/12/02/jcef.html">http://wzdark.github.io/personalInfo/2015/12/02/jcef.html</a></li>
<li><a href="https://medium.com/@daniel.bischoff/integrating-chromium-as-a-web-renderer-in-a-java-application-with-jcef-72f67a677db6">https://medium.com/@daniel.bischoff/integrating-chromium-as-a-web-renderer-in-a-java-application-with-jcef-72f67a677db6</a> 创建项目，以及一些参数</li>
</ul>


<h2>简单过程摘录</h2>

<p>注意点：</p>

<ol>
<li>依赖：git/python2.7/java8/cmake3/visual studio 2017（这是我编译的环境，具体的版本要求请查看官网文档）</li>
<li>需要用git下载源码</li>
<li>先把 <a href="https://storage.googleapis.com/chromium-clang-format/6ddedd571c56b8c184f30a3c1fc36984e8c10ccd">chromium-clang-format</a> 下载放到 tools 目录下面</li>
</ol>


<p>步骤：</p>

<ol>
<li>cmake-3.12.3-win64-x64.zip，配置环境变量PATH</li>
<li>安装版python-2.7.15.amd64.msi、同时配置把python.exe加入到PATH</li>
<li>把 PortableGit 加入PATH： <code>set PATH=D:\PortableGit\bin;%PATH%</code></li>
<li>使用 VS 的命令行运行</li>
<li>命令：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>F:\wv&gt;git clone https://bitbucket.org/chromiumembedded/java-cef.git src
</span><span class='line'>
</span><span class='line'>F:\wv\src&gt;mkdir jcef_build && cd jcef_build
</span><span class='line'>
</span><span class='line'>F:\wv\src\jcef_build&gt;cmake -G "Visual Studio 14 Win64" ..
</span><span class='line'>用vs编译本地代码：
</span><span class='line'># Open jcef.sln in Visual Studio
</span><span class='line'># - Select Build &gt; Configuration Manager and change the "Active solution configuration" to "Release"
</span><span class='line'># - Select Build &gt; Build Solution.
</span><span class='line'>
</span><span class='line'>cd ..\tools
</span><span class='line'>compile.bat win64
</span><span class='line'>
</span><span class='line'>run.bat win64 Release detailed
</span><span class='line'>
</span><span class='line'>F:\wv\src\tools&gt;make_distrib.bat win64
</span></code></pre></td></tr></table></div></figure>


<p>生成的运行包放在 binary_distrib 目录下。查看下 <code>binary_distrib/win64/run.bat</code> 了解运行配置，同时参考上面文章中提到的项目的创建方法。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java -cp "./bin;./bin/*" -Djava.library.path=./bin/lib/win64 tests.detailed.MainFrame</span></code></pre></td></tr></table></div></figure>


<p>过程截图：</p>

<p><img src="http://winse.github.io/images/blogs/jcef/vs-cmd.png" alt="" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>**********************************************************************
</span><span class='line'>** Visual Studio 2017 Developer Command Prompt v15.7.4
</span><span class='line'>** Copyright (c) 2017 Microsoft Corporation
</span><span class='line'>**********************************************************************
</span><span class='line'>[vcvarsall.bat] Environment initialized for: 'x64'
</span><span class='line'>
</span><span class='line'>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community&gt;F:
</span><span class='line'>
</span><span class='line'>F:\&gt;cd wv
</span><span class='line'>F:\wv&gt;set PATH=D:\PortableGit\bin;%PATH%
</span><span class='line'>F:\wv&gt;git clone https://bitbucket.org/chromiumembedded/java-cef.git src
</span><span class='line'>
</span><span class='line'>F:\wv\src&gt;mkdir jcef_build && cd jcef_build
</span><span class='line'>
</span><span class='line'>F:\wv\src\jcef_build&gt;cmake -G "Visual Studio 14 Win64" ..
</span><span class='line'>-- Selecting Windows SDK version  to target Windows 10.0.16299.
</span><span class='line'>-- The C compiler identification is MSVC 19.0.24234.1
</span><span class='line'>-- The CXX compiler identification is MSVC 19.0.24234.1
</span><span class='line'>-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe
</span><span class='line'>-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works
</span><span class='line'>-- Detecting C compiler ABI info
</span><span class='line'>-- Detecting C compiler ABI info - done
</span><span class='line'>-- Detecting C compile features
</span><span class='line'>-- Detecting C compile features - done
</span><span class='line'>-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe
</span><span class='line'>-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works
</span><span class='line'>-- Detecting CXX compiler ABI info
</span><span class='line'>-- Detecting CXX compiler ABI info - done
</span><span class='line'>-- Detecting CXX compile features
</span><span class='line'>-- Detecting CXX compile features - done
</span><span class='line'>-- Downloading F:/wv/src/third_party/cef/cef_binary_3.3497.1831.g461fa1f_windows64.tar.bz2.sha1...
</span><span class='line'>-- Downloading F:/wv/src/third_party/cef/cef_binary_3.3497.1831.g461fa1f_windows64.tar.bz2...
</span><span class='line'>-- [download 0% complete]
</span><span class='line'>-- [download 1% complete]
</span><span class='line'>。。。
</span><span class='line'>-- [download 98% complete]
</span><span class='line'>-- [download 99% complete]
</span><span class='line'>-- [download 100% complete]
</span><span class='line'>-- Extracting F:/wv/src/third_party/cef/cef_binary_3.3497.1831.g461fa1f_windows64.tar.bz2...
</span><span class='line'>CMake Warning (dev) at CMakeLists.txt:153 (find_package):
</span><span class='line'>  Policy CMP0074 is not set: find_package uses &lt;PackageName&gt;_ROOT variables.
</span><span class='line'>  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
</span><span class='line'>  command to set the policy and suppress this warning.
</span><span class='line'>
</span><span class='line'>  CMake variable CEF_ROOT is set to:
</span><span class='line'>
</span><span class='line'>    F:/wv/src/third_party/cef/cef_binary_3.3497.1831.g461fa1f_windows64
</span><span class='line'>
</span><span class='line'>  For compatibility, CMake is ignoring the variable.
</span><span class='line'>This warning is for project developers.  Use -Wno-dev to suppress it.
</span><span class='line'>
</span><span class='line'>-- Found PythonInterp: C:/Python27/python.exe (found version "2.7.15")
</span><span class='line'>-- Found JNI: C:/Java/jdk/lib/jawt.lib (Required is at least version "1.7")
</span><span class='line'>-- Generating native/jcef_version.h file...
</span><span class='line'>File native/jcef_version.h updated.
</span><span class='line'>-- Downloading clang-format from Google Storage...
</span><span class='line'>0&gt; Failed to fetch file gs://chromium-clang-format/6ddedd571c56b8c184f30a3c1fc36984e8c10ccd for tools/buildtools/win/clang-format.exe, skipping. [Err: F:\wv\src\tools\buildtools\external_bin\gsutil\gsutil_4.15\gsutil\third_party\boto\boto\pyami\config.py:71: UserWarning: Unable to load AWS_CREDENTIAL_FILE ()
</span><span class='line'>  warnings.warn('Unable to load AWS_CREDENTIAL_FILE (%s)' % full_path)
</span><span class='line'>Failure: Unable to find the server at www.googleapis.com.
</span><span class='line'>]
</span><span class='line'>Downloading 1 files took 3153.963000 second(s)
</span><span class='line'>Failed to fetch file gs://chromium-clang-format/6ddedd571c56b8c184f30a3c1fc36984e8c10ccd for tools/buildtools/win/clang-format.exe. [Err: F:\wv\src\tools\buildtools\external_bin\gsutil\gsutil_4.15\gsutil\third_party\boto\boto\pyami\config.py:71: UserWarning: Unable to load AWS_CREDENTIAL_FILE ()
</span><span class='line'>  warnings.warn('Unable to load AWS_CREDENTIAL_FILE (%s)' % full_path)
</span><span class='line'>Failure: Unable to find the server at www.googleapis.com.
</span><span class='line'>]
</span><span class='line'>CMake Error at CMakeLists.txt:265 (message):
</span><span class='line'>  Execution failed with unexpected result: 1
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-- Configuring incomplete, errors occurred!
</span><span class='line'>See also "F:/wv/src/jcef_build/CMakeFiles/CMakeOutput.log".
</span><span class='line'>
</span><span class='line'>&lt;&lt;== https://my.oschina.net/penngo/blog/1538071
</span><span class='line'>&lt;&lt;&lt;&lt;----https://storage.googleapis.com/chromium-clang-format/6ddedd571c56b8c184f30a3c1fc36984e8c10ccd
</span><span class='line'>~~~~~~
</span><span class='line'>
</span><span class='line'>F:\wv\src\jcef_build&gt;cmake -G "Visual Studio 14 Win64" ..
</span><span class='line'>-- Selecting Windows SDK version  to target Windows 10.0.16299.
</span><span class='line'>CMake Warning (dev) at CMakeLists.txt:153 (find_package):
</span><span class='line'>  Policy CMP0074 is not set: find_package uses &lt;PackageName&gt;_ROOT variables.
</span><span class='line'>  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
</span><span class='line'>  command to set the policy and suppress this warning.
</span><span class='line'>
</span><span class='line'>  CMake variable CEF_ROOT is set to:
</span><span class='line'>
</span><span class='line'>    F:/wv/src/third_party/cef/cef_binary_3.3497.1831.g461fa1f_windows64
</span><span class='line'>
</span><span class='line'>  For compatibility, CMake is ignoring the variable.
</span><span class='line'>This warning is for project developers.  Use -Wno-dev to suppress it.
</span><span class='line'>
</span><span class='line'>-- Generating native/jcef_version.h file...
</span><span class='line'>File native/jcef_version.h is already up to date.
</span><span class='line'>-- Downloading clang-format from Google Storage...
</span><span class='line'>0&gt; File tools/buildtools/win/clang-format.exe exists and SHA1 matches. Skipping.
</span><span class='line'>Success!
</span><span class='line'>Downloading 1 files took 0.006000 second(s)
</span><span class='line'>-- *** CEF CONFIGURATION SETTINGS ***
</span><span class='line'>-- Generator:                    Visual Studio 14 2015 Win64
</span><span class='line'>-- Platform:                     Windows
</span><span class='line'>-- Project architecture:         x86_64
</span><span class='line'>-- Binary distribution root:     F:/wv/src/third_party/cef/cef_binary_3.3497.1831.g461fa1f_windows64
</span><span class='line'>-- CEF Windows sandbox:          ON
</span><span class='line'>-- Visual Studio ATL support:    ON
</span><span class='line'>-- Standard libraries:           comctl32.lib;rpcrt4.lib;shlwapi.lib;ws2_32.lib;dbghelp.lib;psapi.lib;version.lib;winmm.lib
</span><span class='line'>-- Compile defines:              __STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;WIN32;_WIN32;_WINDOWS;UNICODE;_UNICODE;WINVER=0x0601;_WIN32_WINNT=0x601;NOMINMAX;WIN32_LEAN_AND_MEAN;_HAS_EXCEPTIONS=0;PSAPI_VERSION=1;CEF_USE_SANDBOX;CEF_USE_ATL
</span><span class='line'>-- Compile defines (Debug):
</span><span class='line'>-- Compile defines (Release):    NDEBUG;_NDEBUG
</span><span class='line'>-- C compile flags:              /MP;/Gy;/GR-;/W4;/WX;/wd4100;/wd4127;/wd4244;/wd4481;/wd4512;/wd4701;/wd4702;/wd4996;/Zi
</span><span class='line'>-- C compile flags (Debug):      /MTd;/RTC1;/Od
</span><span class='line'>-- C compile flags (Release):    /MT;/O2;/Ob2;/GF
</span><span class='line'>-- C++ compile flags:            /MP;/Gy;/GR-;/W4;/WX;/wd4100;/wd4127;/wd4244;/wd4481;/wd4512;/wd4701;/wd4702;/wd4996;/Zi
</span><span class='line'>-- C++ compile flags (Debug):    /MTd;/RTC1;/Od
</span><span class='line'>-- C++ compile flags (Release):  /MT;/O2;/Ob2;/GF
</span><span class='line'>-- Exe link flags:                /MANIFEST:NO;/LARGEADDRESSAWARE
</span><span class='line'>-- Exe link flags (Debug):       /DEBUG
</span><span class='line'>-- Exe link flags (Release):
</span><span class='line'>-- Shared link flags:
</span><span class='line'>-- Shared link flags (Debug):    /DEBUG
</span><span class='line'>-- Shared link flags (Release):
</span><span class='line'>-- CEF Binary files:             chrome_elf.dll;d3dcompiler_43.dll;d3dcompiler_47.dll;libcef.dll;libEGL.dll;libGLESv2.dll;natives_blob.bin;snapshot_blob.bin;v8_context_snapshot.bin;swiftshader
</span><span class='line'>-- CEF Resource files:           cef.pak;cef_100_percent.pak;cef_200_percent.pak;cef_extensions.pak;devtools_resources.pak;icudtl.dat;locales
</span><span class='line'>-- *** JCEF CONFIGURATION SETTINGS ***
</span><span class='line'>-- Python executable:            C:/Python27/python.exe
</span><span class='line'>-- Java directory:               C:/Java/jdk
</span><span class='line'>-- JNI libraries:                C:/Java/jdk/lib/jawt.lib;C:/Java/jdk/lib/jvm.lib
</span><span class='line'>-- JNI include directories:      C:/Java/jdk/include;C:/Java/jdk/include/win32;C:/Java/jdk/include
</span><span class='line'>-- Configuring done
</span><span class='line'>-- Generating done
</span><span class='line'>-- Build files have been written to: F:/wv/src/jcef_build
</span><span class='line'>
</span><span class='line'>F:\wv\src\jcef_build&gt;
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://winse.github.io/images/blogs/jcef/vs2017.png" alt="" /></p>

<p><img src="http://winse.github.io/images/blogs/jcef/compile.png" alt="" /></p>

<p><img src="http://winse.github.io/images/blogs/jcef/run.png" alt="" /></p>

<p><img src="http://winse.github.io/images/blogs/jcef/run-windows.png" alt="" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>F:\wv\src\tools&gt;make_distrib.bat win64
</span><span class='line'>正在加载程序包org.cef.browser的源文件...
</span><span class='line'>正在加载程序包org.cef.browser.mac的源文件...
</span><span class='line'>正在加载程序包org.cef.callback的源文件...
</span><span class='line'>正在加载程序包org.cef的源文件...
</span><span class='line'>正在加载程序包org.cef.handler的源文件...
</span><span class='line'>正在加载程序包org.cef.misc的源文件...
</span><span class='line'>正在加载程序包org.cef.network的源文件...
</span><span class='line'>正在构造 Javadoc 信息...
</span><span class='line'>.\org\cef\browser\CefRenderer.java:11: 错误: 程序包com.jogamp.opengl不存在
</span><span class='line'>import com.jogamp.opengl.GL2;
</span><span class='line'>                        ^
</span><span class='line'>.\org\cef\browser\CefRenderer.java:15: 错误: 找不到符号
</span><span class='line'>    private GL2 initialized_context_ = null;
</span><span class='line'>            ^
</span><span class='line'>  符号:   类 GL2
</span><span class='line'>  位置: 类 CefRenderer
</span><span class='line'>.\org\cef\browser\CefRenderer.java:34: 错误: 找不到符号
</span><span class='line'>    protected void initialize(GL2 gl2) {
</span><span class='line'>                              ^
</span><span class='line'>  符号:   类 GL2
</span><span class='line'>  位置: 类 CefRenderer
</span><span class='line'>.\org\cef\browser\CefRenderer.java:64: 错误: 找不到符号
</span><span class='line'>    protected void cleanup(GL2 gl2) {
</span><span class='line'>                           ^
</span><span class='line'>  符号:   类 GL2
</span><span class='line'>  位置: 类 CefRenderer
</span><span class='line'>.\org\cef\browser\CefRenderer.java:69: 错误: 找不到符号
</span><span class='line'>    protected void render(GL2 gl2) {
</span><span class='line'>                          ^
</span><span class='line'>  符号:   类 GL2
</span><span class='line'>  位置: 类 CefRenderer
</span><span class='line'>.\org\cef\browser\CefRenderer.java:161: 错误: 找不到符号
</span><span class='line'>    protected void onPaint(GL2 gl2, boolean popup, Rectangle[] dirtyRects, ByteBuffer buffer,
</span><span class='line'>                           ^
</span><span class='line'>  符号:   类 GL2
</span><span class='line'>  位置: 类 CefRenderer
</span><span class='line'>.\org\cef\browser\CefBrowserOsr.java:23: 错误: 程序包com.jogamp.nativewindow不存在
</span><span class='line'>import com.jogamp.nativewindow.NativeSurface;
</span><span class='line'>                              ^
</span><span class='line'>.\org\cef\browser\CefBrowserOsr.java:24: 错误: 程序包com.jogamp.opengl.awt不存在
</span><span class='line'>import com.jogamp.opengl.awt.GLCanvas;
</span><span class='line'>                            ^
</span><span class='line'>.\org\cef\browser\CefBrowserOsr.java:25: 错误: 程序包com.jogamp.opengl不存在
</span><span class='line'>import com.jogamp.opengl.GLAutoDrawable;
</span><span class='line'>                        ^
</span><span class='line'>.\org\cef\browser\CefBrowserOsr.java:26: 错误: 程序包com.jogamp.opengl不存在
</span><span class='line'>import com.jogamp.opengl.GLEventListener;
</span><span class='line'>                        ^
</span><span class='line'>.\org\cef\browser\CefBrowserOsr.java:27: 错误: 程序包com.jogamp.opengl不存在
</span><span class='line'>import com.jogamp.opengl.GLProfile;
</span><span class='line'>                        ^
</span><span class='line'>.\org\cef\browser\CefBrowserOsr.java:28: 错误: 程序包com.jogamp.opengl不存在
</span><span class='line'>import com.jogamp.opengl.GLCapabilities;
</span><span class='line'>                        ^
</span><span class='line'>.\org\cef\browser\CefBrowserOsr.java:44: 错误: 找不到符号
</span><span class='line'>    private GLCanvas canvas_;
</span><span class='line'>            ^
</span><span class='line'>  符号:   类 GLCanvas
</span><span class='line'>  位置: 类 CefBrowserOsr
</span><span class='line'>.\org\cef\browser\mac\CefBrowserWindowMac.java:9: 错误: 程序包sun.lwawt不存在
</span><span class='line'>import sun.lwawt.LWComponentPeer;
</span><span class='line'>                ^
</span><span class='line'>.\org\cef\browser\mac\CefBrowserWindowMac.java:10: 错误: 程序包sun.lwawt不存在
</span><span class='line'>import sun.lwawt.PlatformWindow;
</span><span class='line'>                ^
</span><span class='line'>.\org\cef\browser\mac\CefBrowserWindowMac.java:11: 错误: 程序包sun.lwawt.macosx不存在
</span><span class='line'>import sun.lwawt.macosx.CFRetainedResource;
</span><span class='line'>                       ^
</span><span class='line'>.\org\cef\browser\mac\CefBrowserWindowMac.java:12: 错误: 程序包sun.lwawt.macosx不存在
</span><span class='line'>import sun.lwawt.macosx.CPlatformWindow;
</span><span class='line'>                       ^
</span><span class='line'>标准 Doclet 版本 1.8.0_181
</span><span class='line'>正在构建所有程序包和类的树...
</span><span class='line'>正在生成..\out\docs\org\cef\browser\CefBrowser.html...
</span><span class='line'>正在生成..\out\docs\org\cef\browser\CefBrowserFactory.html...
</span><span class='line'>正在生成..\out\docs\org\cef\browser\CefBrowserWindow.html...
</span><span class='line'>正在生成..\out\docs\org\cef\browser\CefFrame.html...
</span><span class='line'>正在生成..\out\docs\org\cef\browser\CefMessageRouter.html...
</span><span class='line'>.\org\cef\browser\CefMessageRouter.java:185: 警告 - @return 标记没有参数。
</span><span class='line'>.\org\cef\browser\CefMessageRouter.java:185: 警告 - @param argument "config" 不是参数名称。
</span><span class='line'>正在生成..\out\docs\org\cef\browser\CefMessageRouter.CefMessageRouterConfig.html...
</span><span class='line'>正在生成..\out\docs\org\cef\browser\CefRequestContext.html...
</span><span class='line'>。。。
</span><span class='line'>正在生成..\out\docs\constant-values.html...
</span><span class='line'>正在构建所有程序包和类的索引...
</span><span class='line'>正在生成..\out\docs\overview-tree.html...
</span><span class='line'>正在生成..\out\docs\index-all.html...
</span><span class='line'>正在构建所有类的索引...
</span><span class='line'>正在生成..\out\docs\allclasses-frame.html...
</span><span class='line'>正在生成..\out\docs\allclasses-noframe.html...
</span><span class='line'>正在生成..\out\docs\index.html...
</span><span class='line'>正在生成..\out\docs\overview-summary.html...
</span><span class='line'>正在生成..\out\docs\help-doc.html...
</span><span class='line'>29 个警告
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>F:\wv\src\java\tests\detailed\BrowserFrame.java -&gt; F:\wv\src\binary_distrib\win64\bin\tests\detailed\BrowserFrame.java
</span><span class='line'>F:\wv\src\java\tests\detailed\MainFrame.java -&gt; F:\wv\src\binary_distrib\win64\bin\tests\detailed\MainFrame.java
</span><span class='line'>。。。
</span><span class='line'>F:\wv\src\java\tests\detailed\ui\StatusPanel.java -&gt; F:\wv\src\binary_distrib\win64\bin\tests\detailed\ui\StatusPanel.java
</span><span class='line'>F:\wv\src\java\tests\simple\MainFrame.java -&gt; F:\wv\src\binary_distrib\win64\bin\tests\simple\MainFrame.java
</span><span class='line'>复制了 34 个文件
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>系统找不到指定的文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>F:\wv\src\jcef_build\native\Release\cef.pak -&gt; F:\wv\src\binary_distrib\win64\bin\lib\win64\cef.pak
</span><span class='line'>F:\wv\src\jcef_build\native\Release\cef_100_percent.pak -&gt; F:\wv\src\binary_distrib\win64\bin\lib\win64\cef_100_percent.pak
</span><span class='line'>。。。
</span><span class='line'>F:\wv\src\jcef_build\native\Release\locales\zh-CN.pak -&gt; F:\wv\src\binary_distrib\win64\bin\lib\win64\locales\zh-CN.pak
</span><span class='line'>F:\wv\src\jcef_build\native\Release\locales\zh-TW.pak -&gt; F:\wv\src\binary_distrib\win64\bin\lib\win64\locales\zh-TW.pak
</span><span class='line'>复制了 58 个文件
</span><span class='line'>F:\wv\src\jcef_build\native\Release\swiftshader\libEGL.dll -&gt; F:\wv\src\binary_distrib\win64\bin\lib\win64\swiftshader\libEGL.dll
</span><span class='line'>F:\wv\src\jcef_build\native\Release\swiftshader\libGLESv2.dll -&gt; F:\wv\src\binary_distrib\win64\bin\lib\win64\swiftshader\libGLESv2.dll
</span><span class='line'>复制了 2 个文件
</span><span class='line'>F:\wv\src\out\docs\allclasses-frame.html -&gt; F:\wv\src\binary_distrib\win64\docs\allclasses-frame.html
</span><span class='line'>F:\wv\src\out\docs\allclasses-noframe.html -&gt; F:\wv\src\binary_distrib\win64\docs\allclasses-noframe.html
</span><span class='line'>。。。
</span><span class='line'>F:\wv\src\out\docs\org\cef\network\package-summary.html -&gt; F:\wv\src\binary_distrib\win64\docs\org\cef\network\package-summary.html
</span><span class='line'>F:\wv\src\out\docs\org\cef\network\package-tree.html -&gt; F:\wv\src\binary_distrib\win64\docs\org\cef\network\package-tree.html
</span><span class='line'>复制了 151 个文件
</span><span class='line'>Creating README.TXT file.
</span><span class='line'>已复制         1 个文件。
</span><span class='line'>F:\wv\src\third_party\jogamp\gluegen.LICENSE.txt -&gt; F:\wv\src\binary_distrib\win64\gluegen.LICENSE.txt
</span><span class='line'>F:\wv\src\third_party\jogamp\jogl.LICENSE.txt -&gt; F:\wv\src\binary_distrib\win64\jogl.LICENSE.txt
</span><span class='line'>复制了 2 个文件
</span><span class='line'>F:\wv\src\tools\distrib\win64\compile.bat -&gt; F:\wv\src\binary_distrib\win64\compile.bat
</span><span class='line'>F:\wv\src\tools\distrib\win64\run.bat -&gt; F:\wv\src\binary_distrib\win64\run.bat
</span><span class='line'>复制了 2 个文件
</span><span class='line'>
</span><span class='line'>F:\wv\src\tools&gt;</span></code></pre></td></tr></table></div></figure>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[视频自动翻译]]></title>
    <link href="http://winse.github.io/blog/2018/08/25/video-auto-translate/"/>
    <updated>2018-08-25T21:27:54+08:00</updated>
    <id>http://winse.github.io/blog/2018/08/25/video-auto-translate</id>
    <content type="html"><![CDATA[<p>现在语音翻译应用越来越广泛了。其实视频内的音频应该也可以通过语音的处理方式，来达到添加字幕以及翻译的效果。</p>

<p>google翻译页面已有语音输入的按钮，只是需要我们把电脑视频的声音转换作为 <strong>电脑输入</strong> 就行了。</p>

<h2>语音识别翻译链接</h2>

<p><a href="https://speechlogger.appspot.com/zh/">https://speechlogger.appspot.com/zh/</a></p>

<p>翻译</p>

<ul>
<li><a href="https://translate.google.cn">https://translate.google.cn</a></li>
<li><a href="https://www.google.com/intl/en/chrome/demos/speech.html">https://www.google.com/intl/en/chrome/demos/speech.html</a></li>
</ul>


<h2>实现/处理方法</h2>

<h4>转换工具</h4>

<p>第一种（推荐）: 使用 <a href="https://www.vb-audio.com/Voicemeeter/index.htm">VoiceMeeter</a></p>

<ul>
<li><a href="https://www.youtube.com/watch?v=91acHQfYj48">Speechlogger可以边看国外视频边翻译，如果无法识别音频怎么办？</a></li>
</ul>


<p>第二种：使用 <a href="https://software.muzychenko.net/eng/vac.htm#download">virtual audio cable sofeware</a></p>

<ul>
<li><a href="https://www.youtube.com/watch?v=CleLvQWy8-c">How to convert audio to text (mp3 to text)</a></li>
</ul>


<h4>详细步骤：</h4>

<ol>
<li>安装（以上任意一种）转换工具</li>
<li>设置系统声音的 <strong>播放设备</strong></li>
<li>在浏览器中点击 录音按钮 后，点击 浏览器地址栏 的右侧麦克风按钮，<strong>麦克风</strong> 下拉菜单中设置使用的设备（如：VoiceMeeter Output）</li>
<li>（可选）如果想翻译同时自己也听到，打开 Voicemeeter 软件就行了，程序会自动输出选择一个输出。</li>
</ol>


<p>记住，<strong>不能静音</strong>，同时要打开 <strong>系统的麦克风</strong> ！！</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[斐讯K2刷机记录]]></title>
    <link href="http://winse.github.io/blog/2018/06/20/k2-reburn/"/>
    <updated>2018-06-20T23:08:28+08:00</updated>
    <id>http://winse.github.io/blog/2018/06/20/k2-reburn</id>
    <content type="html"><![CDATA[<p>很久以前就在JD弄了一个K2，当时没有啥需求，所以也没有折腾 。最近尝试DDNS域名绑定到动态的IP，想在家有一个能提供SSH访问的机器。原来的树莓派被弄坏了，就想着折腾折腾刷刷K2，在上面安装一个SSH。</p>

<p>同时也把官网提供的系统净化净化。</p>

<h2>原K2的详细信息</h2>

<p><a href="https://item.jd.com/2615810.html">斐讯K2 1200M智能双频无线路由器 WIFI穿墙 PSG1218</a></p>

<h2>了解刷机流程</h2>

<ul>
<li>官方版本可能存在的问题：</li>
</ul>


<p><a href="http://www.right.com.cn/forum/thread-208302-1-1.html">http://www.right.com.cn/forum/thread-208302-1-1.html</a></p>

<ul>
<li>刷机直接参考</li>
</ul>


<p><a href="http://www.right.com.cn/forum/thread-208753-1-1.html">【2017-12-01】斐讯K2 V22.5.9.163官方固件定制版,集成breed,支持官版直刷【V1.8】</a></p>

<h2>详细步骤</h2>

<ol>
<li><p>更新版本到 V22.5.9.163</p>

<p>查看官网提供的<a href="http://www.phicomm.com/cn/support.php/Soho/software_support/t/sm.html">软件</a>， 下载<a href="http://www.phicomm.com/cn/support.php/Soho/search_support/col/6/keys/k2.html">对应的版本</a></p>

<ul>
<li>K2_A2_V21.4.6.12.bin</li>
<li>K2_V22.5.9.163.bin</li>
</ul>
</li>
<li><p>刷净化版（带Bread）k2_163_v18_breed.rar</p>

<ul>
<li><p><a href="http://woo.iytc.net/?dir=uploads/K2">下载地址</a></p></li>
<li><p><a href="http://www.qqgzs.com/archives/k2-shuaji.html">breed刷入第三方固件</a></p>

<p> 进入Bread方法，这个了解下就行，这里不刷第三方的。</p>

<p> 拔除K2上Wan口的网线，路由器断电，持续按住路由器上的reset按钮，接通路由器电源，3秒后松开reset按钮。
 在浏览器地址栏输入 <a href="http://192.168.1.1">http://192.168.1.1</a> 访问Breed Web。</p></li>
</ul>
</li>
<li><p>启动telnet/手动安装SSH</p>

<ul>
<li><a href="http://iytc.net/wordpress/?p=1624">http://iytc.net/wordpress/?p=1624</a></li>
</ul>
</li>
</ol>


<p>3.1. 启动telnet</p>

<p>用 高级设置 - 系统设置 - WebShell 执行命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/www/cgi-bin# /usr/sbin/telnetd -l /bin/login.sh</span></code></pre></td></tr></table></div></figure>


<p>直接连，不用密码！！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:~$ telnet 192.168.2.1</span></code></pre></td></tr></table></div></figure>


<p>同时修改下密码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 更改root密码为 admin
</span><span class='line'>echo -e 'admin\nadmin' | passwd root</span></code></pre></td></tr></table></div></figure>


<p>3.2. 安装SSH</p>

<p>这个版本没有带opkg，需要首先把opkg安装好。</p>

<ul>
<li><a href="https://www.ywlib.com/archives/102.html">小米路由3安装opkg</a></li>
<li><a href="https://www.ywlib.com/archives/101.html">解压OpenWRT固件bin文档提取文件</a></li>
</ul>


<p>直接下载 <a href="http://www.ywlib.com/usr/uploads/2017/05/387250260.zip">opkg.zip</a> 然后本地起一个 httpserver 提供一个下载的服务。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:/mnt/e/SOFTWARE/k2$ python -m SimpleHTTPServer
</span><span class='line'>Serving HTTP on 0.0.0.0 port 8000 ...</span></code></pre></td></tr></table></div></figure>


<p>在telnet窗口执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@K2:/www/cgi-bin# cd /bin
</span><span class='line'>root@K2:/bin# wget http://192.168.2.160:8000/opkg
</span><span class='line'>--2018-06-20 22:50:18--  http://192.168.2.160:8000/opkg
</span><span class='line'>Connecting to 192.168.2.160:8000... connected.
</span><span class='line'>HTTP request sent, awaiting response... 200 OK
</span><span class='line'>Length: 130247 (127K) [application/octet-stream]
</span><span class='line'>Saving to: 'opkg'
</span><span class='line'>
</span><span class='line'>opkg                                  100%[=========================================================================&gt;] 127.19K   176KB/s   in 0.7s
</span><span class='line'>
</span><span class='line'>2018-06-20 22:50:18 (176 KB/s) - 'opkg' saved [130247/130247]
</span><span class='line'>
</span><span class='line'>root@K2:/bin# chmod +x opkg</span></code></pre></td></tr></table></div></figure>


<pre><code>注意：用完后就删掉吧 `rm -rf /bin/opkg` ，空间不够！！查看[安装了那些软件](https://unix.stackexchange.com/questions/157097/how-to-know-disk-space-occupied-by-packages-in-openwrt)

```
rm -rf /bin/opkg

root@K2:/overlay# du -sh */*/*
root@K2:/overlay# rm -rf usr/lib/opkg
```
</code></pre>

<p>然后安装ssh：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>opkg install http://downloads.openwrt.org/barrier_breaker/14.07/ramips/mt7620a/packages/base/dropbear_2014.63-2_ramips_24kec.ipk
</span><span class='line'># 开机自启
</span><span class='line'>/etc/init.d/dropbear enable
</span><span class='line'>
</span><span class='line'># https://openwrt.org/docs/guide-user/base-system/ssh_configuration
</span><span class='line'># https://wiki.openwrt.org/doc/uci/dropbear
</span><span class='line'>vi /etc/config/dropbear
</span><span class='line'>        option GatewayPorts '1'
</span><span class='line'>        
</span><span class='line'># 启动
</span><span class='line'>/etc/init.d/dropbear start
</span><span class='line'>
</span><span class='line'>uci show dropbear
</span><span class='line'>
</span><span class='line'># 如果需要放开防火墙
</span><span class='line'>iptables -I INPUT 1 -p tcp -m tcp --dport 22 -j ACCEPT
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>vi /etc/firewall.user
</span><span class='line'># 删除无用文件
</span><span class='line'>rm -rf /etc/dropbear/dropbear_dss_host_key</span></code></pre></td></tr></table></div></figure>


<p>注意：需要持久化的话，把这句开放22端口的指令写到 /etc/firewall.user 。</p>

<p>客户端登录：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:~$ ssh root@192.168.2.1
</span><span class='line'>The authenticity of host '192.168.2.1 (192.168.2.1)' can't be established.
</span><span class='line'>RSA key fingerprint is SHA256:vuAY65qk3Us4MyjYT8KPT8lYsTSTqru6W4e7My6CRkk.
</span><span class='line'>Are you sure you want to continue connecting (yes/no)? yes
</span><span class='line'>Warning: Permanently added '192.168.2.1' (RSA) to the list of known hosts.
</span><span class='line'>root@192.168.2.1's password:
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>BusyBox v1.22.1 (2017-02-15 13:52:46 CST) built-in shell (ash)
</span><span class='line'>Enter 'help' for a list of built-in commands.
</span><span class='line'>
</span><span class='line'>    ___  __ _______________  __  _____  ___  ________  ___
</span><span class='line'>   / _ \/ // /  _/ ___/ __ \/  |/  /  |/  / / __/ __ \/ _ \
</span><span class='line'>  / ___/ _  // // /__/ /_/ / /|_/ / /|_/ / _\ \/ /_/ / ___/
</span><span class='line'> /_/  /_//_/___/\___/\____/_/  /_/_/  /_/ /___/\____/_/
</span><span class='line'> ----------------------------------------------------------
</span><span class='line'> Barrier Breaker, unknown
</span><span class='line'> ----------------------------------------------------------
</span><span class='line'> PID=K2
</span><span class='line'> BUILD_TYPE=release
</span><span class='line'> BUILD_NUMBER=163
</span><span class='line'> BUILD_TIME=20170215-134532
</span><span class='line'> ----------------------------------------------------------
</span><span class='line'> MTK OpenWrt SDK V3.4
</span><span class='line'> revision : adab2180
</span><span class='line'> benchmark : APSoC SDK 5.0.1.0
</span><span class='line'> kernel : 144992
</span><span class='line'> ----------------------------------------------------------
</span><span class='line'>root@K2:~#</span></code></pre></td></tr></table></div></figure>


<p>不推荐用密码，最好使用公钥的方式来处理。<del>但公钥访问有点问题，.ssh的目录权限是个麻烦事</del> （其实文件的位置不对！！）。</p>

<p>参考： <a href="https://wiki.openwrt.org/doc/howto/dropbear.public-key.auth">Dropbear public-key authentication HowTo</a></p>

<blockquote><p>ssh <a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x72;&#x6f;&#111;&#x74;&#x40;&#49;&#57;&#50;&#46;&#49;&#x36;&#56;&#x2e;&#49;&#x2e;&#x31;">&#x72;&#111;&#111;&#x74;&#64;&#49;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#46;&#x31;&#46;&#x31;</a> &ldquo;tee -a /etc/dropbear/authorized_keys&rdquo; &lt; ~/.ssh/id_rsa.pub</p></blockquote>

<p>把 authorized_keys 文件移到 /etc/dropbear 下面就可以了！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@K2:~/.ssh# ls -la
</span><span class='line'>drwx------    2 root     root             0 Jun 21 10:35 .
</span><span class='line'>drwx------    1 root     root             0 Jun 21 08:57 ..
</span><span class='line'>-rw-------    1 root     root           397 Jun 21 10:35 authorized_keys
</span><span class='line'>root@K2:~/.ssh# mv authorized_keys /etc/dropbear/
</span></code></pre></td></tr></table></div></figure>


<h2>其他拓展</h2>

<h3>增加空间，挂载windows共享目录</h3>

<p><a href="https://blog.vircloud.net/linux/openwrt-psg1218.html">https://blog.vircloud.net/linux/openwrt-psg1218.html</a></p>

<p>K2 官方版式不带 USB，因此就限制了很多可玩的东西，但是我们可以通过 SMB 挂载的方式来增加存储空间，需要注意的是老毛子挂载 SMB 的方式与其他 OpenWRT 不同，使用 mount 命令是挂载不成功的，正确的方法是：</p>

<p>位置：高级设置 - 自定义设置 - 脚本 - 在路由器启动后执行
配置如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>### SMB资源挂载(局域网共享映射，无USB也能挂载储存空间)
</span><span class='line'>### 说明：共享路径填写时，【\】要写成【\\】。
</span><span class='line'>sleep 10
</span><span class='line'>modprobe des_generic
</span><span class='line'>modprobe cifs CIFSMaxBufSize=64512
</span><span class='line'>#mkdir -p /media/cifs
</span><span class='line'>#mount -t cifs \\\\{host}\\{share} /media/cifs -o username={user},password={pass}
</span><span class='line'>mount -t cifs \\\\192.168.31.100\\移动磁盘-C /mnt -o username=guest,password=guest
</span><span class='line'>
</span><span class='line'>sleep 10
</span><span class='line'>mdev -s
</span><span class='line'>sleep 5
</span><span class='line'>stop_ftpsamba
</span><span class='line'>sleep 2
</span><span class='line'>run_ftpsamba
</span><span class='line'>sleep 5
</span></code></pre></td></tr></table></div></figure>


<h3>Breed进入方式</h3>

<ol>
<li>将要刷的第三方固件准备好。</li>
<li>断电按着reset键不松手，然后通电5秒后再松开reset键。</li>
<li>打开浏览器输入<a href="http://192.168.1.1%E5%8D%B3%E5%8F%AFBreed">http://192.168.1.1%E5%8D%B3%E5%8F%AFBreed</a> Web恢复控制台（记得先在Breed Web恢复控制台中的固件备份里备份下EEPROM和编程器固件，以后可能用得着）。</li>
<li>恢复固件之前最好在Breed Web恢复控制台恢复一下出厂设置，固件类型：Config区（公版）</li>
</ol>


<p>参考：</p>

<ul>
<li><a href="https://github.com/moonjoin/k2-firmware">https://github.com/moonjoin/k2-firmware</a></li>
<li><a href="http://www.right.com.cn/forum/thread-161324-1-1.html">http://www.right.com.cn/forum/thread-161324-1-1.html</a></li>
<li><a href="https://www.c7cc.com/shuaji-chaiji/k1-k2-v21-4-6-10-telnet-ssh.html">https://www.c7cc.com/shuaji-chaiji/k1-k2-v21-4-6-10-telnet-ssh.html</a></li>
<li><a href="http://www.mm126.cc/319.html">http://www.mm126.cc/319.html</a></li>
<li><a href="http://www.qqgzs.com/archives/k2-22-6-503.html">http://www.qqgzs.com/archives/k2-22-6-503.html</a></li>
</ul>


<h2>其他参考</h2>

<ul>
<li><a href="https://www.jianshu.com/p/6be3639ff9e3">https://www.jianshu.com/p/6be3639ff9e3</a></li>
<li><a href="http://www.right.com.cn/forum/thread-184338-1-1.html">http://www.right.com.cn/forum/thread-184338-1-1.html</a></li>
<li><a href="http://www.cnblogs.com/lanye/p/6149242.html">http://www.cnblogs.com/lanye/p/6149242.html</a> 刷入 breed 和 ssh</li>
<li><a href="http://www.right.com.cn/forum/thread-189593-1-2.html">http://www.right.com.cn/forum/thread-189593-1-2.html</a> 安装SSH也是有多种方法</li>
<li><a href="https://www.cnblogs.com/xuliangxing/p/6486560.html">https://www.cnblogs.com/xuliangxing/p/6486560.html</a></li>
<li><a href="https://www.jianshu.com/p/275217976492">https://www.jianshu.com/p/275217976492</a> LEDE 是一个从 OpenWrt 中衍生出来的产品</li>
<li><a href="https://downloads.lede-project.org/releases/17.01.4/targets/ramips/mt7620/">https://downloads.lede-project.org/releases/17.01.4/targets/ramips/mt7620/</a></li>
<li><a href="https://bitbucket.org/stevengan/padavan/downloads/">https://bitbucket.org/stevengan/padavan/downloads/</a></li>
<li><a href="https://blog.aofall.com/archives/14.html">https://blog.aofall.com/archives/14.html</a></li>
<li><a href="http://www.hopol.cn/2017/05/853/">http://www.hopol.cn/2017/05/853/</a> 斐讯K2 163版配置文件加密破解过程。学学c++是怎么反编译的！！！！</li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用VMWare安装Mac OS X]]></title>
    <link href="http://winse.github.io/blog/2018/06/19/install-macosx-on-vmware/"/>
    <updated>2018-06-19T23:05:55+08:00</updated>
    <id>http://winse.github.io/blog/2018/06/19/install-macosx-on-vmware</id>
    <content type="html"><![CDATA[<p>参考：</p>

<ul>
<li><a href="http://www.yhy0.com/ios_20160413_269.html">VMware Workstation 12 Pro如何安装Mac OS X 10.11.1</a></li>
<li><a href="https://blog.csdn.net/yongh701/article/details/70597982">【iOS】VMWare中MAC OS X的安装，VMWare tools的配置与iOS的Helloworld</a></li>
</ul>


<p>实际操作：</p>

<ul>
<li>安装 VMware-workstation-full-12.5.7-5813279 。</li>
<li>下载 unlocker208.zip 并使用管理员权限安装 win-install.cmd 。</li>
<li>添加虚拟机，选择 Apple Mac OS X(M) - OS X 10.9；然后修改vmx配置，在 <code>smc.present = "TRUE"</code> 后面添加 <code>smc.version = "0"</code></li>
<li>然后光盘选择 Mavericks_Install_13A603.cdr 安装系统。磁盘格式化：<code>实用工具 - 磁盘工具</code> 。</li>
<li>安装VMWare Tools。光盘选择 darwiniso.zip 压缩包里面的 darwin6.0.3.iso 。</li>
<li>配置共享文件夹。进入系统后，<code>Finder - 偏好设置 -  已连接的服务器</code> 。</li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用注解生成代码]]></title>
    <link href="http://winse.github.io/blog/2018/06/10/java-source-annotation-processor/"/>
    <updated>2018-06-10T12:51:39+08:00</updated>
    <id>http://winse.github.io/blog/2018/06/10/java-source-annotation-processor</id>
    <content type="html"><![CDATA[<p>Java里面随处可见annotation（注解），RetentionPolicy 指示了注解使用的情况：</p>

<ul>
<li>SOURCE，比如 @Override, @SuppressWarnings</li>
<li>RUNTIME，最熟悉的莫过于Spring Bean中使用的 @Controller, @Service 一般和反射同时使用。</li>
<li>CLASS</li>
</ul>


<p>而 CLASS 则是用于 compile 编译阶段的注解。一个注解的处理器，以Java代码（或编译过的字节码）作为输入，生成Java文件。这些生成的Java文件，会同其他普通的手动编写的Java源代码一样被javac编译。</p>

<p>可以自己实现一些类似groovy语法糖的功能（lombok框架修改bytecode为类生成新方法getter/setter、或者使用生成新的辅助类等）；减少机械的、冗余代码的管理，使得代码更简洁便于阅读。</p>

<h2>代码生成</h2>

<p>先来了解下整个过程，javac 从 ServiceLoader 获取一个 Processor 标注处理类，判断是否为符合条件的标注，再收集类的相关信息，然后使用 Filer 创建新的类。<a href="http://www.baeldung.com/java-annotation-processing-builder">Java Annotation Processing and Creating a Builder</a> ，<a href="https://liuzhengyang.github.io/2017/10/20/annotation-processing/">java annotation processor</a> 主要涉及到如下三部分：</p>

<ul>
<li>Annotation: @BuilderProperty</li>
<li>Processor: BuilderProcessor</li>
<li><p>Service:</p>

<p>通过google的auto-service来注册服务，最终会在 META-INF/services/ 生成名称为 javax.annotation.processing.Processor 的文件，内容为当前被标注的类名。</p></li>
</ul>


<p>项目的目录结构如下：</p>

<p><img src="http://winse.github.io/images/blogs/annotation-processor-projects.png" alt="" /></p>

<h3>具体实现：</h3>

<ul>
<li>BuilderProperty 注解</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package com.github.winse.annotation;
</span><span class='line'>
</span><span class='line'>import java.lang.annotation.ElementType;
</span><span class='line'>import java.lang.annotation.Retention;
</span><span class='line'>import java.lang.annotation.RetentionPolicy;
</span><span class='line'>import java.lang.annotation.Target;
</span><span class='line'>
</span><span class='line'>@Target(ElementType.METHOD)
</span><span class='line'>@Retention(RetentionPolicy.SOURCE)
</span><span class='line'>public @interface BuilderProperty {
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>BuilderProcessor</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package com.github.winse.processor;
</span><span class='line'>
</span><span class='line'>import com.github.winse.annotation.BuilderProperty;
</span><span class='line'>import com.google.auto.service.AutoService;
</span><span class='line'>
</span><span class='line'>import javax.annotation.processing.*;
</span><span class='line'>import javax.lang.model.SourceVersion;
</span><span class='line'>import javax.lang.model.element.Element;
</span><span class='line'>import javax.lang.model.element.TypeElement;
</span><span class='line'>import javax.lang.model.type.ExecutableType;
</span><span class='line'>import javax.tools.Diagnostic;
</span><span class='line'>import javax.tools.JavaFileObject;
</span><span class='line'>import java.io.IOException;
</span><span class='line'>import java.io.PrintWriter;
</span><span class='line'>import java.util.List;
</span><span class='line'>import java.util.Map;
</span><span class='line'>import java.util.Set;
</span><span class='line'>import java.util.stream.Collectors;
</span><span class='line'>
</span><span class='line'>/**
</span><span class='line'> * @see BuilderProperty
</span><span class='line'> */
</span><span class='line'>@SupportedAnnotationTypes("com.github.winse.annotation.BuilderProperty")
</span><span class='line'>@SupportedSourceVersion(SourceVersion.RELEASE_8)
</span><span class='line'>@AutoService(Processor.class)
</span><span class='line'>public class BuilderProcessor extends AbstractProcessor {
</span><span class='line'>
</span><span class='line'>    @Override
</span><span class='line'>    public boolean process(Set&lt;? extends TypeElement&gt; annotations, RoundEnvironment roundEnv) {
</span><span class='line'>        for (TypeElement annotation : annotations) {
</span><span class='line'>            Set&lt;? extends Element&gt; annotationElements = roundEnv.getElementsAnnotatedWith(annotation);
</span><span class='line'>
</span><span class='line'>            Map&lt;Boolean, List&lt;Element&gt;&gt; annotationMethods = annotationElements.stream()
</span><span class='line'>                    .collect(Collectors.partitioningBy(element -&gt; ((ExecutableType) element.asType()).getParameterTypes().size() == 1 && element.getSimpleName().toString().startsWith("set")));
</span><span class='line'>
</span><span class='line'>            List&lt;Element&gt; setters = annotationMethods.get(true);
</span><span class='line'>            List&lt;Element&gt; otherMethods = annotationMethods.get(false);
</span><span class='line'>
</span><span class='line'>            otherMethods.forEach(element -&gt; processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR, "@BuildProperty must be applied to a setXxx method with a single argument", element));
</span><span class='line'>
</span><span class='line'>            if (setters.isEmpty()) {
</span><span class='line'>                continue;
</span><span class='line'>            }
</span><span class='line'>
</span><span class='line'>            String className = ((TypeElement) setters.get(0).getEnclosingElement()).getQualifiedName().toString();
</span><span class='line'>
</span><span class='line'>            Map&lt;String, String&gt; setterMap = setters.stream().collect(Collectors.toMap(
</span><span class='line'>                    setter -&gt; setter.getSimpleName().toString(),
</span><span class='line'>                    setter -&gt; ((ExecutableType) setter.asType()).getParameterTypes().get(0).toString()
</span><span class='line'>            ));
</span><span class='line'>
</span><span class='line'>            try {
</span><span class='line'>                writeBuilderType(className, setterMap);
</span><span class='line'>            } catch (IOException e) {
</span><span class='line'>                processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR, e.getMessage());
</span><span class='line'>            }
</span><span class='line'>        }
</span><span class='line'>        return true;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    private void writeBuilderType(String className, Map&lt;String, String&gt; setterMap) throws IOException {
</span><span class='line'>        String packageName = null;
</span><span class='line'>        int lastDot = className.lastIndexOf(".");
</span><span class='line'>        if (lastDot &gt; 0) {
</span><span class='line'>            packageName = className.substring(0, lastDot);
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        String simpleClassName = className.substring(lastDot + 1);
</span><span class='line'>        String builderClassName = className + "Builder";
</span><span class='line'>        String builderSimpleClassName = builderClassName.substring(lastDot + 1);
</span><span class='line'>
</span><span class='line'>        JavaFileObject builderFile = processingEnv.getFiler().createSourceFile(builderClassName);
</span><span class='line'>        try (PrintWriter out = new PrintWriter(builderFile.openWriter())) {
</span><span class='line'>            if (packageName != null) {
</span><span class='line'>                out.printf("package %s;\n", packageName);
</span><span class='line'>                out.println();
</span><span class='line'>            }
</span><span class='line'>
</span><span class='line'>            out.printf("public class %s {\n", builderSimpleClassName);
</span><span class='line'>            out.println();
</span><span class='line'>            out.printf("  private %s object = new %s();\n", simpleClassName, simpleClassName);
</span><span class='line'>            out.println();
</span><span class='line'>            out.printf("  public %s build() {\n", simpleClassName);
</span><span class='line'>            out.printf("    return object;\n");
</span><span class='line'>            out.printf("  }\n");
</span><span class='line'>            out.println();
</span><span class='line'>
</span><span class='line'>            setterMap.entrySet().forEach(setter -&gt; {
</span><span class='line'>                String methodName = setter.getKey();
</span><span class='line'>                String argumentType = setter.getValue();
</span><span class='line'>
</span><span class='line'>                out.printf("  public %s %s(%s value){\n", builderSimpleClassName, methodName, argumentType);
</span><span class='line'>                out.printf("    object.%s(value);\n", methodName);
</span><span class='line'>                out.printf("    return this;\n");
</span><span class='line'>                out.printf("  }\n");
</span><span class='line'>                out.println();
</span><span class='line'>            });
</span><span class='line'>
</span><span class='line'>            out.printf("}\n");
</span><span class='line'>
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>测试使用：</h3>

<ul>
<li>build.gradle</li>
</ul>


<p>我使用的是4.7的版本，4.7及以上版本可以直接使用 annotationProcessor 来添加标注处理器。（其他版本可以使用 apt 来处理）</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>plugins {
</span><span class='line'>    id "net.ltgt.apt" version "0.10"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>sourceSets.main.java.srcDirs += ['build/generated/source/apt/main']
</span><span class='line'>
</span><span class='line'>dependencies {
</span><span class='line'>    compile rootProject
</span><span class='line'>    annotationProcessor project(':compiler')
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Person</li>
</ul>


<p>这是一个POJO类，BuilderProcessor处理器会根据BuilderProperty注解来生成PersonBuilder类。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package com.github.winse.example;
</span><span class='line'>
</span><span class='line'>import com.github.winse.annotation.BuilderProperty;
</span><span class='line'>
</span><span class='line'>public class Person {
</span><span class='line'>    private int age;
</span><span class='line'>    private String name;
</span><span class='line'>
</span><span class='line'>    @BuilderProperty
</span><span class='line'>    public void setAge(int age) {
</span><span class='line'>        this.age = age;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    @BuilderProperty
</span><span class='line'>    public void setName(String name) {
</span><span class='line'>        this.name = name;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    public int getAge() {
</span><span class='line'>        return age;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    public String getName() {
</span><span class='line'>        return name;
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>生成代码效果</h3>

<p>在 gradle 面板中选择子项目 <code>:example</code> ，然后选择 Tasks 下的 build 任务进行构建。构建完后在 <code>example/build/generated/source/apt</code> 目录下生成了对应的 Builder 代码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package com.github.winse.example;
</span><span class='line'>
</span><span class='line'>public class PersonBuilder {
</span><span class='line'>
</span><span class='line'>  private Person object = new Person();
</span><span class='line'>
</span><span class='line'>  public Person build() {
</span><span class='line'>    return object;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  public PersonBuilder setName(java.lang.String value){
</span><span class='line'>    object.setName(value);
</span><span class='line'>    return this;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  public PersonBuilder setAge(int value){
</span><span class='line'>    object.setAge(value);
</span><span class='line'>    return this;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<h2>注解处理器调试</h2>

<p>不会调试说明还没有真正的入门。并且没有调试的情况下，解决异常、错误也是一件异常痛苦的事情。注解处理器生成代码是在编译阶段来生成代码的，所以调试的选项配置添加到 javac 。而 gradle 提供了一种相对简单的方式来进行。</p>

<p>参考</p>

<ul>
<li><a href="https://stackoverflow.com/questions/8587096/how-do-you-debug-java-annotation-processors-using-intellij">how do you debug java annotation processors using intellij?
</a></li>
<li><a href="https://discuss.gradle.org/t/how-do-you-attach-a-debugger-to-gradle-so-that-i-can-debug-it-running-a-task/7526/5">How do you attach a debugger to gradle so that I can debug it running a task?</a></li>
</ul>


<p>具体步骤如下：</p>

<ol>
<li><p>在命令行运行构建</p>

<p>添加调试参数后，gradle 会 <strong>暂停等待远程调试</strong> ，相当于添加了 JVM 调试参数。<a href="https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_configuration_properties">Gradle properties</a></p>

<pre><code>hello-annotation-processor\example&gt;gradle clean build --no-daemon -Dorg.gradle.debug=true
或者
hello-annotation-processor&gt;gradle example:clean example:compileJava --no-daemon -Dorg.gradle.debug=true
</code></pre>

<p>注： &ndash;no-daemon 不加也是可以的，但是运行该次构建后不会停止。</p>

<p><img src="http://winse.github.io/images/blogs/annotation-processor-debug-s1.png" alt="" /></p></li>
<li><p>远程调试</p>

<p><img src="http://winse.github.io/images/blogs/annotation-processor-debug-s2.png" alt="" /></p></li>
</ol>


<h3>其他调试配置方式</h3>

<ul>
<li><p>通过环境变量</p>

<pre><code>example&gt;set GRADLE_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005

example&gt;gradle clean build
Listening for transport dt_socket at address: 5005
</code></pre></li>
<li><p>修改 ~/.gradle/gradle.properties</p>

<p>这种方式不推荐，因为它是全局的。</p>

<pre><code>org.gradle.daemon=false
org.gradle.debug=true
</code></pre>

<p>或者</p>

<pre><code>org.gradle.daemon=true
org.gradle.jvmargs=-XX:MaxPermSize=4g -XX:+HeapDumpOnOutOfMemoryError -Xmx4g -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006

$ gradle --daemon
</code></pre>

<p>Then attach your debugger client to port 5006, set your breakpoint, then run your test.</p>

<p>注：该配置放到项目目录下没用。</p></li>
</ul>


<h2>其他</h2>

<ul>
<li>Gradle参数优化 <a href="https://stackoverflow.com/questions/16775197/building-and-running-app-via-gradle-and-android-studio-is-slower-than-via-eclips/19500539#19500539">Building and running app via Gradle and Android Studio is slower than via Eclipse</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[科学上网（续）]]></title>
    <link href="http://winse.github.io/blog/2018/06/09/reasonable-way-to-access-the-internet/"/>
    <updated>2018-06-09T14:03:11+08:00</updated>
    <id>http://winse.github.io/blog/2018/06/09/reasonable-way-to-access-the-internet</id>
    <content type="html"><![CDATA[<p>到新的环境就会遇到新的问题，需要不断的学习更新来适应新的环境。上网也是一样，工作地点和家里存在了一道鸿沟。过去断断续续的有一些解决的方式，但是总是有点间接。</p>

<ul>
<li><a href="http://www.winseliu.com/blog/2017/11/04/teamviewer-vpn-on-windows/">使用TeamviewerVPN访问公司内网</a></li>
<li><a href="http://www.winseliu.com/blog/2017/02/04/privoxy-http-proxy-for-shadowsocks/">使用Privoxy把shadowsocks转换为Http代理</a></li>
<li><a href="http://www.winseliu.com/blog/2016/03/11/install-and-config-openvpn/">安装配置OpenVPN</a></li>
<li><a href="http://www.winseliu.com/blog/2015/11/22/gfw-ladder/">搭梯笔记</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_port_forwarding.html">SSH原理与运用（二）：远程操作与端口转发</a></li>
<li><a href="http://www.winseliu.com/blog/2015/09/06/squid-http-proxy-server-install/">安装http代理服务器squid</a></li>
<li><a href="http://www.winseliu.com/blog/2017/10/30/windows-run-ubuntu/">Windows Run Ubuntu</a></li>
</ul>


<p>上周和同事讨论到在家访问公司服务器的方式时，可以通过花生壳的DDNS来实现域名动态绑定，相当于了把家里的宽带看做一个公网IP，花生壳实时的把域名解析更新为最新的IP。</p>

<p>其实有了公网IP绑定域名后，就可以在公司访问自己的域名（绑定到了家里的IP），公司连自己域名做一个 <em>反向代理</em> ，然后就可以在家直接访问公司的环境了。</p>

<p>但是查了下对于花生壳的口碑都不咋的，其实只要能自动的更新绑定域名和宽带的IP（电信宽带给的是动态IP，使用动态域名绑定），和花生壳的效果是一样。然后在 github 查到了 <code>aliyun-ddns</code> 可以同时定时检测来更新阿里云上的域名解析。</p>

<p>首先通过域名映射到家里电信宽带的公网IP，ddns用来适配电信IP的动态分配； <br/>
然后在家里局域网的一台机器开个SSH的服务；  <br/>
再在家里路由上做端口转发到ssh主机。这样就可以在公司通过 <code>ssh -p port my-domain</code> 连回家了。</p>

<h2>DDNS配置：映射域名到自己的公网IP</h2>

<p><a href="https://github.com/yyqian/aliyun-ddns">aliyun-ddns</a> 老版本有些复杂，我在此基础上一个<a href="https://github.com/winse/aliyun-ddns">本地命令行的版本</a> ，直接运行一个脚本就可以更新域名解析了：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./client.sh myhome.winseliu.com</span></code></pre></td></tr></table></div></figure>


<p><img src="http://winse.github.io/images/blogs/aliyun-dns.png" alt="" /></p>

<p>注：默认电信宽带给你分配的内网IP的，你可以打10000号要他们给你分配改成公网IP。</p>

<h2>本地环境配置</h2>

<ul>
<li>本地SSHD配置</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo dpkg-reconfigure openssh-server
</span><span class='line'>winse@DESKTOP-ADH7K1Q:~$ sudo service ssh start</span></code></pre></td></tr></table></div></figure>


<ul>
<li>无秘密登录配置</li>
</ul>


<p>为了安全，通过公网的SSH访问最好通过秘钥登录，把SSH密码登录的方式给关掉。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winse@DESKTOP-ADH7K1Q:~/.ssh$ cat /business/server/id_rsa.pub &gt;&gt;authorized_keys</span></code></pre></td></tr></table></div></figure>


<ul>
<li>本机防火墙开放22端口</li>
</ul>


<p>参考 <a href="https://blog.csdn.net/zzq900503/article/details/11936379">开放windows服务器端口&mdash;&ndash;以打开端口8080为例</a></p>

<p><img src="http://winse.github.io/images/blogs/ddns-local-firewall.png" alt="" /></p>

<ul>
<li>路由器端口映射配置</li>
</ul>


<p><img src="http://winse.github.io/images/blogs/ddns-route-portforwarding.png" alt="" /></p>

<h2>穿透：配置反向代理</h2>

<p>在公司(机器)访问自己的域名，使用ssh的 <code>-R</code> 反向代理参数连接在家里电脑，在家里电脑新建一个5432的端口绑定(数据转发)到服务器的5432端口。这样当你在家电脑连本地的 <code>127.0.0.1:5432</code> 就相当于连接了服务器的 5432 端口。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/bin/autossh -M 0 -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no \
</span><span class='line'>-N -R 5432:localhost:5432 -i ~/.ssh/id_rsa autossh@myhome.winseliu.com </span></code></pre></td></tr></table></div></figure>


<p>当autossh连接太慢、并且SSH提示信息一直不出来，你完全有理由怀疑本地端口被占用了！！查看本地端口状态：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Users\winse&gt;netstat /?
</span><span class='line'>
</span><span class='line'>C:\Users\winse&gt;netstat -ano |findstr 5432</span></code></pre></td></tr></table></div></figure>


<p>如果端口被占用了，需要去任务管理器中关掉对应PID的程序。</p>

<h2>小结</h2>

<p>速度比 teamviewer vpn 的方式快狠多狠多！！这个10000号值得打，这个ddns值得一试。</p>

<h2>后记</h2>

<h3>说说 VS Code调试</h3>

<p>在写脚本bat/sh的过程中，需要用到nodejs的调试。</p>

<p>使用Windows Ubuntu中安装的Node：</p>

<ul>
<li><a href="https://blogs.msdn.microsoft.com/commandline/2017/10/27/running-node-js-on-wsl-from-visual-studio-code/">Running Node.js on WSL from Visual Studio Code</a></li>
<li><a href="https://stackoverflow.com/a/47495710/5697508">Using Visual Studio Code on Windows with Ubuntu-Bash and NodeJS</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"useWSL": true</span></code></pre></td></tr></table></div></figure>


<p><a href="https://code.visualstudio.com/docs/nodejs/nodejs-debugging">https://code.visualstudio.com/docs/nodejs/nodejs-debugging</a></p>

<p>注意：这种外部启动的方式，会通过bash.sh运行node，所以就算停止调试后，Node进程还是一直存在的！！！需要通过任务管理器关闭。</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解读百度的Heatmap]]></title>
    <link href="http://winse.github.io/blog/2018/05/01/heatmap-base-on-baidu/"/>
    <updated>2018-05-01T12:26:43+08:00</updated>
    <id>http://winse.github.io/blog/2018/05/01/heatmap-base-on-baidu</id>
    <content type="html"><![CDATA[<p>前面通过Map的学习，了解到了瓦片的一些知识点。地图里面热图是一个比较典型的功能。通过对聚集数据不同颜色显示，直观形象的洞察数据的规律，比如说高危区等的热点分析，有点类似于arcgis的核密度。接下来结合百度里面的热图分析下它的实现。</p>

<ul>
<li><a href="http://lbsyun.baidu.com/jsdemo/demo/c1_15.htm">热力图功能示例</a></li>
<li><a href="http://desktop.arcgis.com/zh-cn/arcmap/10.3/tools/spatial-analyst-toolbox/differences-between-point-line-and-kernel-density.htm">点密度分析、线密度分析与核密度分析之间的区别</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var points =[
</span><span class='line'>{"lng":116.418261,"lat":39.921984,"count":50},
</span><span class='line'>...
</span><span class='line'>]
</span><span class='line'>
</span><span class='line'>//详细的参数,可以查看heatmap.js的文档 https://github.com/pa7/heatmap.js/blob/master/README.md
</span><span class='line'>heatmapOverlay = new BMapLib.HeatmapOverlay({"radius":20});
</span><span class='line'>map.addOverlay(heatmapOverlay);
</span><span class='line'>heatmapOverlay.setDataSet({data:points,max:100});</span></code></pre></td></tr></table></div></figure>


<h2>setDataSet</h2>

<p>把经纬度数据先转成界面的坐标(不在界面bounds内的点会被忽略掉)，然后调用setData</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HeatmapOverlay.prototype.setDataSet = function(data) {
</span><span class='line'>    this.data = data;
</span><span class='line'>    ...
</span><span class='line'>    var currentBounds = this._map.getBounds();
</span><span class='line'>    var mapdata = {
</span><span class='line'>        max: data.max,
</span><span class='line'>        data: []
</span><span class='line'>    };
</span><span class='line'>    var d = data.data,
</span><span class='line'>        dlen = d.length;
</span><span class='line'>        
</span><span class='line'>    while (dlen--) {
</span><span class='line'>        ...
</span><span class='line'>        if (!currentBounds.containsPoint(latlng)) {
</span><span class='line'>            continue;
</span><span class='line'>        }            
</span><span class='line'>        ...
</span><span class='line'>        mapdata.data.push({
</span><span class='line'>            x: point.x,
</span><span class='line'>            y: point.y,
</span><span class='line'>            count: d[dlen].count
</span><span class='line'>        });
</span><span class='line'>    }
</span><span class='line'>    this.heatmap.setData(mapdata);
</span><span class='line'>}
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h2>setData</h2>

<p>计算最大最小，合并（对同一坐标的对应的count值求和），其中 _organiseData 根据坐标构建一个稀疏矩阵，最后emit给renderall</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>setData: function(data) {
</span><span class='line'>  var dataPoints = data.data;
</span><span class='line'>  var pointsLen = dataPoints.length;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  // reset data arrays
</span><span class='line'>  this._data = [];
</span><span class='line'>  this._radi = [];
</span><span class='line'>
</span><span class='line'>  for(var i = 0; i &lt; pointsLen; i++) {
</span><span class='line'>    this._organiseData(dataPoints[i], false);
</span><span class='line'>  }
</span><span class='line'>  this._max = data.max;
</span><span class='line'>  this._min = data.min || 0;
</span><span class='line'>  
</span><span class='line'>  this._onExtremaChange();
</span><span class='line'>  this._coordinator.emit('renderall', this._getInternalData());
</span><span class='line'>  return this;
</span><span class='line'>},
</span><span class='line'>
</span><span class='line'>_organiseData: function(dataPoint, forceRender) {
</span><span class='line'>    var x = dataPoint[this._xField];
</span><span class='line'>    var y = dataPoint[this._yField];
</span><span class='line'>    var radi = this._radi;
</span><span class='line'>    var store = this._data;
</span><span class='line'>    var max = this._max;
</span><span class='line'>    var min = this._min;
</span><span class='line'>    var value = dataPoint[this._valueField] || 1;
</span><span class='line'>    var radius = dataPoint.radius || this._cfgRadius || defaultRadius;
</span><span class='line'>    
</span><span class='line'>    ...
</span><span class='line'>    
</span><span class='line'>    if (!store[x][y]) {
</span><span class='line'>      store[x][y] = value;
</span><span class='line'>      radi[x][y] = radius;
</span><span class='line'>    } else {
</span><span class='line'>      store[x][y] += value;
</span><span class='line'>    }
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>_getInternalData: function() {
</span><span class='line'>  return { 
</span><span class='line'>    max: this._max,
</span><span class='line'>    min: this._min, 
</span><span class='line'>    data: this._data,
</span><span class='line'>    radi: this._radi 
</span><span class='line'>  };
</span><span class='line'>},</span></code></pre></td></tr></table></div></figure>


<h2>renderall 渲染</h2>

<p>这个是重点，下面一个步骤一个步骤的讲。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>renderAll: function(data) {
</span><span class='line'>  // reset render boundaries
</span><span class='line'>  this._clear();
</span><span class='line'>  this._drawAlpha(_prepareData(data));
</span><span class='line'>  this._colorize();
</span><span class='line'>},</span></code></pre></td></tr></table></div></figure>


<h3>_prepareData</h3>

<p>把上面合并数据创建的稀疏矩阵，再转回成对象 <code>{ x: ,y: ,value: , radius: }</code> ，然后交给 _drawAlpha 进行画图。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  var _prepareData = function(data) {
</span><span class='line'>    var renderData = [];
</span><span class='line'>    var min = data.min;
</span><span class='line'>    var max = data.max;
</span><span class='line'>    var radi = data.radi;
</span><span class='line'>    var data = data.data;
</span><span class='line'>    
</span><span class='line'>    var xValues = Object.keys(data);
</span><span class='line'>    var xValuesLen = xValues.length;
</span><span class='line'>
</span><span class='line'>    while(xValuesLen--) {
</span><span class='line'>      var xValue = xValues[xValuesLen];
</span><span class='line'>      var yValues = Object.keys(data[xValue]);
</span><span class='line'>      var yValuesLen = yValues.length;
</span><span class='line'>      while(yValuesLen--) {
</span><span class='line'>        var yValue = yValues[yValuesLen];
</span><span class='line'>        var value = data[xValue][yValue];
</span><span class='line'>        var radius = radi[xValue][yValue];
</span><span class='line'>        renderData.push({
</span><span class='line'>          x: xValue,
</span><span class='line'>          y: yValue,
</span><span class='line'>          value: value,
</span><span class='line'>          radius: radius
</span><span class='line'>        });
</span><span class='line'>      }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    return {
</span><span class='line'>      min: min,
</span><span class='line'>      max: max,
</span><span class='line'>      data: renderData
</span><span class='line'>    };
</span><span class='line'>  };</span></code></pre></td></tr></table></div></figure>


<h3>_drawAlpha</h3>

<p>然后根据处理整合后的数据画alpha的圆（由于透明度可以进行叠加处理，shadowCtx.globalAlpha = (value-min)/(max-min); ），同时统计会有数据的最大边界rect。</p>

<p>特定半径的密度衰减圆通过 _getPointTemplate  获得，每个数据以其x,y的坐标为圆心，根据count的百分比叠加模板密度圆的透明度进行绘制。由于透明度的叠加，起到 被影响的点 密度相加的效果。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>_drawAlpha: function(data) {
</span><span class='line'>  var min = this._min = data.min;
</span><span class='line'>  var max = this._max = data.max;
</span><span class='line'>  var data = data.data || [];
</span><span class='line'>  var dataLen = data.length;
</span><span class='line'>  // on a point basis?
</span><span class='line'>  var blur = 1 - this._blur;
</span><span class='line'>
</span><span class='line'>  while(dataLen--) {
</span><span class='line'>
</span><span class='line'>    var point = data[dataLen];
</span><span class='line'>
</span><span class='line'>    var x = point.x;
</span><span class='line'>    var y = point.y;
</span><span class='line'>    var radius = point.radius;
</span><span class='line'>    // if value is bigger than max
</span><span class='line'>    // use max as value
</span><span class='line'>    var value = Math.min(point.value, max);
</span><span class='line'>    var rectX = x - radius;
</span><span class='line'>    var rectY = y - radius;
</span><span class='line'>    var shadowCtx = this.shadowCtx;
</span><span class='line'>
</span><span class='line'>    var tpl;
</span><span class='line'>    if (!this._templates[radius]) {
</span><span class='line'>      this._templates[radius] = tpl = _getPointTemplate(radius, blur);
</span><span class='line'>    } else {
</span><span class='line'>      tpl = this._templates[radius];
</span><span class='line'>    }
</span><span class='line'>    // value from minimum / value range
</span><span class='line'>    // =&gt; [0, 1]
</span><span class='line'>    shadowCtx.globalAlpha = (value-min)/(max-min);
</span><span class='line'>
</span><span class='line'>    shadowCtx.drawImage(tpl, rectX, rectY);
</span><span class='line'>
</span><span class='line'>    // update renderBoundaries
</span><span class='line'>    if (rectX &lt; this._renderBoundaries[0]) {
</span><span class='line'>        this._renderBoundaries[0] = rectX;
</span><span class='line'>      } 
</span><span class='line'>      if (rectY &lt; this._renderBoundaries[1]) {
</span><span class='line'>        this._renderBoundaries[1] = rectY;
</span><span class='line'>      }
</span><span class='line'>      if (rectX + 2*radius &gt; this._renderBoundaries[2]) {
</span><span class='line'>        this._renderBoundaries[2] = rectX + 2*radius;
</span><span class='line'>      }
</span><span class='line'>      if (rectY + 2*radius &gt; this._renderBoundaries[3]) {
</span><span class='line'>        this._renderBoundaries[3] = rectY + 2*radius;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>  }
</span><span class='line'>},
</span></code></pre></td></tr></table></div></figure>


<h3>_colorize</h3>

<p>最后根据rect的边界范围，然后结合palette的颜色条进行染色（palette 是一个 256 * 4（rgba） 的数组）。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>_colorize: function() {
</span><span class='line'>  var x = this._renderBoundaries[0];
</span><span class='line'>  var y = this._renderBoundaries[1];
</span><span class='line'>  var width = this._renderBoundaries[2] - x;
</span><span class='line'>  var height = this._renderBoundaries[3] - y;
</span><span class='line'>  var maxWidth = this._width;
</span><span class='line'>  var maxHeight = this._height;
</span><span class='line'>  var opacity = this._opacity;
</span><span class='line'>  var maxOpacity = this._maxOpacity;
</span><span class='line'>  var minOpacity = this._minOpacity;
</span><span class='line'>  var useGradientOpacity = this._useGradientOpacity;
</span><span class='line'>
</span><span class='line'>  if (x &lt; 0) {
</span><span class='line'>    x = 0;
</span><span class='line'>  }
</span><span class='line'>  if (y &lt; 0) {
</span><span class='line'>    y = 0;
</span><span class='line'>  }
</span><span class='line'>  if (x + width &gt; maxWidth) {
</span><span class='line'>    width = maxWidth - x;
</span><span class='line'>  }
</span><span class='line'>  if (y + height &gt; maxHeight) {
</span><span class='line'>    height = maxHeight - y;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  var img = this.shadowCtx.getImageData(x, y, width, height);
</span><span class='line'>  var imgData = img.data;
</span><span class='line'>  var len = imgData.length;
</span><span class='line'>  var palette = this._palette;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  for (var i = 3; i &lt; len; i+= 4) {
</span><span class='line'>    var alpha = imgData[i];
</span><span class='line'>    var offset = alpha * 4;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    if (!offset) {
</span><span class='line'>      continue;
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    var finalAlpha;
</span><span class='line'>    if (opacity &gt; 0) {
</span><span class='line'>      finalAlpha = opacity;
</span><span class='line'>    } else {
</span><span class='line'>      if (alpha &lt; maxOpacity) {
</span><span class='line'>        if (alpha &lt; minOpacity) {
</span><span class='line'>          finalAlpha = minOpacity;
</span><span class='line'>        } else {
</span><span class='line'>          finalAlpha = alpha;
</span><span class='line'>        }
</span><span class='line'>      } else {
</span><span class='line'>        finalAlpha = maxOpacity;
</span><span class='line'>      }
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    imgData[i-3] = palette[offset];
</span><span class='line'>    imgData[i-2] = palette[offset + 1];
</span><span class='line'>    imgData[i-1] = palette[offset + 2];
</span><span class='line'>    imgData[i] = useGradientOpacity ? palette[offset + 3] : finalAlpha;
</span><span class='line'>
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  img.data = imgData;
</span><span class='line'>  this.ctx.putImageData(img, x, y);
</span><span class='line'>
</span><span class='line'>  this._renderBoundaries = [1000, 1000, 0, 0];
</span><span class='line'>
</span><span class='line'>},</span></code></pre></td></tr></table></div></figure>


<p>最终绘制到canvas上，呈现热图效果。</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebStart的使用以及如何结合JVMTI]]></title>
    <link href="http://winse.github.io/blog/2018/04/07/java-webstart-jnlp-with-jvmti/"/>
    <updated>2018-04-07T00:36:47+08:00</updated>
    <id>http://winse.github.io/blog/2018/04/07/java-webstart-jnlp-with-jvmti</id>
    <content type="html"><![CDATA[<p>当新技术叠加老功能时总能把人折磨一番，新仇加旧恨，原本的老功能也不是熟到透，然后还得去结合新功能，真的简直要人命。</p>

<p>最近有上新功能，把Swing客户端的代码通过webstart的方式发布给客户用，这样用户只需要点击网页上的链接，就可以使用Swing客户端了。感觉体验上还是厉害不少的，只是感觉啊！现实往往更残酷，我们先避开不谈。</p>

<p>首先简单的介绍下webstart、jnlp的一些知识，然后讲讲怎么结合jvmti、以及过程中遇到问题时定位查找解决的一些小知识点。</p>

<h2>JNLP</h2>

<p>为了便于借鉴参考，我这里用的是 <code>jre1.8.0_162</code></p>

<ul>
<li>docs <a href="https://docs.oracle.com/javase/tutorial/deployment/webstart/developing.html">https://docs.oracle.com/javase/tutorial/deployment/webstart/developing.html</a></li>
<li>example <a href="https://docs.oracle.com/javase/tutorial/deployment/webstart/running.html">https://docs.oracle.com/javase/tutorial/deployment/webstart/running.html</a></li>
<li>syntax <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/javaws/developersguide/syntax.html">https://docs.oracle.com/javase/8/docs/technotes/guides/javaws/developersguide/syntax.html</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/opensource/os-ecl-rcpws/index.html">使用 WebStart 发布 RCP 应用程序</a></li>
<li><a href="http://javatechniques.com/blog/launching-java-webstart-from-the-command-line/">Launching Java WebStart from the Command Line</a></li>
</ul>


<p><strong> 签名： </strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jarsigner.exe -keystore Keystore application.jar alias</span></code></pre></td></tr></table></div></figure>


<p><strong> 说说调试： </strong></p>

<ul>
<li>首先你得安装jre，不然Windows的控制面板没有Java这一项！</li>
<li>然后打开 <code>Java控制面板 - 高级 - 调试</code> 的选项。刚开始调试可以同时把 <code>Java控制台</code> 也显示出来</li>
<li>远程调试 选项在 <code>Java控制面板 - Java - Java运行时环境设置 - 运行时参数</code> 添加！</li>
</ul>


<p>参考</p>

<ul>
<li><a href="https://stackoverflow.com/questions/26668723/remote-debugging-java-web-start-under-jvm-1-8">Remote debugging java web start under JVM 1.8</a></li>
<li>Development Tips <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/plugin004.html">https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/plugin004.html</a></li>
<li>Configuration Problems <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/plugin001.html">https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/plugin001.html</a></li>
<li><a href="https://docs.oracle.com/javase/1.5.0/docs/guide/javaws/developersguide/troubleshooting.03.06.html">https://docs.oracle.com/javase/1.5.0/docs/guide/javaws/developersguide/troubleshooting.03.06.html</a></li>
<li><a href="https://stackoverflow.com/questions/686061/how-can-i-debug-applications-under-java-web-start-jnlp">How can I debug applications under Java Web Start (JNLP)?</a></li>
<li><a href="https://blackboard.secure.force.com/publickbarticleview?id=kA770000000CbHX">Java - Associating JNLP files on Windows without using the Control Panel</a></li>
</ul>


<p><strong> 缓冲： </strong></p>

<p>目录</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Users\winse\AppData\LocalLow\Sun\Java\Deployment</span></code></pre></td></tr></table></div></figure>


<p>调出 <em>Java高速缓冲查看器</em> 界面</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>javaws -viewer</span></code></pre></td></tr></table></div></figure>


<p><strong> 证书： </strong></p>

<p>证书是用jre对应目录下的： jre1.8.0_162\lib\security\cacerts</p>

<ul>
<li><a href="https://blogs.oracle.com/jtc/installing-trusted-certificates-into-a-java-keystore">Installing Trusted Certificates into a Java Keystore</a></li>
<li><a href="https://stackoverflow.com/questions/10077714/adding-certificate-to-keystore-using-java-code">Adding certificate to keystore using java code</a></li>
<li><a href="https://stackoverflow.com/questions/4325263/how-to-import-a-cer-certificate-into-a-java-keystore">How to import a .cer certificate into a java keystore?</a></li>
<li><a href="https://web.archive.org/web/20130319003303/http://dzone.com/snippets/ssl-download-certificate-chain">SSL : Download Certificate Chain From A Remote Host And Add The Certificates To A Local Keystore</a></li>
</ul>


<h2>结合JVMTI（仇恨点）</h2>

<p>既然都是agent，那么加载时机也同样有<strong>两种</strong>：启动时（Agent_OnLoad）和运行时Attach（Agent_OnAttach）。</p>

<ul>
<li><a href="http://www.fanyilun.me/2017/07/18/%E8%B0%88%E8%B0%88Java%20Intrumentation%E5%92%8C%E7%9B%B8%E5%85%B3%E5%BA%94%E7%94%A8/">谈谈Java Intrumentation和相关应用</a></li>
<li><a href="http://www.cnblogs.com/lancao008/archive/2012/03/29/2423469.html">基于jvmti方式加密java</a></li>
<li><a href="https://blog.csdn.net/ooppookid/article/details/51809545">Java千百问<em>08JDK详解（013）</em>JVMTI是什么</a></li>
<li><a href="http://www.cnblogs.com/princessd8251/articles/5177698.html">动态替换目标进程的Java类</a></li>
</ul>


<p><strong> 动态loadAgent </strong></p>

<ul>
<li><a href="https://liuzhengyang.github.io/2017/10/21/dynamic-attach-jvm/">dynamic-attach-jvm</a></li>
</ul>


<p><strong> 修改加载 动态链接库dll 的方式： </strong></p>

<p>默认是不能在程序里面动态修改加载库地址的 <a href="https://bugs.java.com/bugdatabase/view_bug.do?bug_id=4280189">JDK-4280189 : loadLibrary() fails to load a shared lib whose path is in java.library.path</a> 。</p>

<ol>
<li>修改环境变量PATH，-Djava.library.path</li>
<li>运行时动态修改java.library.path：usr_paths/sys_paths</li>
<li>把dll拷贝到环境变量PATH的一个路径下面</li>
</ol>


<p>参考</p>

<ul>
<li><a href="https://dzone.com/articles/jni-java-web-start-applet">JNI in Java Web Start / Applet environment</a></li>
<li><a href="https://www.chilkatsoft.com/java-loadlibrary-windows.asp">How to Load a Java Native/Dynamic Library (DLL)</a></li>
<li><a href="http://www.cnblogs.com/princessd8251/articles/5177698.html">动态替换目标进程的Java类</a></li>
</ul>


<p><strong> 解决 DLL依赖 问题的终极完美方法： </strong></p>

<ul>
<li><a href="https://msdn.microsoft.com/en-us/library/7d83bc18.aspx">Search Path Used by Windows to Locate a DLL</a></li>
</ul>


<blockquote><ol>
<li>The directory where the executable module for the current process is located.</li>
<li>The current directory.</li>
<li>The Windows system directory. The GetSystemDirectory function retrieves the path of this directory.</li>
<li>The Windows directory. The GetWindowsDirectory function retrieves the path of this directory.</li>
<li>The directories listed in the PATH environment variable.</li>
</ol>
</blockquote>

<ul>
<li><a href="https://stackoverflow.com/questions/518228/is-it-possible-to-add-a-directory-to-dll-search-path-from-a-batch-file-or-cmd-sc">Is it possible to add a directory to DLL search path from a batch file or cmd script?</a></li>
<li><a href="https://rgrzywinski.wordpress.com/2006/03/27/cant-find-dependent-libraries/">Can’t find dependent libraries</a></li>
</ul>


<blockquote><p>You might need to use something such as Dependency Walker to trace the set of DLL dependencies.</p></blockquote>

<p>把所有的库全部按依赖顺序执行一遍 System.loadLibrary ！！</p>

<p><strong> com.sun.tools.attach.AttachNotSupportedException: no providers installed </strong></p>

<ul>
<li><a href="http://www.chenjianjx.com/myblog/entry/com-sun-tools-attach-attachnotsupportedexception">http://www.chenjianjx.com/myblog/entry/com-sun-tools-attach-attachnotsupportedexception</a></li>
</ul>


<blockquote><ol>
<li>你没有使用sun jdk</li>
<li>你使用了sun jdk，并且JAVA_HOME指向了这个jdk，但是你的path下的&#8221;java&#8221;命令不是这个jdk里面的java，而是操作系统给你默认安装的jre下的，如c:\Program Files\java..</li>
</ol>
</blockquote>

<h2>小结</h2>

<p>最傻瓜式的点击就能运行是最佳体验，我们暂时不能通过控制面板添加 <code>-agentlib:lib</code> 的方式来初始化JVMTI。最终通过以上添加tools.jar的VirtualMachine.loadAgentLibrary运行时attach方式来实现。</p>

<p>&ndash;END</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Map入门指南]]></title>
    <link href="http://winse.github.io/blog/2018/01/30/map-started-guide/"/>
    <updated>2018-01-30T13:37:51+08:00</updated>
    <id>http://winse.github.io/blog/2018/01/30/map-started-guide</id>
    <content type="html"><![CDATA[<p>最近了解了一些Map地图相关的知识点，把学习的资料罗列一下：</p>

<h2>坐标体系</h2>

<ul>
<li><a href="http://lbsyun.baidu.com/index.php?title=coordinate">坐标系</a></li>
<li><a href="http://outdoor.farig.net/help/livemapset.php">http://outdoor.farig.net/help/livemapset.php</a></li>
</ul>


<p>说明：</p>

<ul>
<li>WGS84：为一种大地坐标系，也是目前广泛使用的GPS全球卫星定位系统使用的坐标系。标准的Web墨卡托投影坐标系。</li>
<li>GCJ02：又称火星坐标系，是由中国国家测绘局制定的地理坐标系统，是由WGS84加密后得到的坐标系。指中国国家测绘局制订的加偏Web墨卡托投影，正式名称为GCJ-02，国内可用的地图多数属于这种坐标系。</li>
<li>BD09：为百度坐标系，在GCJ02坐标系基础上再次加密。其中bd09ll表示百度经纬度坐标，bd09mc表示百度墨卡托米制坐标。</li>
</ul>


<h4>地图API</h4>

<p>百度</p>

<ul>
<li><a href="http://api.map.baidu.com/lbsapi/getpoint/index.html">拾取坐标系统</a></li>
<li><a href="http://developer.51cto.com/art/201110/298662.htm">百度地图API开发指南</a></li>
<li><a href="http://developer.baidu.com/map/jsdemo.htm#i8_1">浏览器定位</a></li>
<li><a href="http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html#a6b0">API v2.0 TileLayer</a></li>
<li><a href="http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html#a0b0">API v2.0 Map</a></li>
</ul>


<p>腾讯</p>

<ul>
<li><a href="http://lbs.qq.com/tool/getpoint/index.html">坐标拾取器</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/guide-start.html">http://lbs.qq.com/javascript_v2/guide-start.html</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/demo.html">http://lbs.qq.com/javascript_v2/demo.html</a></li>
<li><a href="http://lbs.qq.com/webservice_v1/guide-gcoder.html">API 逆地址解析(坐标位置描述)</a></li>
<li><a href="http://lbs.qq.com/static_v2/guide-getImage.html">http://lbs.qq.com/static_v2/guide-getImage.html</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/case-run.html#sample-geocoding-reverse">地址反查（坐标查位置）：逆地址解析</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/case-run.html#sample-event-latlng">鼠标移动显示地图坐标信息</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/case-run.html#sample-event-center">拖动地图显示地图中心坐标信息</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/case-run.html#sample-search-circlebounds">周边（圆形区域）检索</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/sample/sample-search-circlebounds.html">http://lbs.qq.com/javascript_v2/sample/sample-search-circlebounds.html</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/doc/maptype.html">http://lbs.qq.com/javascript_v2/doc/maptype.html</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/doc/projection.html">http://lbs.qq.com/javascript_v2/doc/projection.html</a></li>
</ul>


<p>高德</p>

<ul>
<li><a href="http://lbs.amap.com/console/show/picker">坐标获取</a></li>
<li><a href="http://lbs.amap.com/api">http://lbs.amap.com/api</a></li>
<li><a href="https://lbs.amap.com/api/javascript-api/example/geocoder/regeocoding?demo">逆向地理编码（坐标-地址）</a></li>
</ul>


<p>国内其他</p>

<ul>
<li><a href="http://lbs.tianditu.com/server/search.html">http://lbs.tianditu.com/server/search.html</a></li>
</ul>


<p>Google</p>

<ul>
<li><a href="https://www.google.com/maps">获取地理位置的经纬度</a>直接搜就行了</li>
<li><a href="https://support.google.com/maps/answer/18539?co=GENIE.Platform%3DDesktop&amp;hl=zh-Hans">https://support.google.com/maps/answer/18539?co=GENIE.Platform%3DDesktop&amp;hl=zh-Hans</a></li>
<li><a href="https://developers.google.cn/maps/documentation/geocoding/intro?hl=zh-cn#GeocodingResponses">地理编码转换</a></li>
</ul>


<p>NOTE: Google的在Java里面用需要指定证书和代理：</p>

<ul>
<li><a href="https://stackoverflow.com/questions/120797/how-do-i-set-the-proxy-to-be-used-by-the-jvm">https://stackoverflow.com/questions/120797/how-do-i-set-the-proxy-to-be-used-by-the-jvm</a></li>
<li><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html">https://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html</a></li>
</ul>


<p>网页访问一次，把geo的CA证书保存到本地，然后导入到本地的证书库，加入到应用得启动参数里面：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keytool -import -rfc -v -alias geo_ca -keystore truststore -file geo.cer
</span><span class='line'>
</span><span class='line'>java -Djava.net.useSystemProxies=true -Djavax.net.ssl.trustStore=.\security\truststore </span></code></pre></td></tr></table></div></figure>


<h4>各坐标系间的转换</h4>

<p>Example:</p>

<ul>
<li><a href="http://developer.baidu.com/map/jsdemo.htm#a5_1">google坐标转成百度坐标</a></li>
<li><a href="http://developer.baidu.com/map/jsdemo.htm#a5_2">原始坐标转成百度坐标</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/case-run.html#sample-convertor-library">转换百度坐标为腾讯坐标</a></li>
</ul>


<p>坐标转换代码：</p>

<ul>
<li><a href="https://github.com/wandergis/coordtransform">https://github.com/wandergis/coordtransform</a></li>
</ul>


<h4>比例尺</h4>

<p>百度</p>

<ul>
<li><a href="http://lbsyun.baidu.com/index.php?title=jspopular/guide/widget">http://lbsyun.baidu.com/index.php?title=jspopular/guide/widget</a></li>
<li><a href="http://developer.baidu.com/map/jsdemo.htm#f0_4">http://developer.baidu.com/map/jsdemo.htm#f0_4</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>map.addControl(new BMap.ScaleControl());
</span><span class='line'>map.enableScrollWheelZoom();   //启用滚轮放大缩小，默认禁用
</span><span class='line'>map.enableContinuousZoom();    //启用地图惯性拖拽，默认禁用</span></code></pre></td></tr></table></div></figure>


<p>左下角标注的尺寸包括一个数字加一条线段，就是地图上与<strong>那条线等长的距离</strong>的实际距离为数字表示的长度。假设长度为一厘米，那就是说那一厘米在地图上同等长度实际是20m的距离，比例为1:2000。</p>

<p>在百度地图API中，平面坐标是以最大级别18级为基准的。就是说在<strong>18级平面坐标的一个单位就代表了屏幕上的1个像素</strong> （详细的内容后面讲，可以参考<a href="https://my.oschina.net/bv10000/blog/644520">百度地图API详解之地图坐标系统</a>）。</p>

<p>Android里面计算百度比例尺的方式：取两个点获取它们的经纬度，然后算两个点之间的距离。</p>

<ul>
<li><a href="http://blog.csdn.net/mnorst/article/details/12975413">百度地图和谷歌地图的比例尺和分辨率</a></li>
<li><a href="http://blog.csdn.net/mad1989/article/details/9361983">百度、google、高德 地图比例尺功能实现</a></li>
</ul>


<p>NOTE: 百度地图SDK还提供了标注工具(PushpinTool)，测距工具(DistanceTool)。</p>

<p>Google</p>

<ul>
<li>通过手动算出各级的比例尺 <a href="http://www.360doc.com/content/15/0319/13/9009195_456410364.shtml">http://www.360doc.com/content/15/0319/13/9009195_456410364.shtml</a></li>
</ul>


<p>Bing</p>

<ul>
<li><a href="https://msdn.microsoft.com/en-us/library/aa940990.aspx">https://msdn.microsoft.com/en-us/library/aa940990.aspx</a></li>
<li><a href="https://blogs.bing.com/maps/2006/02/25/map-control-zoom-levels-gt-resolution">https://blogs.bing.com/maps/2006/02/25/map-control-zoom-levels-gt-resolution</a></li>
</ul>


<h2>深入了解地图 - 瓦片</h2>

<ul>
<li><a href="https://my.oschina.net/bv10000/blog/644520">百度地图API详解之地图坐标系统</a> <a href="http://www.jiazhengblog.com/blog/2011/07/02/289/">##</a></li>
<li><a href="https://segmentfault.com/a/1190000011276788">瓦片地图原理</a></li>
<li><a href="https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames">Mercator projection</a></li>
<li><a href="http://cntchen.github.io/2016/05/09/%E5%9B%BD%E5%86%85%E4%B8%BB%E8%A6%81%E5%9C%B0%E5%9B%BE%E7%93%A6%E7%89%87%E5%9D%90%E6%A0%87%E7%B3%BB%E5%AE%9A%E4%B9%89%E5%8F%8A%E8%AE%A1%E7%AE%97%E5%8E%9F%E7%90%86/">国内主要地图瓦片坐标系定义及计算原理</a></li>
<li><a href="http://blog.csdn.net/evkj2013/article/details/12855889">OpenStreetMap/Google/百度/Bing瓦片地图服务(TMS) </a></li>
<li><a href="http://blog.csdn.net/mygisforum/article/details/7582449">Google 地图切片URL地址解析 </a></li>
<li><a href="http://blog.csdn.net/mygisforum/article/details/8162751">Tiles à la Google Maps: Coordinates, Tile Bounds and Projection</a></li>
<li><a href="http://blog.csdn.net/mygisforum/article/details/22997879">腾讯与百度地图瓦片规则分析</a></li>
<li><a href="http://cntchen.github.io/2016/05/09/%E7%99%BE%E5%BA%A6JavaScirpt%20%20API%E4%B8%AD%E7%BB%8F%E7%BA%AC%E5%BA%A6%E5%9D%90%E6%A0%87%E8%BD%AC%E7%93%A6%E7%89%87%E5%9D%90%E6%A0%87bug/">百度JavaScript API中经纬度坐标转瓦片坐标bug</a></li>
<li><a href="http://blog.csdn.net/fredricen/article/details/77189453">2017版高德地图瓦片分析</a></li>
</ul>


<p>各种tile的地址路径</p>

<ul>
<li><a href="https://github.com/CntChen/tile-lnglat-transform">https://github.com/CntChen/tile-lnglat-transform</a></li>
<li>各种tile的地址路径 <a href="https://github.com/brandonxiang/MapViewer/blob/master/app.js">https://github.com/brandonxiang/MapViewer/blob/master/app.js</a></li>
<li><a href="https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Java">https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Java</a></li>
</ul>


<p><a href="http://apis.map.qq.com/jsapi?qt=translate&amp;type=3&amp;points=113.338191,23.138992&amp;output=jsonp&amp;pf=jsapi&amp;ref=jsapi&amp;cb=qq.maps._svcb3.cbjcznrony1">腾讯&#8221;矢量&#8221;地图 - 通过JSON传数据画Canvas</a></p>

<h2>国内百度腾讯网页端的实现</h2>

<p>现在的地图基本都是使用瓦片技术，计算步骤如下:</p>

<ul>
<li>首先，根据投影（墨卡托投影）把 经纬度（度） 转成 平面坐标（m）；</li>
<li>然后，更具比例尺把 平面坐标 转成 像素坐标；</li>
<li>最后，根据坐标的平移把窗口内的瓦片从服务端下载并进行展示。</li>
</ul>


<p>通过JS代码了解地图的实现：</p>

<h4>百度</h4>

<p>打开一个百度的应用 <a href="http://api.map.baidu.com/lbsapi/getpoint/index.html">http://api.map.baidu.com/lbsapi/getpoint/index.html</a> 然后在调试窗口运行转换经纬度的代码，然后进到对应的代码，打断点，然后艰辛进行与混淆的代码死磕！</p>

<p><img src="http://winse.github.io/images/blogs/baidu-map-debug.png" alt="" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var projection =new BMap.MercatorProjection();
</span><span class='line'>var point = projection.lngLatToPoint(new BMap.Point(113.338191,23.138992));
</span><span class='line'>point
</span><span class='line'>Q {x: 12616886.99, y: 2631894}
</span><span class='line'>
</span><span class='line'>var projection =new BMap.MercatorProjection();
</span><span class='line'>var point = projection.pointToLngLat(new BMap.Pixel(12616886.99,2631894));
</span><span class='line'>point
</span><span class='line'>H {lng: 113.338191, lat: 23.138992}
</span></code></pre></td></tr></table></div></figure>


<p>从代码上看还是不难的，但是里面有一堆魔法数字完全不懂。</p>

<p>如果仅仅获取瓦片 <a href="https://github.com/CntChen/tile-lnglat-transform/">https://github.com/CntChen/tile-lnglat-transform/</a> 推荐使用这个项目。</p>

<p>这里仅仅是经纬度转换为平面坐标(m)的过程。我们在源码中查找 getTilesUrl 在5901行打个断点，然后在回到网页，移动一下地图。接下来，就可以调试整个过程了。</p>

<p><img src="http://winse.github.io/images/blogs/baidu-map-getTilesUrl.png" alt="" /></p>

<p>注意标识的两处，是进行层级缩放、计算出瓦片编号的代码。</p>

<h4>腾讯</h4>

<p>看过了百度的，再看腾讯的。然鹅并没有觉得轻松啊，两种不同的坐标系，做法差别还是挺大的。不过从命名上看腾讯算学术派的了。</p>

<ul>
<li>Projection 对象规范 <a href="http://lbs.qq.com/javascript_v2/doc/projection.html">http://lbs.qq.com/javascript_v2/doc/projection.html</a></li>
<li><a href="http://lbs.qq.com/javascript_v2/doc/maptype.html">http://lbs.qq.com/javascript_v2/doc/maptype.html</a></li>
</ul>


<p>打开 <a href="http://lbs.qq.com/javascript_v2/case-run.html#sample-geocoding-reverse">http://lbs.qq.com/javascript_v2/case-run.html#sample-geocoding-reverse</a> ，在 map.qq.com/js/v2.js 的 apiLoad 处打断点进行到真正的map的js文件。</p>

<p><img src="http://winse.github.io/images/blogs/tencent-debug-apiLoad.png" alt="" /></p>

<p>然后查找 fromLatLngToPoint ，再在界面动一下，就可以调试整个过程：</p>

<p><img src="http://winse.github.io/images/blogs/tencent-debug-fromLatLngToPoint.png" alt="" /></p>

<ul>
<li>fromLatLngToPoint</li>
<li>fromPointToLatLng</li>
</ul>


<p>调式的时刻可以顺便看看整个调用链，会发现：</p>

<p><img src="http://winse.github.io/images/blogs/tencent-debug-fromDivPixelToLatLng.png" alt="" /></p>

<ul>
<li>fromDivPixelToLatLng</li>
<li>fromLatLngToDivPixel</li>
</ul>


<p>fromDivPixelToLatLng的条用链，以及数据的传递如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fromDivPixelToLatLng 
</span><span class='line'>=&gt;
</span><span class='line'>
</span><span class='line'>-&gt;Rh 转成相对位置转成绝对坐标后，传入到Mc
</span><span class='line'>[
</span><span class='line'>a
</span><span class='line'>P {x: 930, y: -471}
</span><span class='line'>c
</span><span class='line'>ia {width: 1725872.4160540444, height: 794188.9248479041}
</span><span class='line'>b
</span><span class='line'>true
</span><span class='line'>]
</span><span class='line'>
</span><span class='line'>-&gt;Mc(g, a, h, f)  &lt;-&gt;  Gf 缩放后，调用fromPointToLatLng
</span><span class='line'>[
</span><span class='line'>g
</span><span class='line'>Sh {a: P, b: 0.7111111111111111, c: 40.74366543152521, d: true}
</span><span class='line'>a
</span><span class='line'>P {x: 1726802, y: 793718}
</span><span class='line'>h
</span><span class='line'>13
</span><span class='line'>f
</span><span class='line'>true
</span><span class='line'>]
</span><span class='line'>
</span><span class='line'>-&gt;fromPointToLatLng(Ad, e)
</span><span class='line'>[
</span><span class='line'>Ad
</span><span class='line'>P {x: 210.791259765625, y: 96.889404296875}
</span><span class='line'>e
</span><span class='line'>true
</span><span class='line'>]
</span><span class='line'>
</span><span class='line'>-&gt; Return value : u
</span><span class='line'>    lat:40.02892889530204
</span><span class='line'>    lng:116.42520904541016
</span></code></pre></td></tr></table></div></figure>


<p>从 坐标计算 经纬度 反过来了：</p>

<p><img src="http://winse.github.io/images/blogs/tencent-debug-fromPointToLatLng.png" alt="" /></p>

<p>腾讯的计算过程直接把 <strong>转平面坐标和转像素坐标</strong> 两个过程合并了。<strong>通过 fromLatLngToPoint 得到就是一个 像素坐标 的值</strong>，然后通过缩放就可以得到<strong>当前层级级别</strong>的 <strong>像素坐标</strong> 。</p>

<p>查找瓦片地址的代码，直接在代码里面查找 <code>x=</code> 在37823处代码都打断点，刷新重新加载瓦片就会进到断点。</p>

<p>然后查看调用链，</p>

<p><img src="http://winse.github.io/images/blogs/tencent-debug-tile.png" alt="" /></p>

<p>详细跟踪的话，会发现，每次加载都会计算左上角和右下角两个点的像素坐标 （窗口的bounds）。计算要加载的瓦片时，直接用最大减最小除以256（每个瓦片的像素），就得到要加载瓦片的编号了。</p>

<p>用了几天比较肤浅的跟了下QQ地图的功能，如果没有混淆应该看起来会爽很多。。。没有很深层次的东西，仅仅是一个源码调试过程的记载，一些理论原理的知识请查完文章中的链接。</p>

<h2>其他</h2>

<ul>
<li><a href="http://www.gpsspg.com/bs/sql.htm">http://www.gpsspg.com/bs/sql.htm</a> 基站数据</li>
<li><a href="http://greatmaps.codeplex.com/">http://greatmaps.codeplex.com/</a></li>
<li><a href="https://my.oschina.net/zhajiang/blog/424157">Leaflet调用腾讯地图</a></li>
</ul>


<p>&ndash;END</p>
]]></content>
  </entry>
  
</feed>
